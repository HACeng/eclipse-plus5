commit ded04e392e069de530da9b93e50b16814316df0c
Author: Stefan Xenos <sxenos@gmail.com>
Date:   Sat Jan 14 13:28:17 2017 -0500

    Bug 510467 - Store bindings hierarchically
    
    Change-Id: I435560a2766441ebda01d41d0df64ea71e459e9c

3	8	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java
4	8	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/indexer/Indexer.java
3	3	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/JavaIndex.java
1	14	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdBinding.java
2	2	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdMethod.java
8	8	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdResourceFile.java
13	1	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdType.java
2	2	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdVariable.java
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java
index e97779d..f9675fd 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java
@@ -29,7 +29,6 @@ import org.eclipse.jdt.core.compiler.CharOperation;
 import org.eclipse.jdt.internal.compiler.impl.CompilerOptions;
 import org.eclipse.jdt.internal.core.nd.IReader;
 import org.eclipse.jdt.internal.core.nd.java.JavaIndex;
-import org.eclipse.jdt.internal.core.nd.java.NdBinding;
 import org.eclipse.jdt.internal.core.nd.java.NdResourceFile;
 import org.eclipse.jdt.internal.core.nd.java.NdType;
 import org.eclipse.jdt.internal.core.nd.java.NdZipEntry;
@@ -106,13 +105,9 @@ public class JarPackageFragmentRoot extends PackageFragmentRoot {
 							}
 	
 							// Locate all the classfile entries
-							for (NdBinding binding : resourceFile.getBindings()) {
-								if (binding instanceof NdType) {
-									NdType type = (NdType) binding;
-	
-									String path = new String(type.getTypeId().getBinaryName()) + ".class"; //$NON-NLS-1$
-									initRawPackageInfo(rawPackageInfo, path, false, compliance);
-								}
+							for (NdType type : resourceFile.getTypes()) {	
+								String path = new String(type.getTypeId().getBinaryName()) + ".class"; //$NON-NLS-1$
+								initRawPackageInfo(rawPackageInfo, path, false, compliance);
 							}
 						}
 					}
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/indexer/Indexer.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/indexer/Indexer.java
index e2cf8f3..5ac0308 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/indexer/Indexer.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/indexer/Indexer.java
@@ -72,7 +72,6 @@ import org.eclipse.jdt.internal.core.nd.java.FileFingerprint;
 import org.eclipse.jdt.internal.core.nd.java.FileFingerprint.FingerprintTestResult;
 import org.eclipse.jdt.internal.core.nd.java.JavaIndex;
 import org.eclipse.jdt.internal.core.nd.java.JavaNames;
-import org.eclipse.jdt.internal.core.nd.java.NdBinding;
 import org.eclipse.jdt.internal.core.nd.java.NdResourceFile;
 import org.eclipse.jdt.internal.core.nd.java.NdType;
 import org.eclipse.jdt.internal.core.nd.java.NdTypeId;
@@ -475,19 +474,16 @@ public final class Indexer {
 					break;
 				}
 		
-				int numChildren = toDelete.getBindingCount();
+				int numChildren = toDelete.getTypeCount();
 				deletionMonitor.setWorkRemaining(numChildren + 1);
 				if (numChildren == 0) {
 					break;
 				}
 
-				NdBinding nextDeletion = toDelete.getBinding(numChildren - 1);
+				NdType nextDeletion = toDelete.getType(numChildren - 1);
 				if (DEBUG_INSERTIONS) {
-					if (nextDeletion instanceof NdType) {
-						NdType type = (NdType)nextDeletion;
-						Package.logInfo("Deleting " + type.getTypeId().getFieldDescriptor().getString() + " from "  //$NON-NLS-1$//$NON-NLS-2$
-								+ new String(toDelete.getLocation().getString()) + " " + toDelete.address); //$NON-NLS-1$
-					}
+					Package.logInfo("Deleting " + nextDeletion.getTypeId().getFieldDescriptor().getString() + " from "  //$NON-NLS-1$//$NON-NLS-2$
+							+ new String(toDelete.getLocation().getString()) + " " + toDelete.address); //$NON-NLS-1$
 				}
 				nextDeletion.delete();
 			} finally {
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/JavaIndex.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/JavaIndex.java
index 49670f8..dc0d730 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/JavaIndex.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/JavaIndex.java
@@ -34,9 +34,9 @@ import org.eclipse.jdt.internal.core.nd.util.CharArrayUtils;
 
 public class JavaIndex {
 	// Version constants
-	static final int CURRENT_VERSION = Nd.version(1, 45);
-	static final int MAX_SUPPORTED_VERSION = Nd.version(1, 45);
-	static final int MIN_SUPPORTED_VERSION = Nd.version(1, 45);
+	static final int CURRENT_VERSION = Nd.version(1, 46);
+	static final int MAX_SUPPORTED_VERSION = Nd.version(1, 46);
+	static final int MIN_SUPPORTED_VERSION = Nd.version(1, 46);
 
 	// Fields for the search header
 	public static final FieldSearchIndex<NdResourceFile> FILES;
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdBinding.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdBinding.java
index 25938a1..3c48fc9 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdBinding.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdBinding.java
@@ -17,7 +17,6 @@ import org.eclipse.jdt.core.Flags;
 import org.eclipse.jdt.internal.core.nd.Nd;
 import org.eclipse.jdt.internal.core.nd.NdNode;
 import org.eclipse.jdt.internal.core.nd.field.FieldInt;
-import org.eclipse.jdt.internal.core.nd.field.FieldManyToOne;
 import org.eclipse.jdt.internal.core.nd.field.FieldOneToMany;
 import org.eclipse.jdt.internal.core.nd.field.StructDef;
 import org.eclipse.jdt.internal.core.util.CharArrayBuffer;
@@ -28,7 +27,6 @@ import org.eclipse.jdt.internal.core.util.CharArrayBuffer;
 public abstract class NdBinding extends NdNode implements IAdaptable {
 	public static final FieldInt MODIFIERS;
 	public static final FieldOneToMany<NdTypeParameter> TYPE_PARAMETERS;
-	public static final FieldManyToOne<NdResourceFile> FILE;
 	public static final FieldOneToMany<NdVariable> VARIABLES;
 
 	@SuppressWarnings("hiding")
@@ -38,7 +36,6 @@ public abstract class NdBinding extends NdNode implements IAdaptable {
 		type = StructDef.create(NdBinding.class, NdNode.type);
 		MODIFIERS = type.addInt();
 		TYPE_PARAMETERS = FieldOneToMany.create(type, NdTypeParameter.PARENT);
-		FILE = FieldManyToOne.createOwner(type, NdResourceFile.ALL_NODES);
 		VARIABLES = FieldOneToMany.create(type, NdVariable.PARENT);
 		type.done();
 	}
@@ -47,10 +44,8 @@ public abstract class NdBinding extends NdNode implements IAdaptable {
 		super(nd, address);
 	}
 
-	public NdBinding(Nd nd, NdResourceFile resource) {
+	public NdBinding(Nd nd) {
 		super(nd);
-
-		FILE.put(nd, this.address, resource);
 	}
 
 	public List<NdVariable> getVariables() {
@@ -88,14 +83,6 @@ public abstract class NdBinding extends NdNode implements IAdaptable {
 		return getNodeType();
 	}
 
-	public void setFile(NdResourceFile file) {
-		FILE.put(getNd(), this.address, file);
-	}
-
-	public NdResourceFile getFile() {
-		return FILE.get(getNd(), this.address);
-	}
-
 	public char[][] getTypeParameterSignatures() {
 		List<NdTypeParameter> parameters = getTypeParameters();
 		char[][] result = new char[parameters.size()][];
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdMethod.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdMethod.java
index 537c357..e3a5730 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdMethod.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdMethod.java
@@ -40,7 +40,7 @@ public class NdMethod extends NdBinding {
 		type = StructDef.create(NdMethod.class, NdBinding.type);
 		METHOD_ID = FieldManyToOne.create(type, NdMethodId.METHODS);
 		METHOD_FLAGS = type.addShort();
-		PARENT = FieldManyToOne.create(type, NdType.METHODS);
+		PARENT = FieldManyToOne.createOwner(type, NdType.METHODS);
 		PARAMETERS = FieldOneToMany.create(type, NdMethodParameter.PARENT);
 		DECLARED_VARIABLES = FieldOneToMany.create(type, NdVariable.DECLARING_METHOD);
 		DEFAULT_VALUE = FieldOneToOne.create(type, NdConstant.class, NdConstant.PARENT_METHOD);
@@ -58,7 +58,7 @@ public class NdMethod extends NdBinding {
 	}
 
 	public NdMethod(NdType parent) {
-		super(parent.getNd(), parent.getFile());
+		super(parent.getNd());
 
 		PARENT.put(getNd(), this.address, parent);
 	}
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdResourceFile.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdResourceFile.java
index ee64497..925d717 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdResourceFile.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdResourceFile.java
@@ -36,7 +36,7 @@ import org.eclipse.jdt.internal.core.nd.field.StructDef;
  */
 public class NdResourceFile extends NdTreeNode {
 	public static final FieldSearchKey<JavaIndex> FILENAME;
-	public static final FieldOneToMany<NdBinding> ALL_NODES;
+	public static final FieldOneToMany<NdType> TYPES;
 	public static final FieldLong TIME_LAST_USED;
 	public static final FieldLong TIME_LAST_SCANNED;
 	public static final FieldLong SIZE_LAST_SCANNED;
@@ -59,7 +59,7 @@ public class NdResourceFile extends NdTreeNode {
 	static {
 		type = StructDef.create(NdResourceFile.class, NdTreeNode.type);
 		FILENAME = FieldSearchKey.create(type, JavaIndex.FILES);
-		ALL_NODES = FieldOneToMany.create(type, NdBinding.FILE, 16);
+		TYPES = FieldOneToMany.create(type, NdType.FILE, 16);
 		TIME_LAST_USED = type.addLong();
 		TIME_LAST_SCANNED = type.addLong();
 		SIZE_LAST_SCANNED = type.addLong();
@@ -309,16 +309,16 @@ public class NdResourceFile extends NdTreeNode {
 		TIME_LAST_SCANNED.put(getNd(), this.address, 0);
 	}
 
-	public int getBindingCount() {
-		return ALL_NODES.size(getNd(), this.address);
+	public int getTypeCount() {
+		return TYPES.size(getNd(), this.address);
 	}
 
-	public List<NdBinding> getBindings() {
-		return ALL_NODES.asList(getNd(), this.address);
+	public List<NdType> getTypes() {
+		return TYPES.asList(getNd(), this.address);
 	}
 
-	public NdBinding getBinding(int index) {
-		return ALL_NODES.get(getNd(), this.address, index);
+	public NdType getType(int index) {
+		return TYPES.get(getNd(), this.address, index);
 	}
 
 	public String toString() {
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdType.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdType.java
index 5d28363..d83f37a 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdType.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdType.java
@@ -25,6 +25,7 @@ import org.eclipse.jdt.internal.core.nd.field.StructDef;
 import org.eclipse.jdt.internal.core.nd.util.CharArrayUtils;
 
 public class NdType extends NdBinding {
+	public static final FieldManyToOne<NdResourceFile> FILE;
 	public static final FieldManyToOne<NdTypeId> TYPENAME;
 	public static final FieldManyToOne<NdTypeSignature> SUPERCLASS;
 	public static final FieldOneToMany<NdTypeInterface> INTERFACES;
@@ -50,6 +51,7 @@ public class NdType extends NdBinding {
 
 	static {
 		type = StructDef.create(NdType.class, NdBinding.type);
+		FILE = FieldManyToOne.createOwner(type, NdResourceFile.TYPES);
 		TYPENAME = FieldManyToOne.create(type, NdTypeId.TYPES);
 		DECLARING_TYPE = FieldManyToOne.create(type, NdTypeId.DECLARED_TYPES);
 		INTERFACES = FieldOneToMany.create(type, NdTypeInterface.APPLIES_TO);
@@ -77,7 +79,9 @@ public class NdType extends NdBinding {
 	}
 
 	public NdType(Nd nd, NdResourceFile resource) {
-		super(nd, resource);
+		super(nd);
+
+		FILE.put(nd, this.address, resource);
 	}
 
 	/**
@@ -95,6 +99,14 @@ public class NdType extends NdBinding {
 		TYPENAME.put(getNd(), this.address, typeId);
 	}
 
+	public void setFile(NdResourceFile file) {
+		FILE.put(getNd(), this.address, file);
+	}
+
+	public NdResourceFile getFile() {
+		return FILE.get(getNd(), this.address);
+	}
+
 	/**
 	 * Sets the source name for this type.
 	 */
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdVariable.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdVariable.java
index e85f805..fabc0e8 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdVariable.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdVariable.java
@@ -45,7 +45,7 @@ public class NdVariable extends NdBinding {
 		TYPE = FieldManyToOne.create(type, NdTypeSignature.VARIABLES_OF_TYPE);
 		VARIABLE_ID = type.addInt();
 		DECLARING_METHOD = FieldManyToOne.create(type, NdMethod.DECLARED_VARIABLES);
-		PARENT = FieldManyToOne.create(type, NdBinding.VARIABLES);
+		PARENT = FieldManyToOne.createOwner(type, NdBinding.VARIABLES);
 		NAME = type.addString();
 		CONSTANT = FieldOneToOne.create(type, NdConstant.class, NdConstant.PARENT_VARIABLE);
 		TAG_BITS = type.addLong();
@@ -60,7 +60,7 @@ public class NdVariable extends NdBinding {
 	}
 
 	public NdVariable(NdBinding parent) {
-		super(parent.getNd(), parent.getFile());
+		super(parent.getNd());
 
 		PARENT.put(getNd(), this.address, parent);
 	}
