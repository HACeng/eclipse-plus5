commit 09617092d586fc57d56d7255b395176bf3d6b1e7
Author: Stephan Herrmann <stephan.herrmann@berlin.de>
Date:   Tue Jan 27 21:36:42 2015 +0100

    Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in
    BecomeWorkingCopyOperation
    
    Change-Id: Ifb341cd30ef849f0923dec86496c72a744b5f6cf
    Signed-off-by: Stephan Herrmann <stephan.herrmann@berlin.de>

7	1	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java
17	13	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java
5	2	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java
17	11	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
5	1	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java
index 6a382cd..a4d286c 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2014 IBM Corporation and others.
+ * Copyright (c) 2004, 2015 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,8 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for
+ *								Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in BecomeWorkingCopyOperation
  *******************************************************************************/
 package org.eclipse.jdt.core.dom;
 
@@ -1105,6 +1107,10 @@ public class ASTParser {
 					NodeSearcher searcher = null;
 					org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit = null;
 					WorkingCopyOwner wcOwner = this.workingCopyOwner;
+					if (this.typeRoot instanceof ClassFileWorkingCopy) {
+						// special case: class file mimics as compilation unit, but that would use a wrong file name below, so better unwrap now:
+						this.typeRoot = ((ClassFileWorkingCopy) this.typeRoot).classFile;
+					}
 					if (this.typeRoot instanceof ICompilationUnit) {
 							/*
 							 * this.compilationUnitSource is an instance of org.eclipse.jdt.internal.core.CompilationUnit that implements
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java
index 7f5be9a..cf06d68 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BecomeWorkingCopyOperation.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2012 IBM Corporation and others.
+ * Copyright (c) 2000, 2015 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,12 +7,13 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for
+ *								Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in BecomeWorkingCopyOperation
  *******************************************************************************/
 package org.eclipse.jdt.internal.core;
 
+import org.eclipse.core.resources.IResource;
 import org.eclipse.jdt.core.*;
-import org.eclipse.jdt.core.IJavaElement;
-import org.eclipse.jdt.core.JavaModelException;
 
 /**
  * Switch and ICompilationUnit to working copy mode
@@ -43,16 +44,19 @@ public class BecomeWorkingCopyOperation extends JavaModelOperation {
 			delta.added(workingCopy);
 			addDelta(delta);
 		} else {
-			if (workingCopy.getResource().isAccessible()) {
-				// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy
-				JavaElementDelta delta = new JavaElementDelta(getJavaModel());
-				delta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
-				addDelta(delta);
-			} else {
-				// report an ADDED delta
-				JavaElementDelta delta = new JavaElementDelta(getJavaModel());
-				delta.added(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
-				addDelta(delta);
+			IResource resource = workingCopy.getResource();
+			if (resource != null) {
+				if (resource.isAccessible()) {
+					// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy
+					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
+					delta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
+					addDelta(delta);
+				} else {
+					// report an ADDED delta
+					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
+					delta.added(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
+					addDelta(delta);
+				}
 			}
 		}
 
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java
index fde3a86..7f9b93e 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2015 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,8 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for
+ *								Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in BecomeWorkingCopyOperation
  *******************************************************************************/
 package org.eclipse.jdt.internal.core;
 
@@ -199,7 +201,8 @@ public boolean existsUsingJarTypeCache() {
 			// if parent is open, this class file must be in its children
 			IJavaElement[] children = parentInfo.getChildren();
 			for (int i = 0, length = children.length; i < length; i++) {
-				if (this.name.equals(((ClassFile) children[i]).name))
+				IJavaElement child = children[i];
+				if (child instanceof ClassFile && this.name.equals(((ClassFile) child).name))
 					return true;
 			}
 			return false;
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
index 4e3409d..08f5717 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DiscardWorkingCopyOperation.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2010 IBM Corporation and others.
+ * Copyright (c) 2000, 2015 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for
+ *								Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in BecomeWorkingCopyOperation
  *******************************************************************************/
 package org.eclipse.jdt.internal.core;
 
+import org.eclipse.core.resources.IResource;
 import org.eclipse.jdt.core.IJavaElement;
 import org.eclipse.jdt.core.IJavaElementDelta;
 import org.eclipse.jdt.core.IJavaProject;
@@ -42,16 +45,19 @@ public class DiscardWorkingCopyOperation extends JavaModelOperation {
 				addDelta(delta);
 				removeReconcileDelta(workingCopy);
 			} else {
-				if (workingCopy.getResource().isAccessible()) {
-					// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy
-					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
-					delta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
-					addDelta(delta);
-				} else {
-					// report a REMOVED delta
-					JavaElementDelta delta = new JavaElementDelta(getJavaModel());
-					delta.removed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
-					addDelta(delta);
+				IResource resource = workingCopy.getResource();
+				if (resource != null) {
+					if (resource.isAccessible()) {
+						// report a F_PRIMARY_WORKING_COPY change delta for a primary working copy
+						JavaElementDelta delta = new JavaElementDelta(getJavaModel());
+						delta.changed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
+						addDelta(delta);
+					} else {
+						// report a REMOVED delta
+						JavaElementDelta delta = new JavaElementDelta(getJavaModel());
+						delta.removed(workingCopy, IJavaElementDelta.F_PRIMARY_WORKING_COPY);
+						addDelta(delta);
+					}
 				}
 			}
 		}
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java
index 4e7efc5..58a3820 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2015 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,8 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for
+ *								Bug 458577 - IClassFile.getWorkingCopy() may lead to NPE in BecomeWorkingCopyOperation
  *******************************************************************************/
 package org.eclipse.jdt.internal.core.util;
 
@@ -1516,6 +1518,8 @@ public class Util {
 				return (JavaElement) declaringMethod.getTypeParameter(typeVariableName);
 			} else {
 				IType declaringType = (IType) getUnresolvedJavaElement((TypeBinding) declaringElement, workingCopyOwner, bindingsToNodes);
+				if (declaringType == null)
+					return null;
 				return (JavaElement) declaringType.getTypeParameter(typeVariableName);
 			}
 		} else {
