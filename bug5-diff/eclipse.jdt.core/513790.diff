commit 2aeb2055671021b72a18fc58e607b94d6506bfda
Author: Andrey Loskutov <loskutov@gmx.de>
Date:   Sun Mar 19 20:09:24 2017 +0100

    Bug 513790 - Compiler warnings in I20170316-2000 after moving to M6
    compiler
    
    Change-Id: I1dd78bf901b6bae2d687892e7c0fad182d056311
    Signed-off-by: Andrey Loskutov <loskutov@gmx.de>

2	2	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java
1	1	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/NdNodeTypeRegistry.java
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java
index b8ebe83..4d4c01e 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java
@@ -1256,8 +1256,8 @@ class BoundSet {
 			}
 		}
 		for (InferenceVariable iv : outerVariables) {
-			three = this.boundsPerVariable.get(outerVariables);
-			if (three != null) {
+			three = this.boundsPerVariable.get(iv);
+			if (three != null && three.sameBounds != null) {
 				for (TypeBound bound : three.sameBounds)
 					if (TypeBinding.equalsEquals(bound.right, variable))
 						return iv;
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/NdNodeTypeRegistry.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/NdNodeTypeRegistry.java
index 20b31b6..d15b779 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/NdNodeTypeRegistry.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/NdNodeTypeRegistry.java
@@ -36,7 +36,7 @@ public class NdNodeTypeRegistry<R> {
 		short shortTypeId = (short)typeId;
 		String fullyQualifiedClassName = toRegister.getElementClass().getName();
 
-		if (this.types.containsKey(typeId) || this.reserved.get(typeId)) {
+		if (this.types.containsKey(shortTypeId) || this.reserved.get(typeId)) {
 			throw new IllegalArgumentException(
 					"The type id " + typeId + " for class " + fullyQualifiedClassName + " is already in use."); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 		}
commit c359a719bbc1fff7132cb46a27e7b625c2fe5262
Author: Sasikanth Bharadwaj <sasikanth.bharadwaj@in.ibm.com>
Date:   Wed Apr 5 10:33:42 2017 +0530

    bug 513790 Compiler warnings in I20170316-2000 after moving to M6
    compiler
    
    Change-Id: Ic4e122e6844f98ce9ad19ba3dad4923c1cb6acfc

3	2	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/ChangeCollector.java
2	1	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/ChangeCollector.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/ChangeCollector.java
index c47fd85..fce7e74 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/ChangeCollector.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/ChangeCollector.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2017 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -368,7 +368,8 @@ public class ChangeCollector {
 	private void getAllTypesFromHierarchy(JavaElement element, ArrayList allTypes) {
 		switch (element.getElementType()) {
 			case IJavaElement.COMPILATION_UNIT:
-				ArrayList types = this.hierarchy.files.get(element);
+				IOpenable o = (IOpenable) element;
+				ArrayList types = this.hierarchy.files.get(o);
 				if (types != null) {
 					allTypes.addAll(types);
 				}
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java
index aefb341..43aa70c 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java
@@ -1042,7 +1042,8 @@ protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement ele
 	} else if (element instanceof ClassFile) {
 		switch (delta.getKind()) {
 			case IJavaElementDelta.REMOVED:
-				return this.files.get(element) != null;
+				IOpenable o = (IOpenable) element;
+				return this.files.get(o) != null;
 			case IJavaElementDelta.ADDED:
 				IType type = ((ClassFile)element).getType();
 				String typeName = type.getElementName();
commit 7fde25559f0d9bae5414d15e552cebaf117cd858
Author: Jay Arthanareeswaran <jarthana@in.ibm.com>
Date:   Mon Apr 10 21:16:10 2017 +0530

    Bug 513790 - Compiler warnings in I20170316-2000 after moving to M6
    compiler
    
    Change-Id: I03c0649cd1989cb7c8a3aded252374fe146753a5
    Signed-off-by: Jay Arthanareeswaran <jarthana@in.ibm.com>

2	2	org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java
3	2	org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java
2	2	org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java
3	2	org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java
2	2	org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java
2	2	org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/nd/DatabaseTest.java
2	2	org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdTypeId.java
diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java
index a293f2e..b80570b 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2015 BEA Systems, Inc.
+ * Copyright (c) 2005, 2017 BEA Systems, Inc.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -173,7 +173,7 @@ public abstract class EclipseDeclarationImpl implements Declaration, EclipseMirr
 			if( declName == null ) return node;
 			for(Object obj : ((FieldDeclaration)node).fragments() ){
 				 VariableDeclarationFragment frag = (VariableDeclarationFragment)obj;
-				 if( declName.equals(frag.getName()) ){
+				 if( declName.equals(frag.getName().toString()) ){
 					 name = frag.getName();
 					 break;
 				 }	 
diff --git a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java
index 0a6ac68..77c5b57 100644
--- a/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java
+++ b/org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/ManyToMany.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2015 BEA Systems, Inc.
+ * Copyright (c) 2006, 2017 BEA Systems, Inc. and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *    wharley@bea.com - initial API and implementation
+ *    IBM Corporation - Bug 513790
  *******************************************************************************/
 package org.eclipse.jdt.apt.core.internal.util;
 
@@ -312,7 +313,7 @@ public class ManyToMany<T1, T2> {
 	 * @see #keyHasOtherValues(Object, Object)
 	 */
 	public synchronized boolean valueHasOtherKeys(T2 value, T1 key) {
-		Set<T1> keys = _reverse.get(key);
+		Set<T1> keys = _reverse.get(value);
 		if (keys == null)
 			return false;
 		int size = keys.size();
diff --git a/org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java b/org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java
index 0ff3131..53f08a4 100644
--- a/org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java
+++ b/org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2007 BEA Systems, Inc.
+ * Copyright (c) 2005, 2017 BEA Systems, Inc.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -173,7 +173,7 @@ public class APIAnnotationProcessorFactory extends BaseFactory {
 		 */
 		private AnnotationMirror findMirror(Declaration decl, AnnotationTypeDeclaration at) {
 			for (AnnotationMirror mirror : decl.getAnnotationMirrors()) {
-				if (mirror.getAnnotationType().equals(at)) {
+				if (mirror.getAnnotationType().getDeclaration().equals(at)) {
 					return mirror;
 				}
 			}
diff --git a/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java b/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java
index 6517830c..98d5afe 100644
--- a/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java
+++ b/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ManyToMany.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2015 BEA Systems, Inc.
+ * Copyright (c) 2006, 2017 BEA Systems, Inc.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -8,6 +8,7 @@
  * Contributors:
  *    wharley@bea.com - initial API and implementation 
  *                      (originally in org.eclipse.jdt.apt.core)
+ *    IBM Corporation - Bug 513790
  *******************************************************************************/
 package org.eclipse.jdt.internal.compiler.apt.util;
 
@@ -311,7 +312,7 @@ public class ManyToMany<T1, T2> {
 	 * @see #keyHasOtherValues(Object, Object)
 	 */
 	public synchronized boolean valueHasOtherKeys(T2 value, T1 key) {
-		Set<T1> keys = _reverse.get(key);
+		Set<T1> keys = _reverse.get(value);
 		if (keys == null)
 			return false;
 		int size = keys.size();
diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java
index 6dc6fd3..9e492c7 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corporation and others.
+ * Copyright (c) 2000, 2017 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -2877,7 +2877,7 @@ public abstract class AbstractJavaModelTests extends SuiteOfTestCases {
 			IClasspathEntry entry = classpath[i];
 			final IPath path = entry.getPath();
 			// Choose the new JCL path only if the current JCL path is different
-			if (isJCLPath(path) && !path.equals(newJclLibString)) {
+			if (isJCLPath(path) && !path.toString().equals(newJclLibString)) {
 					classpath[i] = JavaCore.newVariableEntry(
 							new Path(newJclLibString),
 							new Path(newJclSrcString),
diff --git a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/nd/DatabaseTest.java b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/nd/DatabaseTest.java
index 3d770f9..2d93939 100644
--- a/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/nd/DatabaseTest.java
+++ b/org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/nd/DatabaseTest.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2016 QNX Software Systems and others.
+ * Copyright (c) 2005, 2017 QNX Software Systems and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -220,7 +220,7 @@ public class DatabaseTest extends BaseTestCase {
 			assertTrue(record != 0);
 			assertEquals(i, this.db.getInt(record));
 			IString rname = this.db.getString(this.db.getRecPtr(record + 4));
-			assertTrue(rname.equals(name));
+			assertTrue(rname.toString().equals(name));
 		}
 	}
 
diff --git a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdTypeId.java b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdTypeId.java
index a132f97..b11843b 100644
--- a/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdTypeId.java
+++ b/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/nd/java/NdTypeId.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2016 Google, Inc and others.
+ * Copyright (c) 2016, 2017 Google, Inc and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -128,7 +128,7 @@ public class NdTypeId extends NdTypeSignature {
 		if (this.fName != null)
 			return this.fName.equals(name);
 
-		return getSimpleName().equals(name);
+		return getSimpleName().toString().equals(name);
 	}
 
 	public void setSimpleName(String name) {
