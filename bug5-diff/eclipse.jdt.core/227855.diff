commit fd79557485cf3d3184833df280c6ebd9cfbb8177
Author: David Audel <daudel>
Date:   Wed Apr 23 08:21:42 2008 +0000

    HEAD - bug 227855

101	0	org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
3	1	org.eclipse.jdt.core/buildnotes_jdt-core.html
2	2	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java
1	1	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java
1	1	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java
3	3	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
2	2	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java
diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
index 0831607..44ce71d 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
@@ -1673,4 +1673,105 @@ public void test0035() {
 		expectedCompletionDietUnitToString,	
 		testName);
 }
+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=227855
+public void test0036() {
+
+	String s = 
+		"package a;																					\n"
+			+ "#																					\n"
+			+ "public class Test {																	\n"
+			+ "  public Test() {}																	\n"
+			+ "  @SuppressWarnings(value=\"\")														\n"
+			+ "  private int id;																	\n"
+			+ "}																					\n"; 	
+
+	String expectedDietUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"  }\n" + 
+		"}\n";
+	
+	String expectedDietPlusBodyUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"    super();\n" + 
+		"  }\n" + 
+		"}\n";
+
+	String expectedFullUnitToString = 
+		expectedDietUnitToString;
+	
+	String expectedCompletionDietUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"  }\n" + 
+		"}\n";
+	
+	String testName = "<generic type recovery>";
+	checkParse(
+		s.toCharArray(),
+		expectedDietUnitToString,
+		expectedDietPlusBodyUnitToString,
+		expectedFullUnitToString,
+		expectedCompletionDietUnitToString,	
+		testName);
+}
+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=227855
+public void test0037() {
+
+	String s = 
+		"package a;																					\n"
+			+ "#																					\n"
+			+ "public class Test {																	\n"
+			+ "  public int id0;																	\n"
+			+ "  @SuppressWarnings(value=\"\")														\n"
+			+ "  private int id;																	\n"
+			+ "}																					\n"; 	
+
+	String expectedDietUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  public int id0;\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"  }\n" + 
+		"}\n";
+	
+	String expectedDietPlusBodyUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  public int id0;\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"    super();\n" + 
+		"  }\n" + 
+		"}\n";
+
+	String expectedFullUnitToString = 
+		expectedDietUnitToString;
+	
+	String expectedCompletionDietUnitToString = 
+		"package a;\n" + 
+		"public class Test {\n" + 
+		"  public int id0;\n" + 
+		"  private @SuppressWarnings(value = \"\") int id;\n" + 
+		"  public Test() {\n" + 
+		"  }\n" + 
+		"}\n";
+	
+	String testName = "<generic type recovery>";
+	checkParse(
+		s.toCharArray(),
+		expectedDietUnitToString,
+		expectedDietPlusBodyUnitToString,
+		expectedFullUnitToString,
+		expectedCompletionDietUnitToString,	
+		testName);
+}
 }
diff --git a/org.eclipse.jdt.core/buildnotes_jdt-core.html b/org.eclipse.jdt.core/buildnotes_jdt-core.html
index 29a88ef..b62af9a 100644
--- a/org.eclipse.jdt.core/buildnotes_jdt-core.html
+++ b/org.eclipse.jdt.core/buildnotes_jdt-core.html
@@ -48,7 +48,9 @@ Eclipse SDK 3.4M7 - %date% - 3.4 MILESTONE 7
 <h2>What's new in this drop</h2>
 
 <h3>Problem Reports Fixed</h3>
-<a href="http://bugs.eclipse.org/bugs/show_bug.cgi?id=208010">208010</a>
+<a href="http://bugs.eclipse.org/bugs/show_bug.cgi?id=227855">227855</a>
+incorrect compilation errors related to annotations
+<br><a href="http://bugs.eclipse.org/bugs/show_bug.cgi?id=208010">208010</a>
 [compiler] Compiler reports unneccessary warning for static members
 <br><a href="http://bugs.eclipse.org/bugs/show_bug.cgi?id=222735">222735</a>
 DOM AST: hide recovered bindings unless 'recovered bindings' is enabled
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java
index 931fae9..460d98a 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredBlock.java
@@ -124,8 +124,8 @@ public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanc
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 
 	if (localDeclaration instanceof Argument){
 		this.pendingArgument = element;
@@ -189,8 +189,8 @@ public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceV
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 	this.attach(element);
 	if (typeDeclaration.declarationSourceEnd == 0) return element;
 	return this;
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java
index 4af1325..6eb7a80 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java
@@ -196,8 +196,8 @@ public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceV
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 	
 	/* consider that if the opening brace was not found, it is there */
 	if (!foundOpeningBrace){
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java
index ecba523..ac152aa 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java
@@ -269,8 +269,8 @@ public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceV
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 	
 	/* consider that if the opening brace was not found, it is there */
 	if (!foundOpeningBrace){
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
index c711e0b..a4a42fa 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
@@ -112,8 +112,8 @@ public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bra
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 	
 	this.insideEnumConstantPart = false;
 
@@ -182,8 +182,8 @@ public RecoveredElement add(FieldDeclaration fieldDeclaration, int bracketBalanc
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 
 	/* consider that if the opening brace was not found, it is there */
 	if (!foundOpeningBrace){
@@ -248,8 +248,8 @@ public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBa
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
+	this.resetPendingModifiers();
 
 	/* consider that if the opening brace was not found, it is there */
 	if (!foundOpeningBrace){
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java
index c013474..88688f4 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java
@@ -183,9 +183,9 @@ public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceV
 				pendingAnnotationCount,
 				pendingModifiers,
 				pendingModifersSourceStart);
-		this.resetPendingModifiers();
 	}
-
+	this.resetPendingModifiers();
+	
 	/* if type not finished, then type becomes current */
 	if (typeDeclaration.declarationSourceEnd == 0) return element;
 	return this;	
