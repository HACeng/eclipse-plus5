commit 2bd2905fd6a5c45e54edbbfd76b3a6aac0ca33b2
Author: Jim Desrivieres <jdesrivieres>
Date:   Wed Jan 8 23:13:28 2003 +0000

    Clarify expected source ranges (see bug 28268)

21	0	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java
4	2	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java
0	6	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java
0	5	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java
0	4	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java
0	4	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java
0	3	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java
index b3ba6b3..1efa1cf 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java
@@ -174,6 +174,13 @@ public final class AST {
 	 * Each node in the subtree carries source range(s) information relating back
 	 * to positions in the given source string (the given source string itself
 	 * is not remembered with the AST).
+	 * The source range usually begins at the first character of the first token 
+	 * corresponding to the node; leading whitespace and comments are <b>not</b>
+	 * included. The source range usually extends through the last character of
+	 * the last token corresponding to the node; trailing whitespace and
+	 * comments are <b>not</b> included. There are a handful of exceptions
+	 * (including compilation units and the various body declarations); the
+	 * specification for these node type spells out the details.
 	 * Source ranges nest properly: the source range for a child is always
 	 * within the source range of its parent, and the source ranges of sibling
 	 * nodes never overlap.
@@ -262,6 +269,13 @@ public final class AST {
 	 * Each node in the subtree carries source range(s) information relating back
 	 * to positions in the given source string (the given source string itself
 	 * is not remembered with the AST).
+	 * The source range usually begins at the first character of the first token 
+	 * corresponding to the node; leading whitespace and comments are <b>not</b>
+	 * included. The source range usually extends through the last character of
+	 * the last token corresponding to the node; trailing whitespace and
+	 * comments are <b>not</b> included. There are a handful of exceptions
+	 * (including compilation units and the various body declarations); the
+	 * specification for these node type spells out the details.
 	 * Source ranges nest properly: the source range for a child is always
 	 * within the source range of its parent, and the source ranges of sibling
 	 * nodes never overlap.
@@ -360,6 +374,13 @@ public final class AST {
 	 * Each node in the subtree carries source range(s) information relating back
 	 * to positions in the given source string (the given source string itself
 	 * is not remembered with the AST). 
+	 * The source range usually begins at the first character of the first token 
+	 * corresponding to the node; leading whitespace and comments are <b>not</b>
+	 * included. The source range usually extends through the last character of
+	 * the last token corresponding to the node; trailing whitespace and
+	 * comments are <b>not</b> included. There are a handful of exceptions
+	 * (including compilation units and the various body declarations); the
+	 * specification for these node type spells out the details.
 	 * Source ranges nest properly: the source range for a child is always
 	 * within the source range of its parent, and the source ranges of sibling
 	 * nodes never overlap.
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java
index 4e6fc7a..b2dca39 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java
@@ -19,8 +19,10 @@ import org.eclipse.jdt.core.compiler.IProblem;
 
 /**
  * Java compilation unit AST node type. This is the type of the root of an AST.
- *
- * Range 0: first character through last character of the source file.
+ * <p>
+ * The source range for this type of node is ordinarily the entire source file,
+ * including leading and trailing whitespace and comments.
+ * </p>
  *
  * <pre>
  * CompilationUnit:
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java
index 141c5cc..ff908e8 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java
@@ -13,12 +13,6 @@ package org.eclipse.jdt.core.dom;
 
 /**
  * If statement AST node type.
- *
- * Range 0: first character of "if" keyword through last character of
- * the last statement.
- * Range 1: first character of "else" keyword through last character of
- * the last statement; if "else" keyword is absent then an empty range
- *
  * <pre>
  * IfStatement:
  *    <b>if</b> <b>(</b> Expression <b>)</b> Statement [ <b>else</b> Statement]
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java
index 211e893..c6ac8fe 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java
@@ -17,11 +17,6 @@ import java.util.Map;
 
 /**
  * Infix expression AST node type.
- *
- * Range 0: first character of left operand expression through last character
- * of the last extended operand expression. If there are no extended operands,
- * the range ends after the right operand expression.
- *
  * <pre>
  * InfixExpression:
  *    Expression InfixOperator Expression { InfixOperator Expression } 
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java
index 0fabcd2..a5f67de 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InstanceofExpression.java
@@ -13,10 +13,6 @@ package org.eclipse.jdt.core.dom;
 
 /**
  * Instanceof expression AST node type.
- *
- * Range 0: first character of left operand expression through last character
- * of the right operand expression.
- *
  * <pre>
  * InstanceofExpression:
  *    Expression <b>instanceof</b> Type
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java
index 9942c48..8ae747f 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedName.java
@@ -20,10 +20,6 @@ package org.eclipse.jdt.core.dom;
  * QualifiedName:
  *    Name <b>.</b> SimpleName
  * </pre>
- *
- * Range 0: first character of qualified name through the last character
- * of the simple name.
- *
  * <p>
  * See <code>FieldAccess</code> for guidelines on handling other expressions
  * that resemble qualified names.
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java
index 9e23857..6230318 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java
@@ -17,9 +17,6 @@ import org.eclipse.jdt.internal.compiler.parser.Scanner;
 /**
  * AST node for a simple name. A simple name is an identifier other than
  * a keyword, boolean literal ("true", "false") or null literal ("null").
- * <p>
- * Range 0: first character through last character of identifier.
- * </p>
  * <pre>
  * SimpleName:
  *     Identifier
