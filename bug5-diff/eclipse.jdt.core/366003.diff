commit 44a65692ed8ea84bd05a0826234a3cf62365dd1a
Author: Stephan Herrmann <sherrmann>
Date:   Thu Dec 15 22:57:02 2011 +0100

    HEAD - Fixed bug 366003: CCE in
    ASTNode.resolveAnnotations(ASTNode.java:639)

56	1	org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
302	2	org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java
3	1	org.eclipse.jdt.core/buildnotes_jdt-core.html
3	0	org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java
3	0	org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java
4	0	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java
21	1	org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
3	0	org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
index 695aa46..6e8ba36 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2008 IBM Corporation and others.
+ * Copyright (c) 2000, 2011 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -1909,4 +1909,59 @@ public void test0040() {
 		expectedCompletionDietUnitToString,
 		testName);
 }
+// https://bugs.eclipse.org/bugs/show_bug.cgi?id=366003
+public void test0041() {
+
+	String s =
+			"package snippet;\n" +
+					"public class Bug366003 {\n" +
+					"        void foo(Object o1){}\n" +
+					"        @Blah org.User(@Bla String str){}\n" +
+					"}\n";
+
+	String expectedDietUnitToString =
+			"package snippet;\n" + 
+					"public class Bug366003 {\n" + 
+					"  public Bug366003() {\n" + 
+					"  }\n" + 
+					"  void foo(Object o1) {\n" + 
+					"  }\n" + 
+					"  @Blah User(@Bla String str) {\n" + 
+					"  }\n" + 
+					"}\n";
+
+	String expectedDietPlusBodyUnitToString =
+			"package snippet;\n" + 
+					"public class Bug366003 {\n" + 
+					"  public Bug366003() {\n" + 
+					"    super();\n" + 
+					"  }\n" + 
+					"  void foo(Object o1) {\n" + 
+					"  }\n" + 
+					"  @Blah User(@Bla String str) {\n" + 
+					"  }\n" + 
+					"}\n";
+
+	String expectedFullUnitToString = expectedDietUnitToString;
+
+	String expectedCompletionDietUnitToString =
+			"package snippet;\n" + 
+					"public class Bug366003 {\n" + 
+					"  public Bug366003() {\n" + 
+					"  }\n" + 
+					"  void foo(Object o1) {\n" + 
+					"  }\n" + 
+					"  User(@Bla String str) {\n" + 
+					"  }\n" + 
+					"}\n";
+
+	String testName = "<annotation recovery>";
+	checkParse(
+		s.toCharArray(),
+		expectedDietUnitToString,
+		expectedDietPlusBodyUnitToString,
+		expectedFullUnitToString,
+		expectedCompletionDietUnitToString,
+		testName);
+}
 }
diff --git a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java
index 36aaf2e..bbe0ba5 100644
--- a/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java
+++ b/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java
@@ -7,8 +7,10 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
- *     Stephan Herrmann  - Contribution for bug 295551
- *     Stephan Herrmann <stephan@cs.tu-berlin.de> - Contribution for bug 185682 - Increment/decrement operators mark local variables as read
+ *     Stephan Herrmann  - Contributions for
+ *								bug 295551 - Add option to automatically promote all warnings to error
+ *								bug 185682 - Increment/decrement operators mark local variables as read
+ *								bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639)
  *******************************************************************************/
 package org.eclipse.jdt.core.tests.compiler.regression;
 
@@ -9848,4 +9850,302 @@ public void test297() {
 			true,
 			customOptions);
 }
+// Bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639) 
+// many syntax errors fixed, does not trigger CCE 
+public void testBug366003() {
+	runNegativeTest(
+		new String[] {
+			"snippet/Bug366003.java",
+			"package snippet;\n" +
+			"public class Bug366003 {\n" + 
+			"    public void foo(@NonNull Object o1) {\n" + 
+			"        System.out.println(o1.toString()); // OK: o1 cannot be null\n" +
+			"    }         \n" + 
+			"    @NonNull Object bar(@Nullable String s1) {\n" +
+			"        foo(null); // cannot pass null argument\n" +
+			"        @NonNull String s= null; // cannot assign null value\n" +
+			"        @NonNull String t= s1; // cannot assign potentially null value\n" + 
+			"        return null; // cannot return null value\n" +
+			"    }\n" + 
+			"}\n" + 
+			"org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+			""
+		},
+		"----------\n" + 
+		"1. ERROR in snippet\\Bug366003.java (at line 3)\n" + 
+		"	public void foo(@NonNull Object o1) {\n" + 
+		"	                 ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"2. ERROR in snippet\\Bug366003.java (at line 6)\n" + 
+		"	@NonNull Object bar(@Nullable String s1) {\n" + 
+		"	 ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"3. ERROR in snippet\\Bug366003.java (at line 6)\n" + 
+		"	@NonNull Object bar(@Nullable String s1) {\n" + 
+		"	                     ^^^^^^^^\n" + 
+		"Nullable cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"4. ERROR in snippet\\Bug366003.java (at line 8)\n" + 
+		"	@NonNull String s= null; // cannot assign null value\n" + 
+		"	 ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"5. ERROR in snippet\\Bug366003.java (at line 9)\n" + 
+		"	@NonNull String t= s1; // cannot assign potentially null value\n" + 
+		"	 ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"6. ERROR in snippet\\Bug366003.java (at line 12)\n" + 
+		"	}\n" + 
+		"	^\n" + 
+		"Syntax error on token \"}\", delete this token\n" + 
+		"----------\n" + 
+		"7. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	^^^^^^^^^^^^^^^^\n" + 
+		"Syntax error on tokens, delete these tokens\n" + 
+		"----------\n" + 
+		"8. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"enum Identifier\" to complete EnumHeaderName\n" + 
+		"----------\n" + 
+		"9. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"EnumBody\" to complete EnumDeclaration\n" + 
+		"----------\n" + 
+		"10. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"}\" to complete ClassBody\n" + 
+		"----------\n" + 
+		"11. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
+		"Return type for the method is missing\n" + 
+		"----------\n" + 
+		"12. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                       ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"13. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                                                      ^^^^^^^^\n" + 
+		"Nullable cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"14. ERROR in snippet\\Bug366003.java (at line 13)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                                                                           ^\n" + 
+		"Syntax error, insert \";\" to complete ConstructorDeclaration\n" + 
+		"----------\n");
+}
+// Bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639) 
+// code is garbage, triggers CCE 
+public void testBug366003b() {
+	runNegativeTest(
+		new String[] {
+			"snippet/Bug366003.java",
+			"package snippet;\n" +
+			"public class Bug366003 {\n" +
+			"    public void foo(@Blah Object o1) {        \n" +
+			"System.out.println(o1.toString()); // OK: o1 cannot be null     }         \n" +
+			"@Blah Object bar(@BlahBlah String s1) {         foo(null); // cannot pass\n" +
+			"null argument         @Blah String s= null; // cannot assign null value     \n" +
+			"    @Blah String t= s1; // cannot assign potentially null value         \n" +
+			"return null; // cannot return null value     }\n" +
+			"}\n" +
+			"\n" +
+			"org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" +
+			""
+		},
+		"----------\n" + 
+		"1. ERROR in snippet\\Bug366003.java (at line 3)\n" + 
+		"	public void foo(@Blah Object o1) {        \n" + 
+		"	                 ^^^^\n" + 
+		"Blah cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"2. ERROR in snippet\\Bug366003.java (at line 4)\n" + 
+		"	System.out.println(o1.toString()); // OK: o1 cannot be null     }         \n" + 
+		"	                                 ^\n" + 
+		"Syntax error, insert \"}\" to complete MethodBody\n" + 
+		"----------\n" + 
+		"3. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	@Blah Object bar(@BlahBlah String s1) {         foo(null); // cannot pass\n" + 
+		"	 ^^^^\n" + 
+		"Blah cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"4. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	@Blah Object bar(@BlahBlah String s1) {         foo(null); // cannot pass\n" + 
+		"	                  ^^^^^^^^\n" + 
+		"BlahBlah cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"5. ERROR in snippet\\Bug366003.java (at line 6)\n" + 
+		"	null argument         @Blah String s= null; // cannot assign null value     \n" + 
+		"	^^^^\n" + 
+		"Syntax error on token \"null\", @ expected\n" + 
+		"----------\n" + 
+		"6. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	^^^^^^^^^^^^^^^^\n" + 
+		"Syntax error on tokens, delete these tokens\n" + 
+		"----------\n" + 
+		"7. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"enum Identifier\" to complete EnumHeaderName\n" + 
+		"----------\n" + 
+		"8. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"EnumBody\" to complete EnumDeclaration\n" + 
+		"----------\n" + 
+		"9. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	            ^^^^\n" + 
+		"Syntax error, insert \"}\" to complete ClassBody\n" + 
+		"----------\n" + 
+		"10. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
+		"Return type for the method is missing\n" + 
+		"----------\n" + 
+		"11. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                       ^^^^^^^\n" + 
+		"NonNull cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"12. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                                                      ^^^^^^^^\n" + 
+		"Nullable cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"13. ERROR in snippet\\Bug366003.java (at line 11)\n" + 
+		"	org.eclipse.User.User(@NonNull String name, int uid, @Nullable String email)\n" + 
+		"	                                                                           ^\n" + 
+		"Syntax error, insert \";\" to complete ConstructorDeclaration\n" + 
+		"----------\n");
+}
+// Bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639) 
+// minimal syntax error to trigger CCE 
+public void testBug366003c() {
+	runNegativeTest(
+		new String[] {
+			"snippet/Bug366003.java",
+			"package snippet;\n" +
+			"public class Bug366003 {\n" +
+			"    void foo(Object o1) {\n" + 
+			"    }\n" + 
+			"org.User(@Bla String a)"
+		},
+		"----------\n" + 
+		"1. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	^^^\n" + 
+		"Syntax error on token \"org\", delete this token\n" + 
+		"----------\n" + 
+		"2. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	^^^\n" + 
+		"Syntax error, insert \"enum Identifier\" to complete EnumHeaderName\n" + 
+		"----------\n" + 
+		"3. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	^^^\n" + 
+		"Syntax error, insert \"EnumBody\" to complete EnumDeclaration\n" + 
+		"----------\n" + 
+		"4. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	^^^\n" + 
+		"Syntax error, insert \"}\" to complete ClassBody\n" + 
+		"----------\n" + 
+		"5. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	    ^^^^^^^^^^^^^^^^^^^\n" + 
+		"Return type for the method is missing\n" + 
+		"----------\n" + 
+		"6. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	          ^^^\n" + 
+		"Bla cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"7. ERROR in snippet\\Bug366003.java (at line 5)\n" + 
+		"	org.User(@Bla String a)\n" + 
+		"	                      ^\n" + 
+		"Syntax error, insert \";\" to complete ConstructorDeclaration\n" + 
+		"----------\n");
+}
+// unfinished attempt to trigger the same CCE via catch formal parameters
+public void testBug366003d() {
+	runNegativeTest(
+		new String[] {
+			"snippet/Bug366003.java",
+			"package snippet; \n" +
+			"public class Bug366003 {\n" +
+			"	void foo() {\n" +
+			"		try {\n" +
+			"			System.out.println(\"\");\n" +
+			"		} catch (Exeption eFirst) {\n" +
+			"			e } catch (@Blah Exception eSecond) {\n" +
+			"			e }\n" +
+			"	}\n" +
+			"}\n"
+		},
+		"----------\n" +
+		"1. ERROR in snippet\\Bug366003.java (at line 7)\n" +
+		"	e } catch (@Blah Exception eSecond) {\n" +
+		"	^\n" +
+		"Syntax error, insert \"AssignmentOperator Expression\" to complete Assignment\n" +
+		"----------\n" +
+		"2. ERROR in snippet\\Bug366003.java (at line 7)\n" +
+		"	e } catch (@Blah Exception eSecond) {\n" +
+		"	^\n" +
+		"Syntax error, insert \";\" to complete BlockStatements\n" +
+		"----------\n" +
+		"3. ERROR in snippet\\Bug366003.java (at line 8)\n" +
+		"	e }\n" +
+		"	^\n" +
+		"Syntax error, insert \"AssignmentOperator Expression\" to complete Expression\n" +
+		"----------\n" +
+		"4. ERROR in snippet\\Bug366003.java (at line 8)\n" +
+		"	e }\n" +
+		"	^\n" +
+		"Syntax error, insert \";\" to complete BlockStatements\n" +
+		"----------\n");
+}
+public void testBug366003e() {
+	runNegativeTest(
+		new String[] {
+			"snippet/Bug366003.java",
+			"package snippet;\n" +
+			"public class Bug366003 {\n" +
+			"        void foo(Object o1){}\n" +
+			"        @Blah org.User(@Bla String str){}\n" +
+			"}\n"
+		},
+		"----------\n" + 
+		"1. ERROR in snippet\\Bug366003.java (at line 4)\n" + 
+		"	@Blah org.User(@Bla String str){}\n" + 
+		"	 ^^^^\n" + 
+		"Blah cannot be resolved to a type\n" + 
+		"----------\n" + 
+		"2. ERROR in snippet\\Bug366003.java (at line 4)\n" + 
+		"	@Blah org.User(@Bla String str){}\n" + 
+		"	          ^^^^\n" + 
+		"Syntax error on token \"User\", Identifier expected after this token\n" + 
+		"----------\n" + 
+		"3. ERROR in snippet\\Bug366003.java (at line 4)\n" + 
+		"	@Blah org.User(@Bla String str){}\n" + 
+		"	          ^^^^^^^^^^^^^^^^^^^^^\n" + 
+		"Return type for the method is missing\n" + 
+		"----------\n" + 
+		"4. ERROR in snippet\\Bug366003.java (at line 4)\n" + 
+		"	@Blah org.User(@Bla String str){}\n" + 
+		"	                ^^^\n" + 
+		"Bla cannot be resolved to a type\n" +
+		"----------\n");
+}
 }
diff --git a/org.eclipse.jdt.core/buildnotes_jdt-core.html b/org.eclipse.jdt.core/buildnotes_jdt-core.html
index 2b080b5..abab8b9 100644
--- a/org.eclipse.jdt.core/buildnotes_jdt-core.html
+++ b/org.eclipse.jdt.core/buildnotes_jdt-core.html
@@ -52,7 +52,9 @@ Eclipse SDK 3.8.0 - %date% - December 2, 2011
 <h2>What's new in this drop</h2>
 
 <h3>Problem Reports Fixed</h3>
-<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=366829">366829</a>
+<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=366003">366003</a>
+CCE in ASTNode.resolveAnnotations(ASTNode.java:639)
+<br><a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=366829">366829</a>
 Batch compiler option and SuppressWarnings token for Overriding a Synchronized Method with a Non-synchronized Method
 <br><a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=364450">364450</a>
 Dubious class path error triggers a full rebuild
diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java
index afd0ccc..927db1b 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java
@@ -2627,6 +2627,9 @@ protected void consumeFormalParameter(boolean isVarArgs) {
 				arg.annotations = new Annotation[length],
 				0,
 				length);
+			RecoveredType currentRecoveryType = this.currentRecoveryType();
+			if (currentRecoveryType != null)
+				currentRecoveryType.annotationsConsumed(arg.annotations);
 		}
 
 		arg.isCatchArgument = topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_CATCH_AND_RIGHT_PAREN;
diff --git a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java
index 5e59a1b..0be1b54 100644
--- a/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java
+++ b/org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java
@@ -634,6 +634,9 @@ protected void consumeFormalParameter(boolean isVarArgs) {
 				arg.annotations = new Annotation[length],
 				0,
 				length);
+			RecoveredType currentRecoveryType = this.currentRecoveryType();
+			if (currentRecoveryType != null)
+				currentRecoveryType.annotationsConsumed(arg.annotations);
 		}
 
 		pushOnAstStack(arg);
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java
index 121be78..daff09b 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java
@@ -8,6 +8,7 @@
  * Contributors:
  *     IBM Corporation - initial API and implementation
  *     Tom Tromey - patch for readTable(String) as described in http://bugs.eclipse.org/bugs/show_bug.cgi?id=32196
+ *     Stephan Herrmann - Contribution for Bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639)
  *******************************************************************************/
 package org.eclipse.jdt.internal.compiler.parser;
 
@@ -3943,6 +3944,9 @@ protected void consumeFormalParameter(boolean isVarArgs) {
 			arg.annotations = new Annotation[length],
 			0,
 			length);
+		RecoveredType currentRecoveryType = this.currentRecoveryType();
+		if (currentRecoveryType != null)
+			currentRecoveryType.annotationsConsumed(arg.annotations);
 	}
 	pushOnAstStack(arg);
 
diff --git a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
index ea53456..aac6d22 100644
--- a/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
+++ b/org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2009 IBM Corporation and others.
+ * Copyright (c) 2000, 2011 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Stephan Herrmann - Contribution for Bug 366003 - CCE in ASTNode.resolveAnnotations(ASTNode.java:639)
  *******************************************************************************/
 package org.eclipse.jdt.internal.compiler.parser;
 
@@ -773,4 +774,23 @@ public void updateSourceEndIfNecessary(int start, int end){
 		this.typeDeclaration.bodyEnd = end;
 	}
 }
+public void annotationsConsumed(Annotation[] consumedAnnotations) {
+	RecoveredAnnotation[] keep = new RecoveredAnnotation[this.pendingAnnotationCount];
+	int numKeep = 0;
+	int pendingCount = this.pendingAnnotationCount;
+	int consumedLength = consumedAnnotations.length;
+	outerLoop:
+	for (int i = 0; i < pendingCount; i++) {
+		Annotation pendingAnnotationAST = this.pendingAnnotations[i].annotation;
+		for (int j = 0; j < consumedLength; j++) {
+			if (consumedAnnotations[j] == pendingAnnotationAST)
+				continue outerLoop;
+		}
+		keep[numKeep++] = this.pendingAnnotations[i];
+	}
+	if (numKeep != this.pendingAnnotationCount) {
+		this.pendingAnnotations = keep;
+		this.pendingAnnotationCount = numKeep;
+	}
+}
 }
diff --git a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
index cea4763..597b56c 100644
--- a/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
+++ b/org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/DocumentElementParser.java
@@ -623,6 +623,9 @@ protected void consumeFormalParameter(boolean isVarArgs) {
 			arg.annotations = new Annotation[length],
 			0,
 			length);
+		RecoveredType currentRecoveryType = this.currentRecoveryType();
+		if (currentRecoveryType != null)
+			currentRecoveryType.annotationsConsumed(arg.annotations);
 	}
 	pushOnAstStack(arg);
 	this.intArrayPtr--;
