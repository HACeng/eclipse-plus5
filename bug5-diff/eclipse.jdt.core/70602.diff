commit 5e0ff4fce49f957d52efdb2db55b84d91b0365c1
Author: Jim Desrivieres <jdesrivieres>
Date:   Thu Sep 16 17:14:37 2004 +0000

    Add isEqualTo (bug 70602)

20	2	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IBinding.java
21	0	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java
21	0	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java
21	0	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java
21	0	org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IBinding.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IBinding.java
index 1173777..8d6f8a6 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IBinding.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IBinding.java
@@ -187,15 +187,33 @@ public interface IBinding {
 	 * bindings, each binding is represented by a distinct object. However,
 	 * between different clusters of bindings, the binding objects may or may
 	 * not be different; in these cases, the client should compare bindings
-	 * via their binding keys (<code>getKey</code>) if available.
+	 * using {@link #isEqualTo(IBinding)}, which checks their keys.
 	 * 
 	 * @param obj {@inheritDoc}
 	 * @return {@inheritDoc}
-	 * @see #getKey()
 	 */
 	public boolean equals(Object obj);
 	
 	/**
+	 * Returns whether this binding has the same key as that of the given
+	 * binding. Within the context of a single cluster of bindings, each
+	 * binding is represented by a distinct object. However, between
+	 * different clusters of bindings, the binding objects may or may
+	 * not be different objects; in these cases, the binding keys
+	 * are used where available.
+	 * 
+	 * @param binding the other binding, or <code>null</code>
+	 * @return <code>true</code> if the given binding is the identical
+	 * object as this binding, or if the keys of both bindings are the
+	 * same string; <code>false</code> if the given binding is
+	 * <code>null</code>, or if the bindings do not have the same key,
+	 * or if one or both of the bindings have no key
+	 * @see #getKey()
+	 * @since 3.1
+	 */
+	public boolean isEqualTo(IBinding binding);
+	
+	/**
 	 * Returns a string representation of this binding suitable for debugging
 	 * purposes only.
 	 * 
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java
index fcf7dc9..0fa39fa 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java
@@ -223,6 +223,27 @@ class MethodBinding implements IMethodBinding {
 		return this.key;
 	}
 	
+	/*
+	 * @see IBinding#isEqualTo(Binding)
+	 * @since 3.1
+	 */
+	public boolean isEqualTo(IBinding other) {
+		if (other == this) {
+			// identical binding - equal (key or no key)
+			return true;
+		}
+		if (other == null) {
+			// other binding missing
+			return false;
+		}
+		String key1 = other.getKey();
+		if (key1 == null) {
+			// other binding has no key
+			return false;
+		}
+		return key1.equals(getKey());
+	}
+	
 	/* (non-Javadoc)
 	 * @see org.eclipse.jdt.core.dom.IMethodBinding#getTypeParameters()
 	 */
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java
index 8243c94..7bfd2bc 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageBinding.java
@@ -92,6 +92,27 @@ class PackageBinding implements IPackageBinding {
 		return getName();
 	}
 	
+	/*
+	 * @see IBinding#isEqualTo(Binding)
+	 * @since 3.1
+	 */
+	public boolean isEqualTo(IBinding other) {
+		if (other == this) {
+			// identical binding - equal (key or no key)
+			return true;
+		}
+		if (other == null) {
+			// other binding missing
+			return false;
+		}
+		String key1 = other.getKey();
+		if (key1 == null) {
+			// other binding has no key
+			return false;
+		}
+		return key1.equals(getKey());
+	}
+	
 	private void computeNameAndComponents() {
 		char[][] compoundName = this.binding.compoundName;
 		if (compoundName == CharOperation.NO_CHAR_CHAR || compoundName == null) {
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java
index b01e808..6bd65eb 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java
@@ -581,6 +581,27 @@ class TypeBinding implements ITypeBinding {
 		return this.key;
 	}
 
+	/*
+	 * @see IBinding#isEqualTo(Binding)
+	 * @since 3.1
+	 */
+	public boolean isEqualTo(IBinding other) {
+		if (other == this) {
+			// identical binding - equal (key or no key)
+			return true;
+		}
+		if (other == null) {
+			// other binding missing
+			return false;
+		}
+		String key1 = other.getKey();
+		if (key1 == null) {
+			// other binding has no key
+			return false;
+		}
+		return key1.equals(getKey());
+	}
+	
 	/**
 	 * @see ITypeBinding#isNullType()
 	 */
diff --git a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java
index 9c37120..ae12fcd 100644
--- a/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java
+++ b/org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java
@@ -178,6 +178,27 @@ class VariableBinding implements IVariableBinding {
 	}
 	
 	/*
+	 * @see IBinding#isEqualTo(Binding)
+	 * @since 3.1
+	 */
+	public boolean isEqualTo(IBinding other) {
+		if (other == this) {
+			// identical binding - equal (key or no key)
+			return true;
+		}
+		if (other == null) {
+			// other binding missing
+			return false;
+		}
+		String key1 = other.getKey();
+		if (key1 == null) {
+			// other binding has no key
+			return false;
+		}
+		return key1.equals(getKey());
+	}
+	
+	/*
 	 * @see IVariableBinding#getVariableId()
 	 */
 	public int getVariableId() {
