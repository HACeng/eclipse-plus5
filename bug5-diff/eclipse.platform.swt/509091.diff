commit 491b1e5a9fe3e3b764a3f0e14bd42f24ef30fbae
Author: Fabian Pfaff <fabian.pfaff@vogella.com>
Date:   Mon Dec 12 16:48:22 2016 +0100

    Bug 509091 - Use enhanced for loop in org.eclipse.swt.examples
    
    
    Change-Id: I9e0ec2334b5c34b13239328fc7ccb5654a84dce0
    Signed-off-by: Fabian Pfaff <fabian.pfaff@vogella.com>

4	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleTableExample.java
60	62	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
3	3	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTableItem.java
8	8	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/SearchDialog.java
1	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java
6	6	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java
9	9	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java
3	3	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ColorTab.java
6	6	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
7	7	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
26	26	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java
10	12	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
8	8	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
1	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
4	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
4	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
7	8	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
9	13	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleTableExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleTableExample.java
index 266bac5..4d885ce 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleTableExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleTableExample.java
@@ -103,8 +103,8 @@ public class AccessibleTableExample {
 			@Override
 			public void widgetSelected(SelectionEvent e) {
 				CTableItem[] selectedItems = table1.getSelection();
-				for (int i = 0; i < selectedItems.length; i++) {
-					selectedItems[i].dispose();
+				for (CTableItem selectedItem : selectedItems) {
+					selectedItem.dispose();
 				}
 			}
 		});
@@ -138,9 +138,9 @@ public class AccessibleTableExample {
 		CTable table2 = new CTable(group, SWT.MULTI | SWT.FULL_SELECTION | SWT.BORDER);
 		table2.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
 		table2.setLinesVisible(true);
-		for (int row = 0; row < itemText.length; row++) {
+		for (String element : itemText) {
 			CTableItem item = new CTableItem(table2, SWT.NONE);
-			item.setText(itemText[row]);
+			item.setText(element);
 		}
 
 		shell.pack();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
index c03e13e..0432bb0 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
@@ -418,12 +418,12 @@ public void clear (int [] indices) {
 		}
 	}
 
-	for (int i = 0; i < indices.length; i++) {
-		items [indices [i]].clear ();
+	for (int indice : indices) {
+		items [indice].clear ();
 	}
 	updateHorizontalBar ();
-	for (int i = 0; i < indices.length; i++) {
-		redrawItem (indices [i], false);
+	for (int indice : indices) {
+		redrawItem (indice, false);
 	}
 }
 /**
@@ -668,8 +668,8 @@ public void deselect (int [] indices) {
 	checkWidget ();
 	if (indices == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);
 	if (indices.length == 0) return;
-	for (int i = 0; i < indices.length; i++) {
-		deselect (indices [i]);
+	for (int indice : indices) {
+		deselect (indice);
 	}
 }
 /**
@@ -685,12 +685,12 @@ public void deselectAll () {
 	CTableItem[] oldSelection = selectedItems;
 	selectedItems = new CTableItem [0];
 	if (isFocusControl () || (getStyle () & SWT.HIDE_SELECTION) == 0) {
-		for (int i = 0; i < oldSelection.length; i++) {
-			redrawItem (oldSelection [i].index, true);
+		for (CTableItem element : oldSelection) {
+			redrawItem (element.index, true);
 		}
 	}
-	for (int i = 0; i < oldSelection.length; i++) {
-		oldSelection[i].getAccessible(getAccessible(), 0).selectionChanged();
+	for (CTableItem element : oldSelection) {
+		element.getAccessible(getAccessible(), 0).selectionChanged();
 	}
 	if (oldSelection.length > 0) getAccessible().selectionChanged();
 }
@@ -754,8 +754,8 @@ void destroyItem (CTableColumn column) {
 		updateHorizontalBar ();
 	} else {
 		int newWidth = 0;
-		for (int i = 0; i < columns.length; i++) {
-			newWidth += columns [i].width;
+		for (CTableColumn column2 : columns) {
+			newWidth += column2.width;
 		}
 		ScrollBar hBar = getHorizontalBar ();
 		if (hBar != null) {
@@ -885,9 +885,9 @@ public Control[] getChildren () {
 	Control[] result = new Control [controls.length - 1];
 	/* remove the Header from the returned set of children */
 	int index = 0;
-	for (int i = 0; i < controls.length; i++) {
-		 if (controls [i] != header) {
-		 	result [index++] = controls [i];
+	for (Control control : controls) {
+		 if (control != header) {
+		 	result [index++] = control;
 		 }
 	}
 	return result;
@@ -1452,8 +1452,8 @@ String headerGetToolTip (int x) {
 }
 void headerHideToolTip() {
 	if (toolTipShell == null) return;
-	for (int i = 0; i < toolTipEvents.length; i++) {
-		header.removeListener (toolTipEvents [i], toolTipListener);
+	for (int toolTipEvent : toolTipEvents) {
+		header.removeListener (toolTipEvent, toolTipListener);
 	}
 	toolTipShell.dispose ();
 	toolTipShell = null;
@@ -1500,8 +1500,7 @@ void headerOnMouseDown (Event event) {
 	if (event.button != 1) return;
 	CTableColumn[] orderedColumns = getOrderedColumns ();
 	int x = -horizontalOffset;
-	for (int i = 0; i < orderedColumns.length; i++) {
-		CTableColumn column = orderedColumns [i];
+	for (CTableColumn column : orderedColumns) {
 		x += column.width;
 		/* if close to a resizable column separator line then begin column resize */
 		if (column.resizable && Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {
@@ -1583,8 +1582,7 @@ void headerOnMouseHover (Event event) {
 void headerOnMouseMove (Event event) {
 	if (resizeColumn == null) {
 		/* not currently resizing a column */
-		for (int i = 0; i < columns.length; i++) {
-			CTableColumn column = columns [i];
+		for (CTableColumn column : columns) {
 			int x = column.getX () + column.width;
 			if (Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {
 				if (column.resizable) {
@@ -1689,8 +1687,8 @@ void headerShowToolTip (int x) {
 		Display display = toolTipShell.getDisplay ();
 		toolTipLabel.setForeground (display.getSystemColor (SWT.COLOR_INFO_FOREGROUND));
 		toolTipLabel.setBackground (display.getSystemColor (SWT.COLOR_INFO_BACKGROUND));
-		for (int i = 0; i < toolTipEvents.length; i++) {
-			header.addListener (toolTipEvents [i], toolTipListener);
+		for (int toolTipEvent : toolTipEvents) {
+			header.addListener (toolTipEvent, toolTipListener);
 		}
 	}
 	if (headerUpdateToolTip (x)) {
@@ -2399,8 +2397,8 @@ void onDispose (Event event) {
 	for (int i = 0; i < itemsCount; i++) {
 		items [i].dispose (false);
 	}
-	for (int i = 0; i < columns.length; i++) {
-		columns [i].dispose (false);
+	for (CTableColumn column : columns) {
+		column.dispose (false);
 	}
 	if (toolTipShell != null) {
 		toolTipShell.dispose ();
@@ -2491,8 +2489,8 @@ void onFocusIn () {
 		return;
 	}
 	if ((getStyle () & (SWT.HIDE_SELECTION | SWT.MULTI)) == (SWT.HIDE_SELECTION | SWT.MULTI)) {
-		for (int i = 0; i < selectedItems.length; i++) {
-			redrawItem (selectedItems [i].index, true);
+		for (CTableItem selectedItem : selectedItems) {
+			redrawItem (selectedItem.index, true);
 		}
 	}
 	if (focusItem != null) {
@@ -2520,8 +2518,8 @@ void onFocusOut () {
 		redrawItem (focusItem.index, true);
 	}
 	if ((getStyle () & (SWT.HIDE_SELECTION | SWT.MULTI)) == (SWT.HIDE_SELECTION | SWT.MULTI)) {
-		for (int i = 0; i < selectedItems.length; i++) {
-			redrawItem (selectedItems [i].index, true);
+		for (CTableItem selectedItem : selectedItems) {
+			redrawItem (selectedItem.index, true);
 		}
 	}
 }
@@ -3445,16 +3443,16 @@ public void remove (int [] indices) {
 	}
 	int lastRemovedIndex = -1;
 	int[] eventData = new int[5];
-	for (int i = 0; i < newIndices.length; i++) {
-		if (newIndices [i] != lastRemovedIndex) {
-			items [newIndices [i]].dispose ();
+	for (int newIndice : newIndices) {
+		if (newIndice != lastRemovedIndex) {
+			items [newIndice].dispose ();
 			eventData[0] = ACC.DELETE;
-			eventData[1] = newIndices[i];
+			eventData[1] = newIndice;
 			eventData[2] = 1;
 			eventData[3] = 0;
 			eventData[4] = 0;
 			getAccessible().sendEvent(ACC.EVENT_TABLE_CHANGED, eventData);
-			lastRemovedIndex = newIndices [i];
+			lastRemovedIndex = newIndice;
 		}
 	}
 }
@@ -3638,15 +3636,15 @@ public void select (int [] indices) {
 	if (indices == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);
 	if (indices.length == 0 || ((getStyle () & SWT.SINGLE) != 0 && indices.length > 1)) return;
 
-	for (int i = 0; i < indices.length; i++) {
-		if (0 <= indices [i] && indices [i] < itemsCount) {
-			selectItem (items [indices [i]], (getStyle () & SWT.MULTI) != 0);
+	for (int indice : indices) {
+		if (0 <= indice && indice < itemsCount) {
+			selectItem (items [indice], (getStyle () & SWT.MULTI) != 0);
 		}
 	}
 	if (isFocusControl () || (getStyle () & SWT.HIDE_SELECTION) == 0) {
-		for (int i = 0; i < indices.length; i++) {
-			if (0 <= indices [i] && indices [i] < itemsCount) {
-				redrawItem (indices [i], false);
+		for (int indice : indices) {
+			if (0 <= indice && indice < itemsCount) {
+				redrawItem (indice, false);
 			}
 		}
 	}
@@ -3671,8 +3669,8 @@ public void selectAll () {
 	if (isFocusControl () || (getStyle () & SWT.HIDE_SELECTION) == 0) {
 		redraw ();
 	}
-	for (int i = 0; i < selectedItems.length; i++) {
-		selectedItems[i].getAccessible(getAccessible(), 0).selectionChanged();
+	for (CTableItem selectedItem : selectedItems) {
+		selectedItem.getAccessible(getAccessible(), 0).selectionChanged();
 	}
 	getAccessible().selectionChanged();
 }
@@ -3681,14 +3679,14 @@ void selectItem (CTableItem item, boolean addToSelection) {
 	if (!addToSelection || (getStyle () & SWT.SINGLE) != 0) {
 		selectedItems = new CTableItem[] {item};
 		if (isFocusControl () || (getStyle () & SWT.HIDE_SELECTION) == 0) {
-			for (int i = 0; i < oldSelectedItems.length; i++) {
-				if (oldSelectedItems [i] != item) {
-					redrawItem (oldSelectedItems [i].index, true);
+			for (CTableItem oldSelectedItem : oldSelectedItems) {
+				if (oldSelectedItem != item) {
+					redrawItem (oldSelectedItem.index, true);
 				}
 			}
 		}
-		for (int i = 0; i < oldSelectedItems.length; i++) {
-			oldSelectedItems[i].getAccessible(getAccessible(), 0).selectionChanged();
+		for (CTableItem oldSelectedItem : oldSelectedItems) {
+			oldSelectedItem.getAccessible(getAccessible(), 0).selectionChanged();
 		}
 	} else {
 		if (item.isSelected ()) return;
@@ -3765,8 +3763,8 @@ public void setColumnOrder (int [] order) {
 	for (int i = 0; i < order.length; i++) {
 		orderedColumns [i] = columns [order [i]];
 	}
-	for (int i = 0; i < orderedColumns.length; i++) {
-		CTableColumn column = orderedColumns [i];
+	for (CTableColumn orderedColumn : orderedColumns) {
+		CTableColumn column = orderedColumn;
 		if (!column.isDisposed () && column.getX () != oldX [column.getIndex ()]) {
 			column.notifyListeners (SWT.Move, new Event ());
 		}
@@ -3809,8 +3807,8 @@ public void setFont (Font value) {
 	 * Notify all columns and items of the font change so that elements that
 	 * use the receiver's font can recompute their cached string widths.
 	 */
-	for (int i = 0; i < columns.length; i++) {
-		columns [i].updateFont (gc);
+	for (CTableColumn column : columns) {
+		column.updateFont (gc);
 	}
 	for (int i = 0; i < itemsCount; i++) {
 		items [i].updateFont (gc);
@@ -3903,8 +3901,8 @@ public void setItemCount (int count) {
 			/* one or more selected items have been disposed */
 			CTableItem[] newSelectedItems = new CTableItem [newSelectedCount];
 			int pos = 0;
-			for (int i = 0; i < selectedItems.length; i++) {
-				CTableItem item = selectedItems [i];
+			for (CTableItem selectedItem : selectedItems) {
+				CTableItem item = selectedItem;
 				if (!item.isDisposed ()) {
 					newSelectedItems [pos++] = item;
 				}
@@ -4076,8 +4074,8 @@ void setSelection (CTableItem[] items, boolean updateViewport) {
 	/* remove null and duplicate items */
 	int index = 0;
 	selectedItems = new CTableItem [items.length];	/* assume all valid items */
-	for (int i = 0; i < items.length; i++) {
-		CTableItem item = items [i];
+	for (CTableItem item2 : items) {
+		CTableItem item = item2;
 		if (item != null && item.parent == this && !item.isSelected ()) {
 			selectedItems [index++] = item;
 		}
@@ -4102,9 +4100,9 @@ void setSelection (CTableItem[] items, boolean updateViewport) {
 				tableSelectionChanged = true;
 			}
 		}
-		for (int i = 0; i < selectedItems.length; i++) {
-			redrawItem (selectedItems [i].index, true);
-			selectedItems[i].getAccessible(getAccessible(), 0).selectionChanged();
+		for (CTableItem selectedItem : selectedItems) {
+			redrawItem (selectedItem.index, true);
+			selectedItem.getAccessible(getAccessible(), 0).selectionChanged();
 			tableSelectionChanged = true;
 		}
 	}
@@ -4485,8 +4483,8 @@ void updateColumnWidth (CTableColumn column, int width) {
 	gc.dispose ();
 
 	int maximum = 0;
-	for (int i = 0; i < columns.length; i++) {
-		maximum += columns [i].width;
+	for (CTableColumn column2 : columns) {
+		maximum += column2.width;
 	}
 	ScrollBar hBar = getHorizontalBar ();
 	if (hBar != null) {
@@ -4525,8 +4523,8 @@ void updateHorizontalBar () {
 
 	int maxX = 0;
 	if (columns.length > 0) {
-		for (int i = 0; i < columns.length; i++) {
-			maxX += columns [i].width;
+		for (CTableColumn column : columns) {
+			maxX += column.width;
 		}
 	} else {
 		for (int i = 0; i < itemsCount; i++) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTableItem.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTableItem.java
index e7fb736..6a63703 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTableItem.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTableItem.java
@@ -421,9 +421,9 @@ void dispose (boolean notifyParent) {
 }
 void disposeAccessibles() {
 	if (accessibles != null) {
-		for (int i = 0; i < accessibles.length; i++) {
-			if (accessibles[i] != null) {
-				accessibles[i].dispose();
+		for (Accessible accessible : accessibles) {
+			if (accessible != null) {
+				accessible.dispose();
 			}
 		}
 		accessibles = null;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java
index d3c781c..c3a8217 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java
@@ -143,8 +143,8 @@ private boolean closeAddressBook() {
 	}
 
 	TableItem[] items = table.getItems();
-	for (int i = 0; i < items.length; i ++) {
-		items[i].dispose();
+	for (TableItem item : items) {
+		item.dispose();
 	}
 
 	return true;
@@ -336,8 +336,8 @@ private void openAddressBook() {
 
 	String[][] tableInfo = new String[data.length][table.getColumnCount()];
 	int writeIndex = 0;
-	for (int i = 0; i < data.length; i++) {
-		String[] line = decodeLine(data[i]);
+	for (String element : data) {
+		String[] line = decodeLine(element);
 		if (line != null) tableInfo[writeIndex++] = line;
 	}
 	if (writeIndex != data.length) {
@@ -347,9 +347,9 @@ private void openAddressBook() {
 	}
 	Arrays.sort(tableInfo, new RowComparator(0));
 
-	for (int i = 0; i < tableInfo.length; i++) {
+	for (String[] element : tableInfo) {
 		TableItem item = new TableItem(table, SWT.NONE);
-		item.setText(tableInfo[i]);
+		item.setText(element);
 	}
 	shell.setText(resAddressBook.getString("Title_bar")+fileDialog.getFileName());
 	isModified = false;
@@ -374,8 +374,8 @@ private boolean save() {
 	FileWriter fileWriter = null;
 	try {
 		fileWriter = new FileWriter(file.getAbsolutePath(), false);
-		for (int i = 0; i < lines.length; i++) {
-			fileWriter.write(lines[i]);
+		for (String line : lines) {
+			fileWriter.write(line);
 		}
 	} catch(FileNotFoundException e) {
 		displayError(resAddressBook.getString("File_not_found") + "\n" + file.getName());
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/SearchDialog.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/SearchDialog.java
index 166104c..0b934bb 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/SearchDialog.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/SearchDialog.java
@@ -183,8 +183,8 @@ public void open() {
 	searchText.setFocus();
 }
 public void setSearchAreaNames(String[] names) {
-	for (int i = 0; i < names.length; i++) {
-		searchArea.add(names[i]);
+	for (String name : names) {
+		searchArea.add(name);
 	}
 	searchArea.select(0);
 }
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java
index 089f818..834d041 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java
@@ -315,8 +315,7 @@ public class BrowserExample {
 	 */
 	void freeResources() {
 		if (images != null) {
-			for (int i = 0; i < images.length; ++i) {
-				final Image image = images[i];
+			for (final Image image : images) {
 				if (image != null) image.dispose();
 			}
 			images = null;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java
index 6bbf8a8..ea1ad23 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/ClipboardExample.java
@@ -347,9 +347,9 @@ void createFileTransfer(Composite copyParent, Composite pasteParent){
 				String separator = System.getProperty("file.separator");
 				String path = dialog.getFilterPath();
 				String[] names = dialog.getFileNames();
-				for (int i = 0; i < names.length; i++) {
+				for (String name : names) {
 					TableItem item = new TableItem(copyFileTable, SWT.NONE);
-					item.setText(path+separator+names[i]);
+					item.setText(path+separator+name);
 				}
 			}
 		}
@@ -404,9 +404,9 @@ void createFileTransfer(Composite copyParent, Composite pasteParent){
 			if (data != null && data.length > 0) {
 				status.setText("");
 				pasteFileTable.removeAll();
-				for (int i = 0; i < data.length; i++) {
+				for (String element : data) {
 					TableItem item = new TableItem(pasteFileTable, SWT.NONE);
-					item.setText(data[i]);
+					item.setText(element);
 				}
 			} else {
 				status.setText("No file to paste");
@@ -707,8 +707,8 @@ void createAvailableTypes(Composite parent){
 		public void widgetSelected(SelectionEvent e) {
 			list.removeAll();
 			String[] names = clipboard.getAvailableTypeNames();
-			for (int i = 0; i < names.length; i++) {
-				list.add(names[i]);
+			for (String name : names) {
+				list.add(name);
 			}
 		}
 	});
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java
index 60129ea..3ecc8a8 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java
@@ -32,11 +32,11 @@ public void javaToNative (Object object, TransferData transferData) {
 		// write data to a byte array and then ask super to convert to pMedium
 		ByteArrayOutputStream out = new ByteArrayOutputStream();
 		DataOutputStream writeOut = new DataOutputStream(out);
-		for (int i = 0, length = myTypes.length; i < length;  i++){
-			byte[] buffer = myTypes[i].firstName.getBytes();
+		for (MyType myType : myTypes) {
+			byte[] buffer = myType.firstName.getBytes();
 			writeOut.writeInt(buffer.length);
 			writeOut.write(buffer);
-			buffer = myTypes[i].firstName.getBytes();
+			buffer = myType.firstName.getBytes();
 			writeOut.writeInt(buffer.length);
 			writeOut.write(buffer);
 		}
@@ -92,12 +92,12 @@ protected int[] getTypeIds(){
 boolean checkMyType(Object object) {
 	if (object == null || !(object instanceof MyType[]) || ((MyType[])object).length == 0) return false;
 	MyType[] myTypes = (MyType[])object;
-	for (int i = 0; i < myTypes.length; i++) {
-		if (myTypes[i] == null ||
-			myTypes[i].firstName == null ||
-			myTypes[i].firstName.length() == 0 ||
-			myTypes[i].lastName == null ||
-			myTypes[i].lastName.length() == 0) return false;
+	for (MyType myType : myTypes) {
+		if (myType == null ||
+			myType.firstName == null ||
+			myType.firstName.length() == 0 ||
+			myType.lastName == null ||
+			myType.lastName.length() == 0) return false;
 	}
 	return true;
 }
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ColorTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ColorTab.java
index 48a19d0..fe6cdd0 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ColorTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ColorTab.java
@@ -105,10 +105,10 @@ class ColorTab extends Tab {
 		colors = new Table (colorsGroup, style);
 		colors.setHeaderVisible(true);
 		// fill in the table.
-		for (int i = 0; i < columnTitles.length; i++) {
+		for (String columnTitle : columnTitles) {
 			TableColumn tableColumn = new TableColumn(colors, SWT.NONE);
-			tableColumn.setText(columnTitles[i]);
-			tableColumn.setToolTipText(ControlExample.getResourceString("Tooltip", new String [] {columnTitles[i]}));
+			tableColumn.setText(columnTitle);
+			tableColumn.setToolTipText(ControlExample.getResourceString("Tooltip", new String [] {columnTitle}));
 		}
 		// fill in the Data. Put an empty line inbetween "Named" and "SWT" colors.
 		boolean emptyLineFlag=false;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
index 9136f61..db5d66f 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
@@ -142,8 +142,8 @@ class DialogTab extends Tab {
 			textWidget.append ("getRGBs() =" + Text.DELIMITER);
 			RGB[] rgbs = dialog.getRGBs();
 			if (rgbs != null) {
-				for (int i=0; i<rgbs.length; i++) {
-					textWidget.append ("\t" + rgbs [i] + Text.DELIMITER);
+				for (RGB rgb : rgbs) {
+					textWidget.append ("\t" + rgb + Text.DELIMITER);
 				}
 			}
 			textWidget.append (Text.DELIMITER);
@@ -183,8 +183,8 @@ class DialogTab extends Tab {
 			textWidget.append ("getFileName() =" + dialog.getFileName() + Text.DELIMITER);
 			textWidget.append ("getFileNames() =" + Text.DELIMITER);
 			String [] files = dialog.getFileNames ();
-			for (int i=0; i<files.length; i++) {
-				textWidget.append ("\t" + files [i] + Text.DELIMITER);
+			for (String file : files) {
+				textWidget.append ("\t" + file + Text.DELIMITER);
 			}
 			textWidget.append (Text.DELIMITER);
 			fileDialogResult = result;
@@ -206,8 +206,8 @@ class DialogTab extends Tab {
 			textWidget.append ("getFontList() =" + Text.DELIMITER);
 			FontData [] fonts = dialog.getFontList ();
 			if (fonts != null) {
-				for (int i=0; i<fonts.length; i++) {
-					textWidget.append ("\t" + fonts [i] + Text.DELIMITER);
+				for (FontData font2 : fonts) {
+					textWidget.append ("\t" + font2 + Text.DELIMITER);
 				}
 			}
 			textWidget.append ("getEffectsVisible() = " + dialog.getEffectsVisible() + Text.DELIMITER);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
index 79d56a2..17a854f 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
@@ -456,8 +456,8 @@ abstract class Tab {
 			font = null;
 			if (colorAndFontTable != null && !colorAndFontTable.isDisposed()) {
 				TableItem [] items = colorAndFontTable.getItems();
-				for (int i = 0; i < items.length; i++) {
-					Image image = items[i].getImage();
+				for (TableItem item2 : items) {
+					Image image = item2.getImage();
 					if (image != null) image.dispose();
 				}
 			}
@@ -1184,12 +1184,12 @@ abstract class Tab {
 		String methodName = setMethodName(methodRoot);
 		String value = setText.getText();
 		Widget[] widgets = getExampleWidgets();
-		for (int i = 0; i < widgets.length; i++) {
+		for (Widget widget : widgets) {
 			try {
-				if (widgets[i] == null) {
+				if (widget == null) {
 					continue;
 				}
-				java.lang.reflect.Method method = widgets[i].getClass().getMethod(methodName, returnType);
+				java.lang.reflect.Method method = widget.getClass().getMethod(methodName, returnType);
 				String typeName = returnType.getName();
 				Object[] parameter = null;
 				if (value.equals("null")) {
@@ -1227,9 +1227,9 @@ abstract class Tab {
 				} else if (typeName.equals("[Ljava.lang.String;")) {
 					parameter = new Object[] {split(value, ',')};
 				} else {
-					parameter = parameterForType(typeName, value, widgets[i]);
+					parameter = parameterForType(typeName, value, widget);
 				}
-				method.invoke(widgets[i], parameter);
+				method.invoke(widget, parameter);
 			} catch (Exception e) {
 				Throwable cause = e.getCause();
 				String message = e.getMessage();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java
index 77a8ee3..72a4113 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java
@@ -237,8 +237,8 @@ private void createDragSource() {
 					case TABLE: {
 						Table table = (Table)dragControl;
 						TableItem[] items = table.getSelection();
-						for (int i = 0; i < items.length; i++) {
-							items[i].dispose();
+						for (TableItem item : items) {
+							item.dispose();
 						}
 						break;
 					}
@@ -250,8 +250,8 @@ private void createDragSource() {
 					case TREE: {
 						Tree tree = (Tree)dragControl;
 						TreeItem[] items = tree.getSelection();
-						for (int i = 0; i < items.length; i++) {
-							items[i].dispose();
+						for (TreeItem item : items) {
+							item.dispose();
 						}
 						break;
 					}
@@ -434,20 +434,20 @@ private void createDragSource() {
 				}
 			}
 
-			for (int i = 0; i < dragTypes.length; i++) {
-				if (dragTypes[i] instanceof TextTransfer && dragDataText == null) {
+			for (Transfer dragType : dragTypes) {
+				if (dragType instanceof TextTransfer && dragDataText == null) {
 					event.doit = false;
 				}
-				if (dragTypes[i] instanceof RTFTransfer && dragDataRTF == null) {
+				if (dragType instanceof RTFTransfer && dragDataRTF == null) {
 					event.doit = false;
 				}
-				if (dragTypes[i] instanceof HTMLTransfer && dragDataHTML == null) {
+				if (dragType instanceof HTMLTransfer && dragDataHTML == null) {
 					event.doit = false;
 				}
-				if (dragTypes[i] instanceof URLTransfer && dragDataURL == null) {
+				if (dragType instanceof URLTransfer && dragDataURL == null) {
 					event.doit = false;
 				}
-				if (dragTypes[i] instanceof FileTransfer && (dragDataFiles == null || dragDataFiles.length == 0)) {
+				if (dragType instanceof FileTransfer && (dragDataFiles == null || dragDataFiles.length == 0)) {
 					event.doit = false;
 				}
 			}
@@ -540,8 +540,8 @@ private void createDragTypes(Composite parent) {
 				String separator = System.getProperty("file.separator");
 				String path = dialog.getFilterPath();
 				String[] names = dialog.getFileNames();
-				for (int i = 0; i < names.length; i++) {
-					fileList.add(path+separator+names[i]);
+				for (String name : names) {
+					fileList.add(path+separator+name);
 				}
 			}
 		}
@@ -873,8 +873,8 @@ private void createDropTarget() {
 				}
 				case STYLED_TEXT: {
 					StyledText text = (StyledText)dropControl;
-					for(int i = 0; i < strings.length; i++) {
-						text.insert(strings[i]);
+					for (String string : strings) {
+						text.insert(string);
 					}
 					break;
 				}
@@ -883,21 +883,21 @@ private void createDropTarget() {
 					Point p = event.display.map(null, table, event.x, event.y);
 					TableItem dropItem = table.getItem(p);
 					int index = dropItem == null ? table.getItemCount() : table.indexOf(dropItem);
-					for(int i = 0; i < strings.length; i++) {
+					for (String string : strings) {
 						TableItem item = new TableItem(table, SWT.NONE, index);
-						item.setText(0, strings[i]);
+						item.setText(0, string);
 						item.setText(1, "dropped item");
 					}
 					TableColumn[] columns = table.getColumns();
-					for (int i = 0; i < columns.length; i++) {
-						columns[i].pack();
+					for (TableColumn column : columns) {
+						column.pack();
 					}
 					break;
 				}
 				case TEXT: {
 					Text text = (Text)dropControl;
-					for(int i = 0; i < strings.length; i++) {
-						text.append(strings[i]+"\n");
+					for (String string : strings) {
+						text.append(string+"\n");
 					}
 					break;
 				}
@@ -905,9 +905,9 @@ private void createDropTarget() {
 					Tree tree = (Tree)dropControl;
 					Point p = event.display.map(null, tree, event.x, event.y);
 					TreeItem parentItem = tree.getItem(p);
-					for(int i = 0; i < strings.length; i++) {
+					for (String string : strings) {
 						TreeItem item = parentItem != null ? new TreeItem(parentItem, SWT.NONE) : new TreeItem(tree, SWT.NONE);
-						item.setText(strings[i]);
+						item.setText(string);
 					}
 					break;
 				}
@@ -923,8 +923,8 @@ private void createDropTarget() {
 				}
 				case LIST: {
 					List list = (List)dropControl;
-					for(int i = 0; i < strings.length; i++) {
-						list.add(strings[i]);
+					for (String string : strings) {
+						list.add(string);
 					}
 					break;
 				}
@@ -1255,8 +1255,8 @@ private Control createWidget(int type, Composite parent, String prefix){
 						FontMetrics metrics = e.gc.getFontMetrics();
 						int height = metrics.getHeight();
 						int y = 5;
-						for(int i = 0; i < strings.length; i++) {
-							e.gc.drawString(strings[i], 5, y);
+						for (String string : strings) {
+							e.gc.drawString(string, 5, y);
 							y += height + 5;
 						}
 					}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
index a836f27..8478d54 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
@@ -944,8 +944,8 @@ public class FileViewer {
 			// No guarantee that the items are sorted in any recognizable fashion, so we'll
 			// just sequential scan.  There shouldn't be more than a few thousand entries.
 			TreeItem item = null;
-			for (int k = 0; k < items.length; ++k) {
-				item = items[k];
+			for (TreeItem item2 : items) {
+				item = item2;
 				if (item.isDisposed()) continue;
 				final File itemFile = (File) item.getData(TREEITEMDATA_FILE);
 				if (itemFile != null && itemFile.equals(pathElement)) break;
@@ -974,8 +974,8 @@ public class FileViewer {
 			numObjectsLabel.setText(getResourceString("details.NumberOfSelectedFiles.text",
 				new Object[] { Integer.valueOf(files.length) }));
 			long fileSize = 0L;
-			for (int i = 0; i < files.length; ++i) {
-				fileSize += files[i].length();
+			for (File file : files) {
+				fileSize += file.length();
 			}
 			diskSpaceLabel.setText(getResourceString("details.FileSize.text",
 				new Object[] { new Long(fileSize) }));
@@ -1034,8 +1034,7 @@ public class FileViewer {
 		 */
 		boolean refreshTable = false;
 		if (files != null) {
-			for (int i = 0; i < files.length; ++i) {
-				final File file = files[i];
+			for (final File file : files) {
 				if (file.equals(currentDirectory)) {
 					refreshTable = true;
 					break;
@@ -1070,8 +1069,7 @@ public class FileViewer {
 			if (refreshCombo) {
 				combo.removeAll();
 				combo.setData(COMBODATA_ROOTS, roots);
-				for (int i = 0; i < roots.length; ++i) {
-					final File file = roots[i];
+				for (final File file : roots) {
 					combo.add(file.getPath());
 				}
 			}
@@ -1368,8 +1366,8 @@ public class FileViewer {
 				if (progressDialog != null) {
 					progressDialog.addWorkUnits(subFiles.length);
 				}
-				for (int i = 0; i < subFiles.length; i++) {
-					File oldSubFile = subFiles[i];
+				for (File subFile : subFiles) {
+					File oldSubFile = subFile;
 					File newSubFile = new File(newFile, oldSubFile.getName());
 					if (! copyFileStructure(oldSubFile, newSubFile)) return false;
 					if (progressDialog != null) {
@@ -1431,8 +1429,8 @@ public class FileViewer {
 				if (progressDialog != null) {
 					progressDialog.addWorkUnits(subFiles.length);
 				}
-				for (int i = 0; i < subFiles.length; i++) {
-					File oldSubFile = subFiles[i];
+				for (File subFile : subFiles) {
+					File oldSubFile = subFile;
 					if (! deleteFileStructure(oldSubFile)) return false;
 					if (progressDialog != null) {
 						progressDialog.addProgress(1);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
index 383f012..7f4ad24 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
@@ -144,19 +144,19 @@ public class BallTab extends AnimatedGraphicsTab {
 					new Color[] { device.getSystemColor(SWT.COLOR_MAGENTA) });
 		}
 
-		for (int j = 0; j < bc.length; j++) {
-			for (int i = 0; i < bc[j].prevx.size(); i++) {
+		for (BallCollection element : bc) {
+			for (int i = 0; i < element.prevx.size(); i++) {
 				Transform transform = new Transform(device);
-				transform.translate(bc[j].prevx.get(bc[j].prevx.size()
-						- (i + 1)).floatValue(), bc[j].prevy
-						.get(bc[j].prevy.size() - (i + 1)).floatValue());
+				transform.translate(element.prevx.get(element.prevx.size()
+						- (i + 1)).floatValue(), element.prevy
+						.get(element.prevy.size() - (i + 1)).floatValue());
 				gc.setTransform(transform);
 				transform.dispose();
 
 				Path path = new Path(device);
-				path.addArc(0, 0, bc[j].ball_size, bc[j].ball_size, 0, 360);
-				gc.setAlpha(255 - i * (255 / bc[j].capacity));
-				gc.setBackground(bc[j].colors[0]);
+				path.addArc(0, 0, element.ball_size, element.ball_size, 0, 360);
+				gc.setAlpha(255 - i * (255 / element.capacity));
+				gc.setBackground(element.colors[0]);
 				gc.fillPath(path);
 				gc.drawPath(path);
 				path.dispose();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
index 104e52d..26a2234 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
@@ -54,9 +54,9 @@ public CustomFontTab(GraphicsExample example) {
 	// create list of fonts for this platform
 	FontData [] fontData = Display.getCurrent().getFontList(null, true);
 	fontNames = new ArrayList<>();
-	for (int i=0; i < fontData.length; i++) {
+	for (FontData element : fontData) {
 		// remove duplicates and sort
-		String nextName = fontData[i].getName();
+		String nextName = element.getName();
 		if (!fontNames.contains(nextName)) {
 			int j = 0;
 			while(j < fontNames.size() && nextName.compareTo(fontNames.get(j)) > 0) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
index 59d5fc5..9ec69fa 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
@@ -107,8 +107,7 @@ public class HoverHelp {
 		shell.addDisposeListener(e -> {
 			/* Free resources */
 			if (images != null) {
-				for (int i = 0; i < images.length; i++) {
-					final Image image = images[i];
+				for (final Image image : images) {
 					if (image != null) image.dispose();
 				}
 				images = null;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
index e629550..da9ba07 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
@@ -368,8 +368,8 @@ public class ImageAnalyzer {
 		group.setLayout(new RowLayout());
 		group.setText(bundle.getString("X_scale"));
 		scaleXCombo = new Combo(group, SWT.DROP_DOWN);
-		for (int i = 0; i < values.length; i++) {
-			scaleXCombo.add(values[i]);
+		for (String value : values) {
+			scaleXCombo.add(value);
 		}
 		scaleXCombo.select(scaleXCombo.indexOf("1"));
 		scaleXCombo.addSelectionListener(new SelectionAdapter() {
@@ -384,8 +384,8 @@ public class ImageAnalyzer {
 		group.setLayout(new RowLayout());
 		group.setText(bundle.getString("Y_scale"));
 		scaleYCombo = new Combo(group, SWT.DROP_DOWN);
-		for (int i = 0; i < values.length; i++) {
-			scaleYCombo.add(values[i]);
+		for (String value : values) {
+			scaleYCombo.add(value);
 		}
 		scaleYCombo.select(scaleYCombo.indexOf("1"));
 		scaleYCombo.addSelectionListener(new SelectionAdapter() {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
index c96ac3d..ff2546f 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
@@ -89,8 +89,8 @@ void initializeColors() {
 }
 
 void disposeColors() {
-	for (int i=0;i<colors.length;i++) {
-		colors[i].dispose();
+	for (Color color : colors) {
+		color.dispose();
 	}
 }
 
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
index c2f2158..ffd3b4e 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
@@ -73,8 +73,8 @@ public class LayoutExample {
 			@Override
 			public void shellClosed(ShellEvent e) {
 				Shell [] shells = display.getShells();
-				for (int i = 0; i < shells.length; i++) {
-					if (shells [i] != shell) shells [i].close ();
+				for (Shell shell2 : shells) {
+					if (shell2 != shell) shell2.close ();
 				}
 			}
 		});
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
index 2783fde..e43f159 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
@@ -220,8 +220,8 @@ abstract class Tab {
 			public void widgetSelected (SelectionEvent e) {
 				resetEditors ();
 				children = layoutComposite.getChildren ();
-				for (int i = 0; i < children.length; i++) {
-					children [i].dispose ();
+				for (Control element : children) {
+					element.dispose ();
 				}
 				table.removeAll ();
 				data.clear ();
@@ -649,8 +649,8 @@ abstract class Tab {
 	void refreshLayoutComposite () {
 		/* Remove children that are already laid out */
 		children = layoutComposite.getChildren ();
-		for (int i = 0; i < children.length; i++) {
-			children [i].dispose ();
+		for (Control element : children) {
+			element.dispose ();
 		}
 		/* Add all children listed in the table */
 		TableItem [] items = table.getItems ();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
index 1594541..e9e493e 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
@@ -354,8 +354,7 @@ public class PaintExample {
 	public void dispose() {
 		if (paintSurface != null) paintSurface.dispose();
 		if (paintColors != null) {
-			for (int i = 0; i < paintColors.length; ++i) {
-				final Color color = paintColors[i];
+			for (final Color color : paintColors) {
 				if (color != null) color.dispose();
 			}
 		}
@@ -369,8 +368,8 @@ public class PaintExample {
 	 * Frees the resource bundle resources.
 	 */
 	public void freeResources() {
-		for (int i = 0; i < tools.length; ++i) {
-			Tool tool = tools[i];
+		for (Tool tool2 : tools) {
+			Tool tool = tool2;
 			final Image image = tool.image;
 			if (image != null) image.dispose();
 			tool.image = null;
@@ -445,8 +444,8 @@ public class PaintExample {
 	 * Sets the action field of the tools
 	 */
 	private void initActions() {
-		for (int i = 0; i < tools.length; ++i) {
-			final Tool tool = tools[i];
+		for (Tool tool2 : tools) {
+			final Tool tool = tool2;
 			String group = tool.group;
 			if (group.equals("tool")) {
 				tool.action = () -> setPaintTool(tool.id);
@@ -486,8 +485,8 @@ public class PaintExample {
 		final Class<PaintExample> clazz = PaintExample.class;
 		if (resourceBundle != null) {
 			try {
-				for (int i = 0; i < tools.length; ++i) {
-					Tool tool = tools[i];
+				for (Tool tool2 : tools) {
+					Tool tool = tool2;
 					String id = tool.group + '.' + tool.name;
 					InputStream sourceStream = clazz.getResourceAsStream(getResourceString(id + ".image"));
 					ImageData source = new ImageData(sourceStream);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
index c5334d4..6dbd080 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
@@ -1021,8 +1021,7 @@ public class TextEditor {
 		coolItem = new CoolItem(coolBar, SWT.NONE);
 		coolItem.setControl(composite);
 		CoolItem[] coolItems = coolBar.getItems();
-		for (int i = 0; i < coolItems.length; i++) {
-			CoolItem item = coolItems[i];
+		for (CoolItem item : coolItems) {
 			Control control = item.getControl();
 			Point size = control.computeSize(SWT.DEFAULT, SWT.DEFAULT);
 			item.setMinimumSize(size);
@@ -1040,12 +1039,10 @@ public class TextEditor {
 
 	void disposeRanges(StyleRange[] ranges) {
 		StyleRange[] allRanges = styledText.getStyleRanges(0, styledText.getCharCount(), false);
-		for (int i = 0; i < ranges.length; i++) {
-			StyleRange style = ranges[i];
+		for (StyleRange style : ranges) {
 			boolean disposeFg = true, disposeBg = true, disposeStrike= true, disposeUnder= true, disposeBorder = true, disposeFont = true;
 
-			for (int j = 0; j < allRanges.length; j++) {
-				StyleRange s = allRanges[j];
+			for (StyleRange s : allRanges) {
 				if (disposeFont && style.font == s.font) disposeFont = false;
 				if (disposeFg && style.foreground == s.foreground) disposeFg = false;
 				if (disposeBg && style.background == s.background) disposeBg = false;
@@ -1304,8 +1301,8 @@ public class TextEditor {
 		styledText.addPaintObjectListener(event -> handlePaintObject(event));
 		styledText.addListener(SWT.Dispose, event -> {
 			StyleRange[] styles = styledText.getStyleRanges(0, styledText.getCharCount(), false);
-			for (int i = 0; i < styles.length; i++) {
-				Object data = styles[i].data;
+			for (StyleRange style : styles) {
+				Object data = style.data;
 				if (data != null) {
 					if (data instanceof Image) ((Image)data).dispose();
 					if (data instanceof Control) ((Control)data).dispose();
@@ -1615,10 +1612,9 @@ public class TextEditor {
 			if (mergedRange.font != null && ((style & FONT) != 0 || (style & FONT_STYLE) != 0)) {
 				boolean change = false;
 				FontData[] fds = mergedRange.font.getFontData();
-				for (int j = 0; j < fds.length; j++) {
-					FontData fd = fds[j];
+				for (FontData fd : fds) {
 					if (fd.getStyle() != mergedRange.fontStyle) {
-						fds[j].setStyle(mergedRange.fontStyle);
+						fd.setStyle(mergedRange.fontStyle);
 						change = true;
 					}
 				}
@@ -1727,8 +1723,8 @@ public class TextEditor {
 			if (range.font != null) {
 				font = range.font;
 				FontData[] fds = font.getFontData();
-				for (int i = 0; i < fds.length; i++) {
-					int fontStyle = fds[i].getStyle();
+				for (FontData fd : fds) {
+					int fontStyle = fd.getStyle();
 					if (!bold && (fontStyle & SWT.BOLD) != 0) bold = true;
 					if (!italic && (fontStyle & SWT.ITALIC) != 0) italic = true;
 				}
commit e6d5298ba875fab1aef01df4b2010d03328fdb44
Author: Fabian Pfaff <fabian.pfaff@vogella.com>
Date:   Mon Dec 12 16:48:22 2016 +0100

    Bug 509091 - Use enhanced for loop in org.eclipse.swt.examples
    
    * cleans up variable names that got auto-generated
    
    
    Change-Id: Id7850b83ad494202e4951b7bc704f4bdfcdf17df
    Signed-off-by: Fabian Pfaff <fabian.pfaff@vogella.com>

12	13	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
24	10	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
8	8	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
14	8	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
4	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
1	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
17	18	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
index 0432bb0..0b454ab 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
@@ -418,12 +418,12 @@ public void clear (int [] indices) {
 		}
 	}
 
-	for (int indice : indices) {
-		items [indice].clear ();
+	for (int index : indices) {
+		items [index].clear ();
 	}
 	updateHorizontalBar ();
-	for (int indice : indices) {
-		redrawItem (indice, false);
+	for (int index : indices) {
+		redrawItem (index, false);
 	}
 }
 /**
@@ -668,8 +668,8 @@ public void deselect (int [] indices) {
 	checkWidget ();
 	if (indices == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);
 	if (indices.length == 0) return;
-	for (int indice : indices) {
-		deselect (indice);
+	for (int index : indices) {
+		deselect (index);
 	}
 }
 /**
@@ -3635,16 +3635,15 @@ public void select (int [] indices) {
 	checkWidget ();
 	if (indices == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);
 	if (indices.length == 0 || ((getStyle () & SWT.SINGLE) != 0 && indices.length > 1)) return;
-
-	for (int indice : indices) {
-		if (0 <= indice && indice < itemsCount) {
-			selectItem (items [indice], (getStyle () & SWT.MULTI) != 0);
+	for (int index : indices) {
+		if (0 <= index && index < itemsCount) {
+			selectItem (items [index], (getStyle () & SWT.MULTI) != 0);
 		}
 	}
 	if (isFocusControl () || (getStyle () & SWT.HIDE_SELECTION) == 0) {
-		for (int indice : indices) {
-			if (0 <= indice && indice < itemsCount) {
-				redrawItem (indice, false);
+		for (int index : indices) {
+			if (0 <= index && index < itemsCount) {
+				redrawItem (index, false);
 			}
 		}
 	}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
index db5d66f..40b564b 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java
@@ -11,12 +11,26 @@
 package org.eclipse.swt.examples.controlexample;
 
 
-import org.eclipse.swt.*;
-import org.eclipse.swt.graphics.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.printing.*;
-import org.eclipse.swt.events.*;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.SelectionAdapter;
+import org.eclipse.swt.events.SelectionEvent;
+import org.eclipse.swt.events.SelectionListener;
+import org.eclipse.swt.graphics.FontData;
+import org.eclipse.swt.graphics.RGB;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.printing.PrintDialog;
+import org.eclipse.swt.printing.PrinterData;
+import org.eclipse.swt.widgets.Button;
+import org.eclipse.swt.widgets.ColorDialog;
+import org.eclipse.swt.widgets.Combo;
+import org.eclipse.swt.widgets.DirectoryDialog;
+import org.eclipse.swt.widgets.FileDialog;
+import org.eclipse.swt.widgets.FontDialog;
+import org.eclipse.swt.widgets.Group;
+import org.eclipse.swt.widgets.MessageBox;
+import org.eclipse.swt.widgets.Text;
+import org.eclipse.swt.widgets.Widget;
 
 class DialogTab extends Tab {
 	/* Example widgets and groups that contain them */
@@ -142,8 +156,8 @@ class DialogTab extends Tab {
 			textWidget.append ("getRGBs() =" + Text.DELIMITER);
 			RGB[] rgbs = dialog.getRGBs();
 			if (rgbs != null) {
-				for (RGB rgb : rgbs) {
-					textWidget.append ("\t" + rgb + Text.DELIMITER);
+				for (RGB rgbColor : rgbs) {
+					textWidget.append ("\t" + rgbColor + Text.DELIMITER);
 				}
 			}
 			textWidget.append (Text.DELIMITER);
@@ -206,8 +220,8 @@ class DialogTab extends Tab {
 			textWidget.append ("getFontList() =" + Text.DELIMITER);
 			FontData [] fonts = dialog.getFontList ();
 			if (fonts != null) {
-				for (FontData font2 : fonts) {
-					textWidget.append ("\t" + font2 + Text.DELIMITER);
+				for (FontData font : fonts) {
+					textWidget.append ("\t" + font + Text.DELIMITER);
 				}
 			}
 			textWidget.append ("getEffectsVisible() = " + dialog.getEffectsVisible() + Text.DELIMITER);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
index 17a854f..9e105b6 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
@@ -456,8 +456,8 @@ abstract class Tab {
 			font = null;
 			if (colorAndFontTable != null && !colorAndFontTable.isDisposed()) {
 				TableItem [] items = colorAndFontTable.getItems();
-				for (TableItem item2 : items) {
-					Image image = item2.getImage();
+				for (TableItem currentItem : items) {
+					Image image = currentItem.getImage();
 					if (image != null) image.dispose();
 				}
 			}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
index 8478d54..28e8369 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
@@ -944,8 +944,8 @@ public class FileViewer {
 			// No guarantee that the items are sorted in any recognizable fashion, so we'll
 			// just sequential scan.  There shouldn't be more than a few thousand entries.
 			TreeItem item = null;
-			for (TreeItem item2 : items) {
-				item = item2;
+			for (TreeItem currentItem : items) {
+				item = currentItem;
 				if (item.isDisposed()) continue;
 				final File itemFile = (File) item.getData(TREEITEMDATA_FILE);
 				if (itemFile != null && itemFile.equals(pathElement)) break;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
index 7f4ad24..d169ae8 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/BallTab.java
@@ -144,19 +144,19 @@ public class BallTab extends AnimatedGraphicsTab {
 					new Color[] { device.getSystemColor(SWT.COLOR_MAGENTA) });
 		}
 
-		for (BallCollection element : bc) {
-			for (int i = 0; i < element.prevx.size(); i++) {
+		for (BallCollection ballCollection : bc) {
+			for (int i = 0; i < ballCollection.prevx.size(); i++) {
 				Transform transform = new Transform(device);
-				transform.translate(element.prevx.get(element.prevx.size()
-						- (i + 1)).floatValue(), element.prevy
-						.get(element.prevy.size() - (i + 1)).floatValue());
+				transform.translate(ballCollection.prevx.get(ballCollection.prevx.size()
+						- (i + 1)).floatValue(), ballCollection.prevy
+						.get(ballCollection.prevy.size() - (i + 1)).floatValue());
 				gc.setTransform(transform);
 				transform.dispose();
 
 				Path path = new Path(device);
-				path.addArc(0, 0, element.ball_size, element.ball_size, 0, 360);
-				gc.setAlpha(255 - i * (255 / element.capacity));
-				gc.setBackground(element.colors[0]);
+				path.addArc(0, 0, ballCollection.ball_size, ballCollection.ball_size, 0, 360);
+				gc.setAlpha(255 - i * (255 / ballCollection.capacity));
+				gc.setBackground(ballCollection.colors[0]);
 				gc.fillPath(path);
 				gc.drawPath(path);
 				path.dispose();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
index ffd3b4e..f9395da 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/LayoutExample.java
@@ -11,13 +11,19 @@
 package org.eclipse.swt.examples.layoutexample;
 
 
-import org.eclipse.swt.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.events.*;
+import java.text.MessageFormat;
+import java.util.MissingResourceException;
+import java.util.ResourceBundle;
 
-import java.text.*;
-import java.util.*;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.ShellAdapter;
+import org.eclipse.swt.events.ShellEvent;
+import org.eclipse.swt.layout.FillLayout;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.swt.widgets.TabFolder;
+import org.eclipse.swt.widgets.TabItem;
 
 public class LayoutExample {
 	private static ResourceBundle resourceBundle = ResourceBundle.getBundle("examples_layout");
@@ -73,8 +79,8 @@ public class LayoutExample {
 			@Override
 			public void shellClosed(ShellEvent e) {
 				Shell [] shells = display.getShells();
-				for (Shell shell2 : shells) {
-					if (shell2 != shell) shell2.close ();
+				for (Shell currentShell : shells) {
+					if (currentShell != shell) currentShell.close ();
 				}
 			}
 		});
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
index e43f159..1bae1e7 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
@@ -220,8 +220,8 @@ abstract class Tab {
 			public void widgetSelected (SelectionEvent e) {
 				resetEditors ();
 				children = layoutComposite.getChildren ();
-				for (Control element : children) {
-					element.dispose ();
+				for (Control child : children) {
+					child.dispose ();
 				}
 				table.removeAll ();
 				data.clear ();
@@ -649,8 +649,8 @@ abstract class Tab {
 	void refreshLayoutComposite () {
 		/* Remove children that are already laid out */
 		children = layoutComposite.getChildren ();
-		for (Control element : children) {
-			element.dispose ();
+		for (Control child : children) {
+			child.dispose ();
 		}
 		/* Add all children listed in the table */
 		TableItem [] items = table.getItems ();
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
index e9e493e..1ee6b41 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
@@ -368,8 +368,7 @@ public class PaintExample {
 	 * Frees the resource bundle resources.
 	 */
 	public void freeResources() {
-		for (Tool tool2 : tools) {
-			Tool tool = tool2;
+		for (Tool tool : tools) {
 			final Image image = tool.image;
 			if (image != null) image.dispose();
 			tool.image = null;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
index 6dbd080..6086d6a 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
@@ -1039,25 +1039,24 @@ public class TextEditor {
 
 	void disposeRanges(StyleRange[] ranges) {
 		StyleRange[] allRanges = styledText.getStyleRanges(0, styledText.getCharCount(), false);
-		for (StyleRange style : ranges) {
+		for (StyleRange rangeToDispose : ranges) {
 			boolean disposeFg = true, disposeBg = true, disposeStrike= true, disposeUnder= true, disposeBorder = true, disposeFont = true;
-
-			for (StyleRange s : allRanges) {
-				if (disposeFont && style.font == s.font) disposeFont = false;
-				if (disposeFg && style.foreground == s.foreground) disposeFg = false;
-				if (disposeBg && style.background == s.background) disposeBg = false;
-				if (disposeStrike && style.strikeoutColor == s.strikeoutColor) disposeStrike = false;
-				if (disposeUnder && style.underlineColor == s.underlineColor) disposeUnder = false;
-				if (disposeBorder && style.borderColor == s.borderColor) disposeBorder =  false;
-			}
-			if (disposeFont && style.font != textFont && style.font != null)  style.font.dispose();
-			if (disposeFg && style.foreground != textForeground && style.foreground != null) style.foreground.dispose();
-			if (disposeBg && style.background != textBackground && style.background != null) style.background.dispose();
-			if (disposeStrike && style.strikeoutColor != strikeoutColor && style.strikeoutColor != null) style.strikeoutColor.dispose();
-			if (disposeUnder && style.underlineColor != underlineColor && style.underlineColor != null) style.underlineColor.dispose();
-			if (disposeBorder && style.borderColor != borderColor && style.borderColor != null) style.borderColor.dispose();
-
-			Object data = style.data;
+			for (StyleRange range : allRanges) {
+				if (disposeFont && rangeToDispose.font == range.font) disposeFont = false;
+				if (disposeFg && rangeToDispose.foreground == range.foreground) disposeFg = false;
+				if (disposeBg && rangeToDispose.background == range.background) disposeBg = false;
+				if (disposeStrike && rangeToDispose.strikeoutColor == range.strikeoutColor) disposeStrike = false;
+				if (disposeUnder && rangeToDispose.underlineColor == range.underlineColor) disposeUnder = false;
+				if (disposeBorder && rangeToDispose.borderColor == range.borderColor) disposeBorder =  false;
+			}
+			if (disposeFont && rangeToDispose.font != textFont && rangeToDispose.font != null)  rangeToDispose.font.dispose();
+			if (disposeFg && rangeToDispose.foreground != textForeground && rangeToDispose.foreground != null) rangeToDispose.foreground.dispose();
+			if (disposeBg && rangeToDispose.background != textBackground && rangeToDispose.background != null) rangeToDispose.background.dispose();
+			if (disposeStrike && rangeToDispose.strikeoutColor != strikeoutColor && rangeToDispose.strikeoutColor != null) rangeToDispose.strikeoutColor.dispose();
+			if (disposeUnder && rangeToDispose.underlineColor != underlineColor && rangeToDispose.underlineColor != null) rangeToDispose.underlineColor.dispose();
+			if (disposeBorder && rangeToDispose.borderColor != borderColor && rangeToDispose.borderColor != null) rangeToDispose.borderColor.dispose();
+
+			Object data = rangeToDispose.data;
 			if (data != null) {
 				if (data instanceof Image) ((Image)data).dispose();
 				if (data instanceof Control) ((Control)data).dispose();
