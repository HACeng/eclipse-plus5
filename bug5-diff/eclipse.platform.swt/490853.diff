commit 88cbde11660dd993ed105f8452359810d973692c
Author: Lars Vogel <Lars.Vogel@vogella.com>
Date:   Fri Apr 1 09:30:36 2016 +0200

    Bug 490853 - Replace new Integer() with Integer.valueOf() in
    org.eclipse.swt.examples
    
    I used the fix copyright tool to update the copyright header.
    
    Change-Id: I2afcc354a896264fc2c34e18c95d6f74e3e7be9a
    Signed-off-by: Lars Vogel <Lars.Vogel@vogella.com>

3	3	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleValueExample.java
6	6	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
1	1	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/DataEntryDialog.java
20	20	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CountDownTab.java
24	24	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
5	5	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
31	31	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
1	1	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
1	1	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
7	7	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintSurface.java
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleValueExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleValueExample.java
index 12b9b76..584dbbe 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleValueExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/AccessibleValueExample.java
@@ -72,15 +72,15 @@ public class AccessibleValueExample {
 			}
 			@Override
 			public void getMinimumValue(AccessibleValueEvent e) {
-				e.value = new Integer(min);
+				e.value = Integer.valueOf(min);
 			}
 			@Override
 			public void getMaximumValue(AccessibleValueEvent e) {
-				e.value = new Integer(max);
+				e.value = Integer.valueOf(max);
 			}
 			@Override
 			public void getCurrentValue(AccessibleValueEvent e) {
-				e.value = new Integer(value);
+				e.value = Integer.valueOf(value);
 			}
 		});
 
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
index eec24f6..4d01a5c 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
@@ -69,7 +69,7 @@ public class BarChart extends Canvas {
 			Rectangle rect = getClientArea();
 			Display display = getDisplay();
 			int count = data.size();
-			Point valueSize = gc.stringExtent (new Integer(valueMax).toString());
+			Point valueSize = gc.stringExtent (Integer.valueOf(valueMax).toString());
 			int leftX = rect.x + 2 * GAP + valueSize.x;
 			int bottomY = rect.y + rect.height - 2 * GAP - valueSize.y;
 			int unitWidth = (rect.width - 4 * GAP - valueSize.x - AXIS_WIDTH) / count - GAP;
@@ -85,7 +85,7 @@ public class BarChart extends Canvas {
 			for (int i1 = valueMin; i1 <= valueMax; i1+=valueIncrement) {
 				int y = bottomY - i1 * unitHeight;
 				gc.drawLine(leftX, y, leftX - GAP, y);
-				gc.drawString(new Integer(i1).toString(), rect.x + GAP, y - valueSize.y);
+				gc.drawString(Integer.valueOf(i1).toString(), rect.x + GAP, y - valueSize.y);
 			}
 			// draw the x axis and item labels
 			gc.drawLine(leftX, bottomY, rect.x + rect.width - GAP, bottomY);
@@ -239,7 +239,7 @@ public class BarChart extends Canvas {
 				int count = data.size();
 				Object[] children = new Object[count];
 				for (int i = 0; i < count; i++) {
-					children[i] = new Integer(i);
+					children[i] = Integer.valueOf(i);
 				}
 				e.children = children;
 			}
@@ -320,7 +320,7 @@ public class BarChart extends Canvas {
 		int count = data.size();
 		GC gc = new GC (this);
 		int titleWidth = gc.stringExtent (title).x;
-		Point valueSize = gc.stringExtent (new Integer(valueMax).toString());
+		Point valueSize = gc.stringExtent (Integer.valueOf(valueMax).toString());
 		int itemWidth = 0;
 		for (int i = 0; i < count; i++) {
 			Object [] dataItem = data.get(i);
@@ -345,7 +345,7 @@ public class BarChart extends Canvas {
 	 */
 	public void addData (String label, int value) {
 		checkWidget ();
-		data.add(new Object[] {label, new Integer(value)});
+		data.add(new Object[] {label, Integer.valueOf(value)});
 	}
 
 	/**
@@ -406,7 +406,7 @@ public class BarChart extends Canvas {
 	Rectangle itemBounds(int index) {
 		Rectangle rect = getClientArea();
 		GC gc = new GC (BarChart.this);
-		Point valueSize = gc.stringExtent (new Integer(valueMax).toString());
+		Point valueSize = gc.stringExtent (Integer.valueOf(valueMax).toString());
 		gc.dispose();
 		int leftX = rect.x + 2 * GAP + valueSize.x;
 		int bottomY = rect.y + rect.height - 2 * GAP - valueSize.y;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
index 1c9de87..539da19 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/CTable.java
@@ -1855,7 +1855,7 @@ void initAccessibility () {
 			int childIdCount = columns.length > 0 ? columns.length + itemsCount * columns.length : itemsCount;
 			Object[] children = new Object[childIdCount];
 			for (int i = 0; i < childIdCount; i++) {
-				children[i] = new Integer(i);
+				children[i] = Integer.valueOf(i);
 			}
 			e.children = children;
 		}
@@ -1904,7 +1904,7 @@ void initAccessibility () {
 			for (int i = 0; i < selectionIndices.length; i++) {
 				int row = selectionIndices[i];
 				for (int col = 0; col < columnCount; col++) {
-					selectedChildren[i] = new Integer(row * columnCount + col);
+					selectedChildren[i] = Integer.valueOf(row * columnCount + col);
 				}
 			}
 			e.children = selectedChildren;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/DataEntryDialog.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/DataEntryDialog.java
index 49ab5d0..e21a92e 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/DataEntryDialog.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/DataEntryDialog.java
@@ -102,7 +102,7 @@ private void createTextWidgets() {
 		if (values[i] != null) {
 			text.setText(values[i]);
 		}
-		text.setData("index", new Integer(i));
+		text.setData("index", Integer.valueOf(i));
 		addTextListener(text);
 	}
 }
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
index 0d1260f..db98f90 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java
@@ -244,24 +244,24 @@ abstract class Tab {
 	};
 
 	static final Object [] DETAIL_VALUES = {
-		"SWT.COMPOSITION_CHANGED", new Integer(SWT.COMPOSITION_CHANGED),
-		"SWT.COMPOSITION_OFFSET", new Integer(SWT.COMPOSITION_OFFSET),
-		"SWT.COMPOSITION_SELECTION", new Integer(SWT.COMPOSITION_SELECTION),
-		"SWT.SELECTED", new Integer(SWT.SELECTED),
-		"SWT.FOCUSED", new Integer(SWT.FOCUSED),
-		"SWT.BACKGROUND", new Integer(SWT.BACKGROUND),
-		"SWT.FOREGROUND", new Integer(SWT.FOREGROUND),
-		"SWT.HOT", new Integer(SWT.HOT),
-		"SWT.TRAVERSE_NONE", new Integer(SWT.TRAVERSE_NONE),
-		"SWT.TRAVERSE_ESCAPE", new Integer(SWT.TRAVERSE_ESCAPE),
-		"SWT.TRAVERSE_RETURN", new Integer(SWT.TRAVERSE_RETURN),
-		"SWT.TRAVERSE_TAB_PREVIOUS", new Integer(SWT.TRAVERSE_TAB_PREVIOUS),
-		"SWT.TRAVERSE_TAB_NEXT", new Integer(SWT.TRAVERSE_TAB_NEXT),
-		"SWT.TRAVERSE_ARROW_PREVIOUS", new Integer(SWT.TRAVERSE_ARROW_PREVIOUS),
-		"SWT.TRAVERSE_ARROW_NEXT", new Integer(SWT.TRAVERSE_ARROW_NEXT),
-		"SWT.TRAVERSE_MNEMONIC", new Integer(SWT.TRAVERSE_MNEMONIC),
-		"SWT.TRAVERSE_PAGE_PREVIOUS", new Integer(SWT.TRAVERSE_PAGE_PREVIOUS),
-		"SWT.TRAVERSE_PAGE_NEXT", new Integer(SWT.TRAVERSE_PAGE_NEXT),
+		"SWT.COMPOSITION_CHANGED", Integer.valueOf(SWT.COMPOSITION_CHANGED),
+		"SWT.COMPOSITION_OFFSET", Integer.valueOf(SWT.COMPOSITION_OFFSET),
+		"SWT.COMPOSITION_SELECTION", Integer.valueOf(SWT.COMPOSITION_SELECTION),
+		"SWT.SELECTED", Integer.valueOf(SWT.SELECTED),
+		"SWT.FOCUSED", Integer.valueOf(SWT.FOCUSED),
+		"SWT.BACKGROUND", Integer.valueOf(SWT.BACKGROUND),
+		"SWT.FOREGROUND", Integer.valueOf(SWT.FOREGROUND),
+		"SWT.HOT", Integer.valueOf(SWT.HOT),
+		"SWT.TRAVERSE_NONE", Integer.valueOf(SWT.TRAVERSE_NONE),
+		"SWT.TRAVERSE_ESCAPE", Integer.valueOf(SWT.TRAVERSE_ESCAPE),
+		"SWT.TRAVERSE_RETURN", Integer.valueOf(SWT.TRAVERSE_RETURN),
+		"SWT.TRAVERSE_TAB_PREVIOUS", Integer.valueOf(SWT.TRAVERSE_TAB_PREVIOUS),
+		"SWT.TRAVERSE_TAB_NEXT", Integer.valueOf(SWT.TRAVERSE_TAB_NEXT),
+		"SWT.TRAVERSE_ARROW_PREVIOUS", Integer.valueOf(SWT.TRAVERSE_ARROW_PREVIOUS),
+		"SWT.TRAVERSE_ARROW_NEXT", Integer.valueOf(SWT.TRAVERSE_ARROW_NEXT),
+		"SWT.TRAVERSE_MNEMONIC", Integer.valueOf(SWT.TRAVERSE_MNEMONIC),
+		"SWT.TRAVERSE_PAGE_PREVIOUS", Integer.valueOf(SWT.TRAVERSE_PAGE_PREVIOUS),
+		"SWT.TRAVERSE_PAGE_NEXT", Integer.valueOf(SWT.TRAVERSE_PAGE_NEXT),
 	};
 
 	/**
@@ -1192,7 +1192,7 @@ abstract class Tab {
 				if (value.equals("null")) {
 					parameter = new Object[] {null};
 				} else if (typeName.equals("int")) {
-					parameter = new Object[] {new Integer(value)};
+					parameter = new Object[] {Integer.valueOf(value)};
 				} else if (typeName.equals("long")) {
 					parameter = new Object[] {new Long(value)};
 				} else if (typeName.equals("char")) {
@@ -1211,7 +1211,7 @@ abstract class Tab {
 					String strings[] = split(value, ',');
 					int[] ints = new int[strings.length];
 					for (int j = 0; j < strings.length; j++) {
-						ints[j] = new Integer(strings[j]).intValue();
+						ints[j] = Integer.valueOf(strings[j]).intValue();
 					}
 					parameter = new Object[] {ints};
 				} else if (typeName.equals("[C")) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
index a0ae19c..f3f655d 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
@@ -972,7 +972,7 @@ public class FileViewer {
 		 */
 		if ((files != null) && (files.length != 0)) {
 			numObjectsLabel.setText(getResourceString("details.NumberOfSelectedFiles.text",
-				new Object[] { new Integer(files.length) }));
+				new Object[] { Integer.valueOf(files.length) }));
 			long fileSize = 0L;
 			for (int i = 0; i < files.length; ++i) {
 				fileSize += files[i].length();
@@ -985,7 +985,7 @@ public class FileViewer {
 			if (currentDirectory != null) {
 				int numObjects = getDirectoryList(currentDirectory).length;
 				numObjectsLabel.setText(getResourceString("details.DirNumberOfObjects.text",
-					new Object[] { new Integer(numObjects) }));
+					new Object[] { Integer.valueOf(numObjects) }));
 			} else {
 				numObjectsLabel.setText("");
 			}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CountDownTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CountDownTab.java
index 9a0c01c..8bc09b1 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CountDownTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CountDownTab.java
@@ -226,12 +226,12 @@ public class CountDownTab extends AnimatedGraphicsTab {
 			gc.fillPath(path);
 			path.dispose();
 
-			Point point = gc.stringExtent(new Integer(nextNumber).toString());
+			Point point = gc.stringExtent(Integer.valueOf(nextNumber).toString());
 			int textWidth = point.x;
 			int textHeight = point.y;
 
 			// draw the number
-			gc.drawString(new Integer(nextNumber).toString(),
+			gc.drawString(Integer.valueOf(nextNumber).toString(),
 					(width-textWidth)/2, (height-textHeight)/2, true);
 
 			// draw the rotating arm
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
index 6cac112..1e96e39 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
@@ -236,15 +236,15 @@ public void paint(GC gc, int width, int height) {
  */
 private List<Integer> moveLeft(int x1, int y1, int x2, int y2, int stepsize) {
 	List<Integer> coords = new ArrayList<>();
-	coords.add(new Integer(x1));
-	coords.add(new Integer(y1));
+	coords.add(Integer.valueOf(x1));
+	coords.add(Integer.valueOf(y1));
 	while(x1 - stepsize > x2) {
 		x1 = x1 - stepsize;
-		coords.add(new Integer(x1));
-		coords.add(new Integer(y1));
+		coords.add(Integer.valueOf(x1));
+		coords.add(Integer.valueOf(y1));
 	}
-	coords.add(new Integer(x2));
-	coords.add(new Integer(y2));
+	coords.add(Integer.valueOf(x2));
+	coords.add(Integer.valueOf(y2));
 	return coords;
 }
 
@@ -265,15 +265,15 @@ private List<Integer> moveLeft(int x1, int y1, int x2, int y2, int stepsize) {
  */
 private List<Integer> moveRight(int x1, int y1, int x2, int y2, int stepsize) {
 	List<Integer> coords = new ArrayList<>();
-	coords.add(new Integer(x1));
-	coords.add(new Integer(y1));
+	coords.add(Integer.valueOf(x1));
+	coords.add(Integer.valueOf(y1));
 	while(x1 + stepsize < x2) {
 		x1 = x1 + stepsize;
-		coords.add(new Integer(x1));
-		coords.add(new Integer(y1));
+		coords.add(Integer.valueOf(x1));
+		coords.add(Integer.valueOf(y1));
 	}
-	coords.add(new Integer(x2));
-	coords.add(new Integer(y2));
+	coords.add(Integer.valueOf(x2));
+	coords.add(Integer.valueOf(y2));
 	return coords;
 }
 
@@ -294,15 +294,15 @@ private List<Integer> moveRight(int x1, int y1, int x2, int y2, int stepsize) {
  */
 private List<Integer> moveUp(int x1, int y1, int x2, int y2, int stepsize) {
 	List<Integer> coords = new ArrayList<>();
-	coords.add(new Integer(x1));
-	coords.add(new Integer(y1));
+	coords.add(Integer.valueOf(x1));
+	coords.add(Integer.valueOf(y1));
 	while(y1 - stepsize > y2) {
 		y1 = y1 - stepsize;
-		coords.add(new Integer(x1));
-		coords.add(new Integer(y1));
+		coords.add(Integer.valueOf(x1));
+		coords.add(Integer.valueOf(y1));
 	}
-	coords.add(new Integer(x2));
-	coords.add(new Integer(y2));
+	coords.add(Integer.valueOf(x2));
+	coords.add(Integer.valueOf(y2));
 	return coords;
 }
 
@@ -323,15 +323,15 @@ private List<Integer> moveUp(int x1, int y1, int x2, int y2, int stepsize) {
  */
 private List<Integer> moveDown(int x1, int y1, int x2, int y2, int stepsize) {
 	List<Integer> coords = new ArrayList<>();
-	coords.add(new Integer(x1));
-	coords.add(new Integer(y1));
+	coords.add(Integer.valueOf(x1));
+	coords.add(Integer.valueOf(y1));
 	while(y1 + stepsize < y2) {
 		y1 = y1 + stepsize;
-		coords.add(new Integer(x1));
-		coords.add(new Integer(y1));
+		coords.add(Integer.valueOf(x1));
+		coords.add(Integer.valueOf(y1));
 	}
-	coords.add(new Integer(x2));
-	coords.add(new Integer(y2));
+	coords.add(Integer.valueOf(x2));
+	coords.add(Integer.valueOf(y2));
 	return coords;
 }
 
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
index 29ec357..59d5fc5 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java
@@ -167,7 +167,7 @@ public class HoverHelp {
 		ToolBar bar = new ToolBar (frame, SWT.BORDER);
 		for (int i=0; i<5; i++) {
 			ToolItem item = new ToolItem (bar, SWT.PUSH);
-			item.setText (getResourceString("ToolItem.text", new Object[] { new Integer(i) }));
+			item.setText (getResourceString("ToolItem.text", new Object[] { Integer.valueOf(i) }));
 			item.setData ("TIP_TEXT", getResourceString("ToolItem.tooltip",
 				new Object[] { item.getText(), helpKey }));
 			item.setData ("TIP_HELPTEXTHANDLER", new ToolTipHelpTextHandler() {
@@ -186,9 +186,9 @@ public class HoverHelp {
 		Table table = new Table (frame, SWT.BORDER);
 		for (int i=0; i<4; i++) {
 			TableItem item = new TableItem (table, SWT.PUSH);
-			item.setText (getResourceString("Item", new Object[] { new Integer(i) }));
+			item.setText (getResourceString("Item", new Object[] { Integer.valueOf(i) }));
 			item.setData ("TIP_IMAGE", images[hhiInformation]);
-			item.setText (getResourceString("TableItem.text", new Object[] { new Integer(i) }));
+			item.setText (getResourceString("TableItem.text", new Object[] { Integer.valueOf(i) }));
 			item.setData ("TIP_TEXT", getResourceString("TableItem.tooltip",
 				new Object[] { item.getText(), helpKey }));
 			item.setData ("TIP_HELPTEXTHANDLER", new ToolTipHelpTextHandler() {
@@ -205,9 +205,9 @@ public class HoverHelp {
 		Tree tree = new Tree (frame, SWT.BORDER);
 		for (int i=0; i<4; i++) {
 			TreeItem item = new TreeItem (tree, SWT.PUSH);
-			item.setText (getResourceString("Item", new Object[] { new Integer(i) }));
+			item.setText (getResourceString("Item", new Object[] { Integer.valueOf(i) }));
 			item.setData ("TIP_IMAGE", images[hhiWarning]);
-			item.setText (getResourceString("TreeItem.text", new Object[] { new Integer(i) }));
+			item.setText (getResourceString("TreeItem.text", new Object[] { Integer.valueOf(i) }));
 			item.setData ("TIP_TEXT", getResourceString("TreeItem.tooltip",
 				new Object[] { item.getText(), helpKey}));
 			item.setData ("TIP_HELPTEXTHANDLER", new ToolTipHelpTextHandler() {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
index 2822e62..e629550 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
@@ -1240,7 +1240,7 @@ public class ImageAnalyzer {
 			boolean multi = false;
 			if (loader.data.length > 1) {
 				MessageBox box = new MessageBox(shell, SWT.ICON_QUESTION | SWT.YES | SWT.NO | SWT.CANCEL);
-				box.setMessage(createMsg(bundle.getString("Save_all"), new Integer(loader.data.length)));
+				box.setMessage(createMsg(bundle.getString("Save_all"), Integer.valueOf(loader.data.length)));
 				int result = box.open();
 				if (result == SWT.CANCEL) return;
 				if (result == SWT.YES) multi = true;
@@ -1571,9 +1571,9 @@ public class ImageAnalyzer {
 					Integer.toHexString(alphaValue)
 			};
 			Object[] args = {
-					new Integer(x),
-					new Integer(y),
-					new Integer(pixel),
+					Integer.valueOf(x),
+					Integer.valueOf(y),
+					Integer.valueOf(pixel),
 					Integer.toHexString(pixel),
 					createMsg(rgbMessageFormat, rgbArgs),
 					createMsg(rgbMessageFormat, rgbHexArgs),
@@ -1601,7 +1601,7 @@ public class ImageAnalyzer {
 						animateLoop();
 					} catch (final SWTException e) {
 						display.syncExec(() -> showErrorDialog(createMsg(bundle.getString("Creating_image"),
-								    new Integer(imageDataIndex+1)),
+								    Integer.valueOf(imageDataIndex+1)),
 								    currentName, e));
 					}
 
@@ -1837,20 +1837,20 @@ public class ImageAnalyzer {
 		if (imageDataArray.length > 1) {
 			string = createMsg(bundle.getString("Type_index"),
 			                   new Object[] {fileTypeString(imageData.type),
-			                                 new Integer(imageDataIndex + 1),
-			                                 new Integer(imageDataArray.length)});
+			                                 Integer.valueOf(imageDataIndex + 1),
+			                                 Integer.valueOf(imageDataArray.length)});
 		} else {
 			string = createMsg(bundle.getString("Type_string"), fileTypeString(imageData.type));
 		}
 		typeLabel.setText(string);
 
 		string = createMsg(bundle.getString("Size_value"),
-					 new Object[] {new Integer(imageData.width),
-							   new Integer(imageData.height)});
+					 new Object[] {Integer.valueOf(imageData.width),
+							   Integer.valueOf(imageData.height)});
 		sizeLabel.setText(string);
 
 		string = createMsg(bundle.getString("Depth_value"),
-				new Object[] {new Integer(imageData.depth), new Integer(display.getDepth())});
+				new Object[] {Integer.valueOf(imageData.depth), Integer.valueOf(display.getDepth())});
 		depthLabel.setText(string);
 
 		string = createMsg(bundle.getString("Transparent_pixel_value"), pixelInfo(imageData.transparentPixel));
@@ -1860,19 +1860,19 @@ public class ImageAnalyzer {
 		timeToLoadLabel.setText(string);
 
 		string = createMsg(bundle.getString("Animation_size_value"),
-		                      new Object[] {new Integer(loader.logicalScreenWidth),
-								new Integer(loader.logicalScreenHeight)});
+		                      new Object[] {Integer.valueOf(loader.logicalScreenWidth),
+								Integer.valueOf(loader.logicalScreenHeight)});
 		screenSizeLabel.setText(string);
 
 		string = createMsg(bundle.getString("Background_pixel_value"), pixelInfo(loader.backgroundPixel));
 		backgroundPixelLabel.setText(string);
 
 		string = createMsg(bundle.getString("Image_location_value"),
-		                      new Object[] {new Integer(imageData.x), new Integer(imageData.y)});
+		                      new Object[] {Integer.valueOf(imageData.x), Integer.valueOf(imageData.y)});
 		locationLabel.setText(string);
 
 		string = createMsg(bundle.getString("Disposal_value"),
-		                      new Object[] {new Integer(imageData.disposalMethod),
+		                      new Object[] {Integer.valueOf(imageData.disposalMethod),
 							      disposalString(imageData.disposalMethod)});
 		disposalMethodLabel.setText(string);
 
@@ -1880,31 +1880,31 @@ public class ImageAnalyzer {
 		int delayUsed = visibleDelay(delay);
 		if (delay != delayUsed) {
 			string = createMsg(bundle.getString("Delay_value"),
-			                   new Object[] {new Integer(delay), new Integer(delayUsed)});
+			                   new Object[] {Integer.valueOf(delay), Integer.valueOf(delayUsed)});
 		} else {
-			string = createMsg(bundle.getString("Delay_used"), new Integer(delay));
+			string = createMsg(bundle.getString("Delay_used"), Integer.valueOf(delay));
 		}
 		delayTimeLabel.setText(string);
 
 		if (loader.repeatCount == 0) {
-			string = createMsg( bundle.getString("Repeats_forever"), new Integer(loader.repeatCount));
+			string = createMsg( bundle.getString("Repeats_forever"), Integer.valueOf(loader.repeatCount));
 		} else {
-			string = createMsg(bundle.getString("Repeats_value"), new Integer(loader.repeatCount));
+			string = createMsg(bundle.getString("Repeats_value"), Integer.valueOf(loader.repeatCount));
 		}
 		repeatCountLabel.setText(string);
 
 		if (imageData.palette.isDirect) {
 			string = bundle.getString("Palette_direct");
 		} else {
-			string = createMsg(bundle.getString("Palette_value"), new Integer(imageData.palette.getRGBs().length));
+			string = createMsg(bundle.getString("Palette_value"), Integer.valueOf(imageData.palette.getRGBs().length));
 		}
 		paletteLabel.setText(string);
 
 		string = createMsg(
 				bundle.getString("Pixel_data_value"),
 				new Object[] {
-						new Integer(imageData.bytesPerLine),
-						new Integer(imageData.scanlinePad),
+						Integer.valueOf(imageData.bytesPerLine),
+						Integer.valueOf(imageData.scanlinePad),
 						depthInfo(imageData.depth),
 						(imageData.alphaData != null && imageData.alphaData.length > 0) ?
 								bundle.getString("Scroll_for_alpha") : "" });
@@ -2312,17 +2312,17 @@ public class ImageAnalyzer {
 		Button radio = new Button(dialog, SWT.RADIO);
 		radio.setText(bundle.getString("Save_as_type_no_compress"));
 		radio.setSelection(true);
-		radio.setData(new Integer(SWT.IMAGE_BMP));
+		radio.setData(Integer.valueOf(SWT.IMAGE_BMP));
 		radio.addSelectionListener(radioSelected);
 
 		radio = new Button(dialog, SWT.RADIO);
 		radio.setText(bundle.getString("Save_as_type_rle_compress"));
-		radio.setData(new Integer(SWT.IMAGE_BMP_RLE));
+		radio.setData(Integer.valueOf(SWT.IMAGE_BMP_RLE));
 		radio.addSelectionListener(radioSelected);
 
 		radio = new Button(dialog, SWT.RADIO);
 		radio.setText(bundle.getString("Save_as_type_os2"));
-		radio.setData(new Integer(SWT.IMAGE_OS2_BMP));
+		radio.setData(Integer.valueOf(SWT.IMAGE_OS2_BMP));
 		radio.addSelectionListener(radioSelected);
 
 		label = new Label(dialog, SWT.SEPARATOR | SWT.HORIZONTAL);
@@ -2354,31 +2354,31 @@ public class ImageAnalyzer {
 	 * in the hex dump.
 	 */
 	static String depthInfo(int depth) {
-		Object[] args = {new Integer(depth), ""};
+		Object[] args = {Integer.valueOf(depth), ""};
 		switch (depth) {
 			case 1:
 				args[1] = createMsg(bundle.getString("Multi_pixels"),
-				                    new Object[] {new Integer(8), " [01234567]"});
+				                    new Object[] {Integer.valueOf(8), " [01234567]"});
 				break;
 			case 2:
 				args[1] = createMsg(bundle.getString("Multi_pixels"),
-				                    new Object[] {new Integer(4), "[00112233]"});
+				                    new Object[] {Integer.valueOf(4), "[00112233]"});
 				break;
 			case 4:
 				args[1] = createMsg(bundle.getString("Multi_pixels"),
-				                    new Object[] {new Integer(2), "[00001111]"});
+				                    new Object[] {Integer.valueOf(2), "[00001111]"});
 				break;
 			case 8:
 				args[1] = bundle.getString("One_byte");
 				break;
 			case 16:
-				args[1] = createMsg(bundle.getString("Multi_bytes"), new Integer(2));
+				args[1] = createMsg(bundle.getString("Multi_bytes"), Integer.valueOf(2));
 				break;
 			case 24:
-				args[1] = createMsg(bundle.getString("Multi_bytes"), new Integer(3));
+				args[1] = createMsg(bundle.getString("Multi_bytes"), Integer.valueOf(3));
 				break;
 			case 32:
-				args[1] = createMsg(bundle.getString("Multi_bytes"), new Integer(4));
+				args[1] = createMsg(bundle.getString("Multi_bytes"), Integer.valueOf(4));
 				break;
 			default:
 				args[1] = bundle.getString("Unsupported_lc");
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
index 6da18f3..55d3da8 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
@@ -259,7 +259,7 @@ public class JavaScanner {
 	 */
 	void initialize() {
 		fgKeys= new HashMap<>();
-		Integer k= new Integer(KEY);
+		Integer k= Integer.valueOf(KEY);
 		for (String word : fgKeywords)
 			fgKeys.put(word, k);
 	}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
index bc903fe..f115539 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
@@ -487,7 +487,7 @@ class FormLayoutTab extends Tab {
 				widthText.setText (oldItem.getText (WIDTH_COL));
 			}
 			try {
-				new Integer(heightText.getText()).intValue();
+				Integer.valueOf(heightText.getText()).intValue();
 			} catch(NumberFormatException e) {
 				heightText.setText (oldItem.getText(HEIGHT_COL));
 			}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
index 012700c..e37b8fe 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintExample.java
@@ -89,13 +89,13 @@ public class PaintExample {
 		new Tool(RoundedRectangle_tool, "RoundedRectangle", "tool", SWT.RADIO),
 		new Tool(Ellipse_tool, "Ellipse", "tool", SWT.RADIO),
 		new Tool(Text_tool, "Text", "tool", SWT.RADIO),
-		new Tool(None_fill, "None", "fill", SWT.RADIO, new Integer(ToolSettings.ftNone)),
-		new Tool(Outline_fill, "Outline", "fill", SWT.RADIO, new Integer(ToolSettings.ftOutline)),
-		new Tool(Solid_fill, "Solid", "fill", SWT.RADIO, new Integer(ToolSettings.ftSolid)),
-		new Tool(Solid_linestyle, "Solid", "linestyle", SWT.RADIO, new Integer(SWT.LINE_SOLID)),
-		new Tool(Dash_linestyle, "Dash", "linestyle", SWT.RADIO, new Integer(SWT.LINE_DASH)),
-		new Tool(Dot_linestyle, "Dot", "linestyle", SWT.RADIO, new Integer(SWT.LINE_DOT)),
-		new Tool(DashDot_linestyle, "DashDot", "linestyle", SWT.RADIO, new Integer(SWT.LINE_DASHDOT)),
+		new Tool(None_fill, "None", "fill", SWT.RADIO, Integer.valueOf(ToolSettings.ftNone)),
+		new Tool(Outline_fill, "Outline", "fill", SWT.RADIO, Integer.valueOf(ToolSettings.ftOutline)),
+		new Tool(Solid_fill, "Solid", "fill", SWT.RADIO, Integer.valueOf(ToolSettings.ftSolid)),
+		new Tool(Solid_linestyle, "Solid", "linestyle", SWT.RADIO, Integer.valueOf(SWT.LINE_SOLID)),
+		new Tool(Dash_linestyle, "Dash", "linestyle", SWT.RADIO, Integer.valueOf(SWT.LINE_DASH)),
+		new Tool(Dot_linestyle, "Dot", "linestyle", SWT.RADIO, Integer.valueOf(SWT.LINE_DOT)),
+		new Tool(DashDot_linestyle, "DashDot", "linestyle", SWT.RADIO, Integer.valueOf(SWT.LINE_DASHDOT)),
 		new Tool(Font_options, "Font", "options", SWT.PUSH)
 	};
 
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintSurface.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintSurface.java
index 3dfd5a6..188dfab 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintSurface.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/PaintSurface.java
@@ -506,7 +506,7 @@ public class PaintSurface {
 	 */
 	public void setStatusCoord(Point coord) {
 		statusCoordInfo = (coord != null) ? PaintExample.getResourceString("status.Coord.format", new Object[]
-			{ new Integer(coord.x), new Integer(coord.y)}) : "";
+			{ Integer.valueOf(coord.x), Integer.valueOf(coord.y)}) : "";
 		updateStatus();
 	}
 
@@ -518,7 +518,7 @@ public class PaintSurface {
 	 */
 	public void setStatusCoordRange(Point a, Point b) {
 		statusCoordInfo = PaintExample.getResourceString("status.CoordRange.format", new Object[]
-			{ new Integer(a.x), new Integer(a.y), new Integer(b.x), new Integer(b.y)});
+			{ Integer.valueOf(a.x), Integer.valueOf(a.y), Integer.valueOf(b.x), Integer.valueOf(b.y)});
 		updateStatus();
 	}
 
