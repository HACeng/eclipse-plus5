commit d300e2688460c9cb038b34738400e5e7784e0ea1
Author: Jacek Sieka <arnetheduck@gmail.com>
Date:   Sat Jan 31 09:54:27 2015 +0800

    Bug 458863 - Replace Vector with ArrayList where appropriate
    
    - examples & tools
    
    Change-Id: I861981fc3a497c1143adf83f358b1dc61864871f
    Signed-off-by: Jacek Sieka <arnetheduck@gmail.com>

0	6	bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java
2	2	bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTClass.java
4	3	bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java
1	1	bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java
6	5	bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java
1	1	bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java
11	10	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
6	5	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
6	5	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java
2	1	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
2	1	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GradientDialog.java
3	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java
10	9	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
5	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
16	17	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
3	3	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java
5	5	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
11	11	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java
5	5	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java
3	3	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java
6	6	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
5	4	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/SegmentedPaintSession.java
6	6	examples/org.eclipse.swt.opengl.examples/src/org/eclipse/swt/opengl/examples/ColorSelectionGroup.java
diff --git a/bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java b/bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java
index b3ea0e3..971a052 100644
--- a/bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java	
+++ b/bundles/org.eclipse.swt.tools/Icon Exe/org/eclipse/swt/tools/internal/IconExe.java	
@@ -11,7 +11,6 @@
 package org.eclipse.swt.tools.internal;
 
 import java.io.*;
-import java.util.Vector;
 
 /**
  * Customize the icon of a Windows exe
@@ -1112,11 +1111,6 @@ static class ImageLoader {
 	 * GIF application extension for "NETSCAPE 2.0 01")
 	 */
 	public int repeatCount;
-		
-	/*
-	 * the set of ImageLoader event listeners, created on demand
-	 */
-	Vector<?> imageLoaderListeners;
 
 /**
  * Construct a new empty ImageLoader.
diff --git a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTClass.java b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTClass.java
index f367471..d415a3c 100644
--- a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTClass.java	
+++ b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTClass.java	
@@ -100,7 +100,7 @@ public ASTClass(String sourcePath, MetaData metaData) {
 	}
 
 	FieldDeclaration[] fields = type.getFields();
-	ArrayList<ASTField> fid = new ArrayList<ASTField>();
+	List<ASTField> fid = new ArrayList<ASTField>();
 	for (int i = 0; i < fields.length; i++) {
 		FieldDeclaration field = fields[i];
 		List<VariableDeclarationFragment> fragments = field.fragments();
@@ -111,7 +111,7 @@ public ASTClass(String sourcePath, MetaData metaData) {
 	}
 	this.fields = fid.toArray(new ASTField[fid.size()]);
 	MethodDeclaration[] methods = type.getMethods();
-	ArrayList<ASTMethod> mid = new ArrayList<ASTMethod>();
+	List<ASTMethod> mid = new ArrayList<ASTMethod>();
 	for (int i = 0; i < methods.length; i++) {
 		if (methods[i].getReturnType2() == null) continue;
 		mid.add(new ASTMethod(this, source, methods[i]));
diff --git a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java
index 5f8fe56..e774720 100644
--- a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java	
+++ b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java	
@@ -11,11 +11,12 @@
 package org.eclipse.swt.tools.internal;
 
 import java.lang.reflect.Modifier;
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Set;
 import java.util.TreeMap;
-import java.util.ArrayList;
 
 public class EmbedMetaData extends JNIGenerator {
 	TreeMap<Integer, String> inserts;
@@ -36,7 +37,7 @@ public void generate(JNIClass clazz) {
 	String sourcePath = ((ASTClass)clazz).sourcePath;
 	String source = JNIGenerator.loadFile(sourcePath);
 	Set<Integer> set = inserts.keySet();
-	ArrayList<Integer> keys = new ArrayList<Integer>();
+	List<Integer> keys = new ArrayList<Integer>();
 	keys.addAll(set);
 	Collections.reverse(keys);
 	StringBuffer buffer = new StringBuffer(source);
@@ -83,7 +84,7 @@ public void generate(JNIMethod[] methods) {
 }
 
 public void generate(JNIMethod method) {
-	ArrayList<String> tags = new ArrayList<String>();
+	List<String> tags = new ArrayList<String>();
 	String data = ((AbstractItem)method).flatten();
 	if (data != null && data.length() != 0) {
 		tags.add("@method " + data);
diff --git a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java
index 14ecf35..335859c 100644
--- a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java	
+++ b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java	
@@ -199,7 +199,7 @@ static void sort(JNIClass[] classes) {
 
 static String[] split(String str, String separator) {
 	StringTokenizer tk = new StringTokenizer(str, separator);
-	ArrayList<String> result = new ArrayList<String>();
+	List<String> result = new ArrayList<String>();
 	while (tk.hasMoreTokens()) {
 		result.add(tk.nextToken());
 	}
diff --git a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java
index 7ff1031..0b2e032 100644
--- a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java	
+++ b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java	
@@ -13,9 +13,10 @@ package org.eclipse.swt.tools.internal;
 import java.io.*;
 import java.lang.reflect.*;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Enumeration;
+import java.util.List;
 import java.util.zip.*;
-import java.util.Arrays;
 
 import org.eclipse.swt.SWT;
 
@@ -273,7 +274,7 @@ String[] getClassNames(String mainClassName) {
 	if (classpath == null) classpath = System.getProperty("java.class.path");
 	String pkgPath = pkgName.replace('.', File.separatorChar);
 	String pkgZipPath = pkgName.replace('.', '/');
-	ArrayList<String> classes = new ArrayList<String>();	
+	List<String> classes = new ArrayList<String>();	
 	int start = 0;
 	int index = 0;
 	while (index < classpath.length()) {
@@ -352,7 +353,7 @@ JNIClass[] getASTClasses() {
 	if (mainClassName == null) return new JNIClass[0];
 	String root = classesDir != null ? classesDir : new File(outputDir).getParent() + "/";
 	String mainPath = new File(root + mainClassName.replace('.', '/') + ".java").getAbsolutePath();
-	ArrayList<JNIClass> classes = new ArrayList<JNIClass>();
+	List<JNIClass> classes = new ArrayList<JNIClass>();
 	String packageName = getPackageName(mainClassName);
 	File dir = new File(root + "/" + packageName.replace('.', '/'));
 	File[] files = dir.listFiles();
@@ -376,7 +377,7 @@ JNIClass[] getASTClasses() {
 
 public JNIClass[] getNativesClasses(JNIClass[] classes) {
 	if (mainClass == null) return new JNIClass[0];
-	ArrayList<JNIClass> result = new ArrayList<JNIClass>();
+	List<JNIClass> result = new ArrayList<JNIClass>();
 	for (int i = 0; i < classes.length; i++) {
 		JNIClass clazz = classes[i];
 		JNIMethod[] methods = clazz.getDeclaredMethods();
@@ -394,7 +395,7 @@ public JNIClass[] getNativesClasses(JNIClass[] classes) {
 
 public JNIClass[] getStructureClasses(JNIClass[] classes) {
 	if (mainClass == null) return new JNIClass[0];
-	ArrayList<JNIClass> result = new ArrayList<JNIClass>();
+	List<JNIClass> result = new ArrayList<JNIClass>();
 	outer:
 	for (int i = 0; i < classes.length; i++) {
 		JNIClass clazz = classes[i];
diff --git a/bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java b/bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java
index e422529..b98a324 100644
--- a/bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java	
+++ b/bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java	
@@ -103,7 +103,7 @@ public class DOMWriter {
 				NodeList children = node.getChildNodes();
 				if (children != null) {
 					int len = children.getLength();
-					ArrayList<Node> nodes = new ArrayList<Node>();
+					List<Node> nodes = new ArrayList<Node>();
 					for (int i = 0; i < len; i++) {
 						Node child = children.item(i);
 						if (child.getNodeType() == Node.ELEMENT_NODE) nodes.add(child);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
index e0904a8..1328789 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/BarChart.java
@@ -11,8 +11,9 @@
 package org.eclipse.swt.examples.accessibility;
 
 import java.text.MessageFormat;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.ResourceBundle;
-import java.util.Vector;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.accessibility.ACC;
@@ -43,7 +44,7 @@ import org.eclipse.swt.widgets.Display;
  */
 public class BarChart extends Canvas {
 	static ResourceBundle bundle = ResourceBundle.getBundle("examples_accessibility");
-	Vector<Object[]> data = new Vector<Object[]>();
+	List<Object[]> data = new ArrayList<Object[]>();
 	String title;
 	int color = SWT.COLOR_RED;
 	int selectedItem = -1;
@@ -95,7 +96,7 @@ public class BarChart extends Canvas {
 				// draw the x axis and item labels
 				gc.drawLine(leftX, bottomY, rect.x + rect.width - GAP, bottomY);
 				for (int i = 0; i < count; i++) {
-					Object [] dataItem = data.elementAt(i);
+					Object [] dataItem = data.get(i);
 					String itemLabel = (String)dataItem[0];
 					int x = leftX + AXIS_WIDTH + GAP + i * (unitWidth + GAP);
 					gc.drawString(itemLabel, x, bottomY + GAP);
@@ -103,7 +104,7 @@ public class BarChart extends Canvas {
 				// draw the bars
 				gc.setBackground(display.getSystemColor(color));
 				for (int i = 0; i < count; i++) {
-					Object [] dataItem = data.elementAt(i);
+					Object [] dataItem = data.get(i);
 					int itemValue = ((Integer)dataItem[1]).intValue();
 					int x = leftX + AXIS_WIDTH + GAP + i * (unitWidth + GAP);
 					gc.fillRectangle(x, bottomY - AXIS_WIDTH - itemValue * unitHeight, unitWidth, itemValue * unitHeight);
@@ -114,7 +115,7 @@ public class BarChart extends Canvas {
 						gc.drawFocus(rect.x, rect.y, rect.width, rect.height);
 					} else {
 						// draw the focus rectangle around the selected item
-						Object [] dataItem = data.elementAt(selectedItem);
+						Object [] dataItem = data.get(selectedItem);
 						int itemValue = ((Integer)dataItem[1]).intValue();
 						int x = leftX + AXIS_WIDTH + GAP + selectedItem * (unitWidth + GAP);
 						gc.drawFocus(x, bottomY - itemValue * unitHeight - AXIS_WIDTH, unitWidth, itemValue * unitHeight + AXIS_WIDTH + GAP + valueSize.y);
@@ -212,7 +213,7 @@ public class BarChart extends Canvas {
 				if (childID == ACC.CHILDID_SELF) {
 					e.result = title;
 				} else {
-					Object [] item = data.elementAt(childID);
+					Object [] item = data.get(childID);
 					e.result = formatter.format(item);
 				}
 			}
@@ -220,7 +221,7 @@ public class BarChart extends Canvas {
 			public void getDescription(AccessibleEvent e) {
 				int childID = e.childID;
 				if (childID != ACC.CHILDID_SELF) {
-					Object [] item = data.elementAt(childID);
+					Object [] item = data.get(childID);
 					String value = item[1].toString();
 					String colorName = bundle.getString("color" + color); //$NON_NLS$
 					MessageFormat formatter = new MessageFormat("");  //$NON_NLS$
@@ -306,7 +307,7 @@ public class BarChart extends Canvas {
 			public void getValue(AccessibleControlEvent e) {
 				int childID = e.childID;
 				if (childID != ACC.CHILDID_SELF) {
-					Object [] dataItem = data.elementAt(childID);
+					Object [] dataItem = data.get(childID);
 					e.result = ((Integer)dataItem[1]).toString();					
 				}
 			}
@@ -332,7 +333,7 @@ public class BarChart extends Canvas {
 		Point valueSize = gc.stringExtent (new Integer(valueMax).toString());
 		int itemWidth = 0;
 		for (int i = 0; i < count; i++) {
-			Object [] dataItem = data.elementAt(i);
+			Object [] dataItem = data.get(i);
 			String itemLabel = (String)dataItem[0];
 			itemWidth = Math.max(itemWidth, gc.stringExtent (itemLabel).x);
 		}
@@ -421,7 +422,7 @@ public class BarChart extends Canvas {
 		int bottomY = rect.y + rect.height - 2 * GAP - valueSize.y;
 		int unitWidth = (rect.width - 4 * GAP - valueSize.x - AXIS_WIDTH) / data.size() - GAP;
 		int unitHeight = (rect.height - 3 * GAP - AXIS_WIDTH - 2 * valueSize.y) / ((valueMax - valueMin) / valueIncrement);
-		Object [] dataItem = data.elementAt(index);
+		Object [] dataItem = data.get(index);
 		int itemValue = ((Integer)dataItem[1]).intValue();
 		int x = leftX + AXIS_WIDTH + GAP + index * (unitWidth + GAP);
 		return new Rectangle(x, bottomY - itemValue * unitHeight - AXIS_WIDTH, unitWidth, itemValue * unitHeight + AXIS_WIDTH + GAP + valueSize.y);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
index 6c7cb3c..dceb5f8 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java
@@ -18,10 +18,11 @@ import java.io.FileWriter;
 import java.io.IOException;
 import java.text.DateFormat;
 import java.text.MessageFormat;
+import java.util.ArrayList;
 import java.util.Date;
+import java.util.List;
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
-import java.util.Vector;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.custom.SashForm;
@@ -927,7 +928,7 @@ public class FileViewer {
 		 * If not already expanded, recursively expands the parents of the specified
 		 * directory until it is visible.
 		 */
-		Vector <File> path = new Vector<File>();
+		List <File> path = new ArrayList<File>();
 		// Build a stack of paths from the root of the tree
 		while (dir != null) {
 			path.add(dir);
@@ -937,7 +938,7 @@ public class FileViewer {
 		TreeItem[] items = tree.getItems();
 		TreeItem lastItem = null;
 		for (int i = path.size() - 1; i >= 0; --i) {
-			final File pathElement = path.elementAt(i);
+			final File pathElement = path.get(i);
 
 			// Search for a particular File in the array of tree items
 			// No guarantee that the items are sorted in any recognizable fashion, so we'll
@@ -1173,7 +1174,7 @@ public class FileViewer {
 		progressDialog.open();
 
 		// Copy each file
-		Vector /* of File */<File> processedFiles = new Vector<File>();
+		List<File> processedFiles = new ArrayList<File>();
 		for (int i = 0; (i < sourceNames.length) && (! progressDialog.isCancelled()); i++){
 			final File source = new File(sourceNames[i]);
 			final File dest = new File(targetFile, source.getName());
@@ -1294,7 +1295,7 @@ public class FileViewer {
 		 * -- PORTABILITY ISSUES HERE --
 		 */
 		if (System.getProperty ("os.name").indexOf ("Windows") != -1) {
-			Vector /* of File */<File> list = new Vector<File>();
+			List<File> list = new ArrayList<File>();
 			list.add(new File(DRIVE_A));
 			list.add(new File(DRIVE_B));
 			for (char i = 'c'; i <= 'z'; ++i) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java
index 3f93db0..1f4968e 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java
@@ -12,6 +12,7 @@
 package org.eclipse.swt.examples.graphics;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Color;
@@ -128,7 +129,7 @@ public class ColorMenu {
 	
 	/** Adds the colors items to the menu. */
 	private void addColorItems(Menu menu, MenuItemListener menuListener,
-			ArrayList<Resource> menuResources) {
+			List<Resource> menuResources) {
 		Display display = menu.getDisplay();
 		
 		if (menu.getItemCount() != 0) {
@@ -183,7 +184,7 @@ public class ColorMenu {
 	
 	/** Adds the pattern items to the menu. */
 	private void addPatternItems(Menu menu, MenuItemListener menuListener,
-			ArrayList<Resource> menuResources) {
+			List<Resource> menuResources) {
 		Display display = menu.getDisplay();
 		
 		if (menu.getItemCount() != 0) {
@@ -252,7 +253,7 @@ public class ColorMenu {
 	 * @param resources
 	 *            The list of resources of the menu
 	 */
-	private Image loadImage(Display display, String name, ArrayList<Resource> resources) {
+	private Image loadImage(Display display, String name, List<Resource> resources) {
 		Image image = GraphicsExample.loadImage(display, GraphicsExample.class, name);
 		if (image != null) resources.add(image);
 		return image;
@@ -268,7 +269,7 @@ public class ColorMenu {
 		Color customColor;
 		GraphicsBackground background;	// used to store information about the background
 		ColorListener colorListener;
-		ArrayList<Resource> resources;
+		List<Resource> resources;
 		
 		public MenuItemListener(Control parent){
 			this.parent = parent; 
@@ -285,7 +286,7 @@ public class ColorMenu {
 			this.colorListener = cl;
 		}
 		
-		public ArrayList<Resource> getMenuResources() {
+		public List<Resource> getMenuResources() {
 			return resources;
 		}
 
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
index de5c32a..be628cb 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/CustomFontTab.java
@@ -12,6 +12,7 @@
 package org.eclipse.swt.examples.graphics;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Device;
@@ -44,7 +45,7 @@ public class CustomFontTab extends GraphicsTab {
 	Combo fontFaceCb, fontStyleCb;
 	Spinner fontPointSpinner;
 	Button colorButton;
-	ArrayList<String> fontNames;
+	List<String> fontNames;
 	int [] styleValues;
 	String [] fontStyles;
 	Menu menu;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GradientDialog.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GradientDialog.java
index 6babecd..290d5c0 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GradientDialog.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GradientDialog.java
@@ -12,6 +12,7 @@
 package org.eclipse.swt.examples.graphics;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Color;
@@ -51,7 +52,7 @@ public class GradientDialog extends Dialog {
 	RGB rgb1, rgb2;			// first and second color used in gradient
 	int returnVal; 			// value to be returned by open(), set to SWT.OK 
 							// if the ok button has been pressed		
-	ArrayList<Image> resources;
+	List<Image> resources;
 			
 	public GradientDialog(Shell parent) {		
 		this (parent, SWT.PRIMARY_MODAL);
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java
index dd2b44a..a9364fa 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java
@@ -15,6 +15,7 @@ import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Comparator;
+import java.util.List;
 import java.util.HashSet;
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
@@ -70,8 +71,8 @@ public class GraphicsExample {
 	ToolItem backItem, dbItem;		// background, double buffer items
 	Menu backMenu;					// background menu item
 	
-	ArrayList<Image> resources;			// stores resources that will be disposed
-	ArrayList<GraphicsTab> tabs_in_order;		// stores GraphicsTabs in the order that they appear in the tree
+	List<Image> resources;			// stores resources that will be disposed
+	List<GraphicsTab> tabs_in_order;		// stores GraphicsTabs in the order that they appear in the tree
 	boolean animate = true;			// whether animation should happen
 
 	static boolean advanceGraphics, advanceGraphicsInit;
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
index 980c01f..0b500bd 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/MazeTab.java
@@ -12,6 +12,7 @@
 package org.eclipse.swt.examples.graphics;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.Device;
@@ -30,7 +31,7 @@ public class MazeTab extends AnimatedGraphicsTab {
 
 	int nextIndex, nextIndex2, nextIndex3;
 	int xcoord, ycoord, xcoord2, ycoord2, xcoord3, ycoord3;
-	ArrayList<Integer> nextCoord, nextCoord2, nextCoord3;
+	List<Integer> nextCoord, nextCoord2, nextCoord3;
 	boolean isDone, isDone2, isDone3;
 	Image image;
 
@@ -238,8 +239,8 @@ public void paint(GC gc, int width, int height) {
  * @param stepsize
  *            The number of pixels that separate each coordinate
  */
-private ArrayList<Integer> moveLeft(int x1, int y1, int x2, int y2, int stepsize) {
-	ArrayList<Integer> coords = new ArrayList<Integer>();
+private List<Integer> moveLeft(int x1, int y1, int x2, int y2, int stepsize) {
+	List<Integer> coords = new ArrayList<Integer>();
 	coords.add(new Integer(x1));
 	coords.add(new Integer(y1));
 	while(x1 - stepsize > x2) {
@@ -267,8 +268,8 @@ private ArrayList<Integer> moveLeft(int x1, int y1, int x2, int y2, int stepsize
  * @param stepsize
  *            The number of pixels that separate each coordinate
  */
-private ArrayList<Integer> moveRight(int x1, int y1, int x2, int y2, int stepsize) {
-	ArrayList<Integer> coords = new ArrayList<Integer>();
+private List<Integer> moveRight(int x1, int y1, int x2, int y2, int stepsize) {
+	List<Integer> coords = new ArrayList<Integer>();
 	coords.add(new Integer(x1));
 	coords.add(new Integer(y1));
 	while(x1 + stepsize < x2) {
@@ -296,8 +297,8 @@ private ArrayList<Integer> moveRight(int x1, int y1, int x2, int y2, int stepsiz
  * @param stepsize
  *            The number of pixels that separate each coordinate
  */
-private ArrayList<Integer> moveUp(int x1, int y1, int x2, int y2, int stepsize) {
-	ArrayList<Integer> coords = new ArrayList<Integer>();
+private List<Integer> moveUp(int x1, int y1, int x2, int y2, int stepsize) {
+	List<Integer> coords = new ArrayList<Integer>();
 	coords.add(new Integer(x1));
 	coords.add(new Integer(y1));
 	while(y1 - stepsize > y2) {
@@ -325,8 +326,8 @@ private ArrayList<Integer> moveUp(int x1, int y1, int x2, int y2, int stepsize)
  * @param stepsize
  *            The number of pixels that separate each coordinate
  */
-private ArrayList<Integer> moveDown(int x1, int y1, int x2, int y2, int stepsize) {
-	ArrayList<Integer> coords = new ArrayList<Integer>();
+private List<Integer> moveDown(int x1, int y1, int x2, int y2, int stepsize) {
+	List<Integer> coords = new ArrayList<Integer>();
 	coords.add(new Integer(x1));
 	coords.add(new Integer(y1));
 	while(y1 + stepsize < y2) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
index a630c71..ee5f7fd 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java
@@ -14,8 +14,9 @@ package org.eclipse.swt.examples.imageanalyzer;
 import java.io.InputStream;
 import java.net.URL;
 import java.text.MessageFormat;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.ResourceBundle;
-import java.util.Vector;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.SWTError;
@@ -113,7 +114,7 @@ public class ImageAnalyzer {
 	int imageDataIndex; // the index of the current image data
 	ImageData imageData; // the currently-displayed image data
 	Image image; // the currently-displayed image
-	Vector<ImageLoaderEvent> incrementalEvents; // incremental image events
+	List<ImageLoaderEvent> incrementalEvents; // incremental image events
 	long loadTime = 0; // the time it took to load the current image
 	
 	static final int INDEX_DIGITS = 4;
@@ -1120,7 +1121,7 @@ public class ImageAnalyzer {
 	 * as they are loaded.
 	 */
 	void incrementalThreadStart() {
-		incrementalEvents = new Vector<ImageLoaderEvent>();
+		incrementalEvents = new ArrayList<ImageLoaderEvent>();
 		incrementalThread = new Thread("Incremental") {
 			@Override
 			public void run() {
@@ -1165,7 +1166,7 @@ public class ImageAnalyzer {
 		// Synchronize so that we do not try to add while
 		// the incremental drawing thread is removing.
 		synchronized (this) {
-			incrementalEvents.addElement(event);
+			incrementalEvents.add(event);
 		}
 	}
 	
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
index a3c6407..1ff30a6 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/javaviewer/JavaLineStyler.java
@@ -13,8 +13,9 @@ package org.eclipse.swt.examples.javaviewer;
 
 import java.io.IOException;
 import java.io.StringReader;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Hashtable;
-import java.util.Vector;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.custom.LineStyleEvent;
@@ -29,7 +30,7 @@ class JavaLineStyler implements LineStyleListener {
 	JavaScanner scanner = new JavaScanner();
 	int[] tokenColors;
 	Color[] colors;
-	Vector<int[]> blockComments = new Vector<int[]>();
+	List<int[]> blockComments = new ArrayList<int[]>();
 
 	public static final int EOF= -1;
 	public static final int EOL= 10;
@@ -58,7 +59,7 @@ Color getColor(int type) {
 
 boolean inBlockComment(int start, int end) {
 	for (int i=0; i<blockComments.size(); i++) {
-		int[] offsets = blockComments.elementAt(i);
+		int[] offsets = blockComments.get(i);
 		// start of comment in the line
 		if ((offsets[0] >= start) && (offsets[0] <= end)) return true;
 		// end of comment in the line
@@ -100,14 +101,13 @@ void disposeColors() {
  */
 @Override
 public void lineGetStyle(LineStyleEvent event) {
-	Vector<StyleRange> styles = new Vector<StyleRange>();
+	List<StyleRange> styles = new ArrayList<StyleRange>();
 	int token;
 	StyleRange lastStyle;
 	// If the line is part of a block comment, create one style for the entire line.
 	if (inBlockComment(event.lineOffset, event.lineOffset + event.lineText.length())) {
-		styles.addElement(new StyleRange(event.lineOffset, event.lineText.length(), getColor(COMMENT), null));
-		event.styles = new StyleRange[styles.size()];
-		styles.copyInto(event.styles);
+		styles.add(new StyleRange(event.lineOffset, event.lineText.length(), getColor(COMMENT), null));
+		event.styles = styles.toArray(new StyleRange[styles.size()]);
 		return;
 	}
 	Color defaultFgColor = ((Control)event.widget).getForeground();
@@ -127,20 +127,20 @@ public void lineGetStyle(LineStyleEvent event) {
 					style.fontStyle = SWT.BOLD;
 				}
 				if (styles.isEmpty()) {
-					styles.addElement(style);
+					styles.add(style);
 				} else {
 					// Merge similar styles.  Doing so will improve performance.
-					lastStyle = styles.lastElement();
+					lastStyle = styles.get(styles.size()-1);
 					if (lastStyle.similarTo(style) && (lastStyle.start + lastStyle.length == style.start)) {
 						lastStyle.length += style.length;
 					} else {
-						styles.addElement(style); 
+						styles.add(style); 
 					}
 				} 
 			} 
-		} else if ((!styles.isEmpty()) && ((lastStyle=styles.lastElement()).fontStyle == SWT.BOLD)) {
+		} else if ((!styles.isEmpty()) && ((lastStyle=styles.get(styles.size()-1)).fontStyle == SWT.BOLD)) {
 			int start = scanner.getStartOffset() + event.lineOffset;
-			lastStyle = styles.lastElement();
+			lastStyle = styles.get(styles.size() - 1);
 			// A font style of SWT.BOLD implies that the last style
 			// represents a java keyword.
 			if (lastStyle.start + lastStyle.length == start) {
@@ -152,11 +152,10 @@ public void lineGetStyle(LineStyleEvent event) {
 		} 
 		token= scanner.nextToken();
 	}
-	event.styles = new StyleRange[styles.size()];
-	styles.copyInto(event.styles);
+	event.styles = styles.toArray(new StyleRange[styles.size()]);
 }
 public void parseBlockComments(String text) {
-	blockComments = new Vector<int[]>();
+	blockComments = new ArrayList<int[]>();
 	StringReader buffer = new StringReader(text);
 	int ch;
 	boolean blkComment = false;
@@ -170,7 +169,7 @@ public void parseBlockComments(String text) {
 			case -1 : {
 				if (blkComment) {
 					offsets[1] = cnt;
-					blockComments.addElement(offsets);
+					blockComments.add(offsets);
 				}
 				done = true;
 				break;
@@ -195,7 +194,7 @@ public void parseBlockComments(String text) {
 					if (ch == '/') {
 						blkComment = false;	
 						offsets[1] = cnt;
-						blockComments.addElement(offsets);
+						blockComments.add(offsets);
 					}
 				}
 				cnt++;	
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java
index 3271e12..af98841 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java
@@ -66,7 +66,7 @@ class FillLayoutTab extends Tab {
 				createComboEditor (combo, comboEditor);
 				
 				nameText = new Text(table, SWT.SINGLE);
-				nameText.setText(data.elementAt(index)[NAME_COL]);
+				nameText.setText(data.get(index)[NAME_COL]);
 				createTextEditor(nameText, nameEditor, NAME_COL);
 			}
 		});
@@ -202,9 +202,9 @@ class FillLayoutTab extends Tab {
 				nameText.setText (oldItem.getText (NAME_COL));
 			}
 			String [] insert = new String [] {nameText.getText (), combo.getText ()};
-			data.setElementAt (insert, row);
+			data.set (row, insert);
 			for (int i = 0 ; i < TOTAL_COLS; i++) {
-				oldItem.setText (i, data.elementAt (row) [i]);
+				oldItem.setText (i, data.get (row) [i]);
 			}
 			if (!tab) disposeEditors ();
 		}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
index 8009348..92ab40b 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java
@@ -135,15 +135,15 @@ class FormLayoutTab extends Tab {
 				createComboEditor (combo, comboEditor);
 				
 				nameText = new Text (table, SWT.SINGLE);
-				nameText.setText (data.elementAt(index)[NAME_COL]);
+				nameText.setText (data.get(index)[NAME_COL]);
 				createTextEditor(nameText, nameEditor, NAME_COL);
 				
 				widthText = new Text (table, SWT.SINGLE);
-				widthText.setText (data.elementAt (index) [WIDTH_COL]);
+				widthText.setText (data.get (index) [WIDTH_COL]);
 				createTextEditor (widthText, widthEditor, WIDTH_COL);
 				
 				heightText = new Text (table, SWT.SINGLE);
-				heightText.setText (data.elementAt (index) [HEIGHT_COL]);
+				heightText.setText (data.get (index) [HEIGHT_COL]);
 				createTextEditor (heightText, heightEditor, HEIGHT_COL);
 				
 				leftAttach = new Button (table, SWT.PUSH);
@@ -474,9 +474,9 @@ class FormLayoutTab extends Tab {
 				heightText.setText (oldItem.getText(HEIGHT_COL));
 			}
 			String[] insert = new String [] {nameText.getText(), combo.getText (), widthText.getText (), heightText.getText ()};
-			data.setElementAt (insert, row);
+			data.set (row, insert);
 			for (int i = 0 ; i < MODIFY_COLS; i++) {
-				oldItem.setText (i, data.elementAt (row) [i]);
+				oldItem.setText (i, data.get (row) [i]);
 			}
 			if (!tab) disposeEditors ();
 		}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java
index 9182960..1ec71c5 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java
@@ -132,18 +132,18 @@ class GridLayoutTab extends Tab {
 				table.showSelection ();
 				
 				nameText = new Text (table, SWT.SINGLE);
-				nameText.setText (data.elementAt (index) [NAME_COL]);
+				nameText.setText (data.get (index) [NAME_COL]);
 				createTextEditor (nameText, nameEditor, NAME_COL);
 				
 				combo = new CCombo (table, SWT.READ_ONLY);
 				createComboEditor (combo, comboEditor);
 				
 				widthText = new Text (table, SWT.SINGLE);
-				widthText.setText (data.elementAt (index) [WIDTH_COL]);
+				widthText.setText (data.get (index) [WIDTH_COL]);
 				createTextEditor (widthText, widthEditor, WIDTH_COL);
 				
 				heightText = new Text (table, SWT.SINGLE);
-				heightText.setText (data.elementAt (index) [HEIGHT_COL]);
+				heightText.setText (data.get (index) [HEIGHT_COL]);
 				createTextEditor (heightText, heightEditor, HEIGHT_COL);
 				
 				String [] alignValues = new String [] {"BEGINNING","CENTER","END","FILL"};
@@ -185,27 +185,27 @@ class GridLayoutTab extends Tab {
 				vGrab.addTraverseListener (traverseListener);
                 
 				hSpan = new Text (table, SWT.SINGLE);
-				hSpan.setText (data.elementAt (index) [HSPAN_COL]);
+				hSpan.setText (data.get (index) [HSPAN_COL]);
 				createTextEditor (hSpan, hSpanEditor, HSPAN_COL);
 				
 				vSpan = new Text (table, SWT.SINGLE);
-				vSpan.setText (data.elementAt (index) [VSPAN_COL]);
+				vSpan.setText (data.get (index) [VSPAN_COL]);
 				createTextEditor (vSpan, vSpanEditor, VSPAN_COL);
 				
 				hIndent = new Text (table, SWT.SINGLE);
-				hIndent.setText (data.elementAt (index) [HINDENT_COL]);
+				hIndent.setText (data.get (index) [HINDENT_COL]);
 				createTextEditor (hIndent, hIndentEditor, HINDENT_COL);
 				
 				vIndent = new Text (table, SWT.SINGLE);
-				vIndent.setText (data.elementAt (index) [VINDENT_COL]);
+				vIndent.setText (data.get (index) [VINDENT_COL]);
 				createTextEditor (vIndent, vIndentEditor, VINDENT_COL);
 				
 				minWidthText = new Text (table, SWT.SINGLE);
-				minWidthText.setText (data.elementAt (index) [MINWIDTH_COL]);
+				minWidthText.setText (data.get (index) [MINWIDTH_COL]);
 				createTextEditor (minWidthText, minWidthEditor, MINWIDTH_COL);
 				
 				minHeightText = new Text (table, SWT.SINGLE);
-				minHeightText.setText (data.elementAt (index) [MINHEIGHT_COL]);
+				minHeightText.setText (data.get (index) [MINHEIGHT_COL]);
 				createTextEditor (minHeightText, minHeightEditor, MINHEIGHT_COL);
 
 				exclude = new CCombo (table, SWT.NONE);
@@ -592,9 +592,9 @@ class GridLayoutTab extends Tab {
 				hSpan.getText (), vSpan.getText (), hIndent.getText (), vIndent.getText (), 
 				minWidthText.getText (), minHeightText.getText (), exclude.getText ()
 			};
-			data.setElementAt (insert, row);
+			data.set (row, insert);
 			for (int i = 0; i < TOTAL_COLS; i++) {
-				oldItem.setText (i, data.elementAt (row) [i]);
+				oldItem.setText (i, data.get (row) [i]);
 			}
 			if (!tab) disposeEditors ();
 		}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java
index 95ea0e0..342d3de 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java
@@ -78,15 +78,15 @@ class RowLayoutTab extends Tab {
 				createComboEditor (combo, comboEditor);
 				
 				nameText = new Text(table, SWT.SINGLE);
-				nameText.setText(data.elementAt(index)[NAME_COL]);
+				nameText.setText(data.get(index)[NAME_COL]);
 				createTextEditor(nameText, nameEditor, NAME_COL);
 				
 				widthText = new Text(table, SWT.SINGLE);
-				widthText.setText(data.elementAt(index)[WIDTH_COL]);
+				widthText.setText(data.get(index)[WIDTH_COL]);
 				createTextEditor(widthText, widthEditor, WIDTH_COL);
 				
 				heightText = new Text(table, SWT.SINGLE);
-				heightText.setText (data.elementAt (index) [HEIGHT_COL]);
+				heightText.setText (data.get (index) [HEIGHT_COL]);
 				createTextEditor (heightText, heightEditor, HEIGHT_COL);
                 
 				String [] boolValues = new String [] {"false", "true"};
@@ -372,9 +372,9 @@ class RowLayoutTab extends Tab {
 			}
 			String [] insert = new String [] {
 				nameText.getText(), combo.getText (), widthText.getText (), heightText.getText (), exclude.getText ()};
-			data.setElementAt (insert, row);
+			data.set (row, insert);
 			for (int i = 0 ; i < TOTAL_COLS; i++) {
-				oldItem.setText (i, data.elementAt (row) [i]);
+				oldItem.setText (i, data.get (row) [i]);
 			}
 			if (!tab) disposeEditors ();
 		}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java
index c2f0486..622290a 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java
@@ -69,7 +69,7 @@ class StackLayoutTab extends Tab {
 				createComboEditor(combo, comboEditor);
 				
 				nameText = new Text(table, SWT.SINGLE);
-				nameText.setText(data.elementAt(index)[NAME_COL]);
+				nameText.setText(data.get(index)[NAME_COL]);
 				createTextEditor(nameText, nameEditor, NAME_COL);
 			}
 		});		
@@ -221,9 +221,9 @@ class StackLayoutTab extends Tab {
 				nameText.setText (oldItem.getText (NAME_COL));
 			}
 			String [] insert = new String [] {nameText.getText (), combo.getText ()};
-			data.setElementAt (insert, row);
+			data.set (row, insert);
 			for (int i = 0 ; i < TOTAL_COLS; i++) {
-				oldItem.setText (i, data.elementAt (row) [i]);
+				oldItem.setText (i, data.get (row) [i]);
 			}
 			if (!tab) disposeEditors ();
 		}
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
index 9678e61..433a1bd 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java
@@ -11,7 +11,8 @@
 package org.eclipse.swt.examples.layoutexample;
 
  
-import java.util.Vector;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.custom.CCombo;
@@ -40,7 +41,6 @@ import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Group;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Link;
-import org.eclipse.swt.widgets.List;
 import org.eclipse.swt.widgets.Menu;
 import org.eclipse.swt.widgets.MenuItem;
 import org.eclipse.swt.widgets.ProgressBar;
@@ -96,7 +96,7 @@ abstract class Tab {
 			"Group", "Label", "Link", "List", "ProgressBar", "Scale", "Slider", "StyledText",
 			"Table", "Text", "ToolBar", "Tree"};
 	TableItem newItem, lastSelected;
-	Vector<String[]> data = new Vector<String[]> ();
+	List<String[]> data = new ArrayList<String[]> ();
 	/* Controlling instance */
 	final LayoutExample instance;
 
@@ -163,7 +163,7 @@ abstract class Tab {
 									if (insert != null) {
 										TableItem item = new TableItem (table, SWT.NONE);
 										item.setText (insert);
-										data.addElement (insert);
+										data.add (insert);
 									}
 									resetEditors ();
 								}
@@ -188,7 +188,7 @@ abstract class Tab {
 					if (insert != null) {
 						TableItem item = new TableItem (table, 0);
 						item.setText (insert);
-						data.addElement (insert);
+						data.add (insert);
 					}
 					resetEditors ();
 				}
@@ -721,7 +721,7 @@ abstract class Tab {
 				link.setText (controlName);
 				children [i] = link;
 			} else if (control.equals ("List")) {
-				List list = new List (layoutComposite, SWT.BORDER);
+				org.eclipse.swt.widgets.List list = new org.eclipse.swt.widgets.List (layoutComposite, SWT.BORDER);
 				list.setItems (itemValues);
 				children [i] = list;
 			} else if (control.equals ("ProgressBar")) {
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/SegmentedPaintSession.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/SegmentedPaintSession.java
index 90811d1..d7b7197 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/SegmentedPaintSession.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/paint/SegmentedPaintSession.java
@@ -11,7 +11,8 @@
 package org.eclipse.swt.examples.paint;
 
 
-import java.util.Vector;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.swt.events.MouseEvent;
 import org.eclipse.swt.graphics.Point;
@@ -24,7 +25,7 @@ public abstract class SegmentedPaintSession extends BasicPaintSession {
 	/**
 	 * The set of control points making up the segmented selection
 	 */
-	private Vector<Point> controlPoints = new Vector<Point>();
+	private List<Point> controlPoints = new ArrayList<Point>();
 
 	/**
 	 * The previous figure (so that we can abort with right-button)
@@ -96,7 +97,7 @@ public abstract class SegmentedPaintSession extends BasicPaintSession {
 		previousFigure = currentFigure;
 
 		if (controlPoints.size() > 0) {
-			final Point lastPoint = controlPoints.elementAt(controlPoints.size() - 1);
+			final Point lastPoint = controlPoints.get(controlPoints.size() - 1);
 			if (lastPoint.x == event.x || lastPoint.y == event.y) return; // spurious event
 		}
 		controlPoints.add(new Point(event.x, event.y));
@@ -144,7 +145,7 @@ public abstract class SegmentedPaintSession extends BasicPaintSession {
 			ps.setStatusCoord(ps.getCurrentPosition());
 			return; // spurious event
 		}
-		ps.setStatusCoordRange(controlPoints.elementAt(controlPoints.size() - 1),
+		ps.setStatusCoordRange(controlPoints.get(controlPoints.size() - 1),
 			ps.getCurrentPosition());
 		ps.clearRubberbandSelection();
 		Point[] points = controlPoints.toArray(new Point[controlPoints.size() + 1]);
diff --git a/examples/org.eclipse.swt.opengl.examples/src/org/eclipse/swt/opengl/examples/ColorSelectionGroup.java b/examples/org.eclipse.swt.opengl.examples/src/org/eclipse/swt/opengl/examples/ColorSelectionGroup.java
index c5dbb53..fa112a8 100644
--- a/examples/org.eclipse.swt.opengl.examples/src/org/eclipse/swt/opengl/examples/ColorSelectionGroup.java
+++ b/examples/org.eclipse.swt.opengl.examples/src/org/eclipse/swt/opengl/examples/ColorSelectionGroup.java
@@ -11,7 +11,8 @@
 package org.eclipse.swt.opengl.examples;
 
 
-import java.util.Vector;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.eclipse.opengl.*;
 import org.eclipse.swt.*;
@@ -25,7 +26,7 @@ class ColorSelectionGroup implements Listener {
 	private Label label;
 	private Image image;
 	private Button button;
-	private Vector listeners = new Vector();
+	private List<IColorSelectionListener> listeners = new ArrayList<IColorSelectionListener>();
 
 	/**
 	 * Constructor.
@@ -73,7 +74,7 @@ class ColorSelectionGroup implements Listener {
 	 * @param listener
 	 */
 	void addColorSelectionListener(IColorSelectionListener listener) {
-		listeners.addElement(listener);
+		listeners.add(listener);
 	}
 	
 	/**
@@ -125,8 +126,7 @@ class ColorSelectionGroup implements Listener {
 	 */
 	void notifyListeners(RGB rgb) {
 		IColorSelectionListener[] listenersArr =
-			new IColorSelectionListener[listeners.size()];
-		listeners.copyInto(listenersArr);
+			listeners.toArray(new IColorSelectionListener[listeners.size()]);
 		for (int i = 0; i < listenersArr.length; i++) {
 			listenersArr [i].handleColorSelection(rgb);
 		}
@@ -140,7 +140,7 @@ class ColorSelectionGroup implements Listener {
 	 * @param listener
 	 */
 	void removeColorSelectionListener(IColorSelectionListener listener) {
-		listeners.removeElement(listener);
+		listeners.remove(listener);
 	}
 
 	/**
