commit c066068b7af86eead3d8038f9c5eff5eec4c55a7
Author: Alexander Kurtakov <akurtako@redhat.com>
Date:   Thu Jun 22 19:20:21 2017 +0300

    Bug 518542: Remove XULRunner related code from SWT source repository
    
    Remove Mozilla from Browser tab in ControlExample.
    
    Change-Id: If7f633ee0fa341ac3e25ead7e4d87f524247e695
    Signed-off-by: Alexander Kurtakov <akurtako@redhat.com>

4	10	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java
index 19f8477..2f90c64 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corporation and others.
+ * Copyright (c) 2000, 2017 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -45,7 +45,7 @@ class BrowserTab extends Tab {
 	Group browserGroup;
 
 	/* Style widgets added to the "Style" group */
-	Button mozillaButton, webKitButton;
+	Button webKitButton;
 
 	String errorMessage, lastText, lastUrl;
 
@@ -89,7 +89,6 @@ class BrowserTab extends Tab {
 		/* Compute the widget style */
 		int style = getDefaultStyle();
 		if (borderButton.getSelection ()) style |= SWT.BORDER;
-		if (mozillaButton.getSelection ()) style |= SWT.MOZILLA;
 		if (webKitButton.getSelection ()) style |= SWT.WEBKIT;
 
 		/* Create the example widgets */
@@ -97,13 +96,13 @@ class BrowserTab extends Tab {
 			browser = new Browser (browserGroup, style);
 		} catch (SWTError e) { // Probably missing browser
 			try {
-				browser = new Browser (browserGroup, style & ~(SWT.MOZILLA | SWT.WEBKIT));
+				browser = new Browser (browserGroup, style & ~(SWT.WEBKIT));
 			} catch (SWTError e2) { // Unsupported platform
 				errorMessage = e.getMessage();
 				return;
 			}
 			MessageBox dialog = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK);
-			String resourceString = (style & SWT.MOZILLA) != 0 ? "MozillaNotFound" : "WebKitNotFound";
+			String resourceString = "WebKitNotFound";
 			dialog.setMessage(ControlExample.getResourceString(resourceString, e.getMessage()));
 			dialog.open();
 		}
@@ -167,12 +166,8 @@ class BrowserTab extends Tab {
 		super.createStyleGroup ();
 
 		/* Create the extra widgets */
-		mozillaButton = new Button (styleGroup, SWT.CHECK);
-		mozillaButton.setText ("SWT.MOZILLA");
-		mozillaButton.addListener(SWT.Selection, event -> webKitButton.setSelection(false));
 		webKitButton = new Button (styleGroup, SWT.CHECK);
 		webKitButton.setText ("SWT.WEBKIT");
-		webKitButton.addListener(SWT.Selection, event -> mozillaButton.setSelection(false));
 		borderButton = new Button (styleGroup, SWT.CHECK);
 		borderButton.setText ("SWT.BORDER");
 	}
@@ -357,7 +352,6 @@ class BrowserTab extends Tab {
 	@Override
 	void setExampleWidgetState () {
 		super.setExampleWidgetState ();
-		mozillaButton.setSelection (browser == null ? false : (browser.getStyle () & SWT.MOZILLA) != 0);
 		webKitButton.setSelection (browser == null ? false : (browser.getStyle () & SWT.WEBKIT) != 0);
 		borderButton.setSelection (browser == null ? false : (browser.getStyle () & SWT.BORDER) != 0);
 	}
commit 16ccb324f949ee915ca80a80cba992d5d1dc7eb0
Author: Alexander Kurtakov <akurtako@redhat.com>
Date:   Mon Jun 26 12:16:35 2017 +0300

    Bug 518542: Remove XULRunner related code from SWT source repository
    
    Changed Snippet260 to use Webkit as it's the only cross platform browser
    backend supported now.
    Make TextEditor example to not specify browser type at all.
    
    Change-Id: I95c777763b386f57d16141f97194ee8c3ffa10b3
    Signed-off-by: Alexander Kurtakov <akurtako@redhat.com>

2	2	examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
7	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet260.java
diff --git a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
index e058431..40346b6 100644
--- a/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
+++ b/examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java
@@ -1,5 +1,5 @@
 /*****************************************************************************
- * Copyright (c) 2000, 2016 IBM Corporation and others.
+ * Copyright (c) 2000, 2017 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -1046,7 +1046,7 @@ public class TextEditor {
 					Shell dialog = new Shell(shell);
 					dialog.setLayout(new FillLayout());
 					dialog.setText(getResourceString("Browser")); //$NON-NLS-1$
-					Browser browser = new Browser(dialog, SWT.MOZILLA);
+					Browser browser = new Browser(dialog, SWT.NONE);
 					browser.setUrl(link);
 					dialog.open();
 				}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet260.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet260.java
index 5c3e858..cf40efd 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet260.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet260.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2011 IBM Corporation and others.
+ * Copyright (c) 2007, 2017 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -11,10 +11,10 @@
 package org.eclipse.swt.snippets;
 
 /*
- * Mozilla in a Browser
+ * WebKit in a Browser
  *
  * The requirements for using Mozilla-based Browsers are described
- * at http://www.eclipse.org/swt/faq.php#howusemozilla
+ * https://www.eclipse.org/swt/faq.php#howusewebkit
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
@@ -22,9 +22,9 @@ package org.eclipse.swt.snippets;
  * @since 3.3
  */
 import org.eclipse.swt.*;
-import org.eclipse.swt.widgets.*;
 import org.eclipse.swt.browser.*;
 import org.eclipse.swt.layout.*;
+import org.eclipse.swt.widgets.*;
 
 public class Snippet260 {
 
@@ -32,17 +32,17 @@ public class Snippet260 {
 		Display display = new Display();
 		Shell shell = new Shell(display);
 		shell.setLayout(new FillLayout());
-		shell.setText("Mozilla");
+		shell.setText("WebKit");
 		final Browser browser;
 		try {
-			browser = new Browser(shell, SWT.MOZILLA);
+			browser = new Browser(shell, SWT.WEBKIT);
 		} catch (SWTError e) {
 			System.out.println("Could not instantiate Browser: " + e.getMessage());
 			display.dispose();
 			return;
 		}
 		shell.open();
-		browser.setUrl("http://mozilla.org");
+		browser.setUrl("https://webkit.org/");
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch()) display.sleep();
 		}
commit 32c670eab330a7b35bc6f5a678c799c6fc849ec5
Author: Alexander Kurtakov <akurtako@redhat.com>
Date:   Tue Jun 27 14:17:47 2017 +0300

    Bug 518542: Remove XULRunner related code from SWT source repository
    
    Remove mozilla generation from swt.tools so it no longer fails with NPE
    when Mozilla sources are removed.
    
    Change-Id: Idc704da81862662b85cced93a5c1319d0f236a9b
    Signed-off-by: Alexander Kurtakov <akurtako@redhat.com>

0	1	bundles/org.eclipse.swt.tools/.classpath
1	3	bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/org.eclipse.swt.internal.properties
1	4	bundles/org.eclipse.swt.tools/JavadocBasher/org/eclipse/swt/tools/internal/JavadocBasher.java
0	691	bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java
1	2	bundles/org.eclipse.swt.tools/build.properties
diff --git a/bundles/org.eclipse.swt.tools/.classpath b/bundles/org.eclipse.swt.tools/.classpath
index 69e85c4..d54b36d 100644
--- a/bundles/org.eclipse.swt.tools/.classpath
+++ b/bundles/org.eclipse.swt.tools/.classpath
@@ -5,7 +5,6 @@
 	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="src" path="JNI Generation"/>
 	<classpathentry kind="src" path="Mac Generation"/>
-	<classpathentry kind="src" path="Mozilla Generation"/>
 	<classpathentry kind="src" path="NativeStats"/>
 	<classpathentry kind="src" path="Icon Exe"/>
 	<classpathentry kind="src" path="JavadocBasher"/>
diff --git a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/org.eclipse.swt.internal.properties b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/org.eclipse.swt.internal.properties
index 25284f1..a88eb4c 100644
--- a/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/org.eclipse.swt.internal.properties	
+++ b/bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/org.eclipse.swt.internal.properties	
@@ -1,5 +1,5 @@
 ###############################################################################
-# Copyright (c) 2004, 2009 IBM Corporation and others.
+# Copyright (c) 2004, 2017 IBM Corporation and others.
 # All rights reserved. This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License v1.0
 # which accompanies this distribution, and is available at
@@ -31,8 +31,6 @@ swt_properties_copyright=#######################################################
 swt_main_classes=\
 org.eclipse.swt.internal.accessibility.gtk.ATK,../org.eclipse.swt/Eclipse SWT PI/gtk/library/,\
 org.eclipse.swt.internal.gtk.OS,../org.eclipse.swt/Eclipse SWT PI/gtk/library/,\
-org.eclipse.swt.internal.mozilla.XPCOM,../org.eclipse.swt/Eclipse SWT Mozilla/common/library/,\
-org.eclipse.swt.internal.mozilla.init.XPCOMInit,../org.eclipse.swt/Eclipse SWT Mozilla/common/library/,\
 org.eclipse.swt.internal.ole.win32.COM,../org.eclipse.swt/Eclipse SWT PI/win32/library/,\
 org.eclipse.swt.internal.win32.OS,../org.eclipse.swt/Eclipse SWT PI/win32/library/,\
 org.eclipse.swt.internal.gdip.Gdip,../org.eclipse.swt/Eclipse SWT PI/win32/library/,\
diff --git a/bundles/org.eclipse.swt.tools/JavadocBasher/org/eclipse/swt/tools/internal/JavadocBasher.java b/bundles/org.eclipse.swt.tools/JavadocBasher/org/eclipse/swt/tools/internal/JavadocBasher.java
index d0c97d1..5bb7706 100644
--- a/bundles/org.eclipse.swt.tools/JavadocBasher/org/eclipse/swt/tools/internal/JavadocBasher.java
+++ b/bundles/org.eclipse.swt.tools/JavadocBasher/org/eclipse/swt/tools/internal/JavadocBasher.java
@@ -90,7 +90,6 @@ public class JavadocBasher {
 				"Eclipse SWT Browser",
 				// "Eclipse SWT Custom Widgets",
 				"Eclipse SWT Drag and Drop", "Eclipse SWT Effects",
-				"Eclipse SWT Mozilla",
 				// "Eclipse SWT OLE Win32",
 				"Eclipse SWT OpenGL",
 				// "Eclipse SWT PI",
@@ -109,9 +108,7 @@ public class JavadocBasher {
 				"emulated/taskbar", // used by carbon, gtk
 				"emulated/tooltip", // used by cocoa (?!)
 				"glx", // used by gtk
-				"gtk",
-				"mozilla", // used by carbon, cocoa, gtk, win32
-		// "qt", // folder should be deleted
+				"gtk"
 		};
 
 		System.out.println("==== Start Bashing ====");
diff --git a/bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java b/bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java
deleted file mode 100644
index d9397e2..0000000
--- a/bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java	
+++ /dev/null
@@ -1,691 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2003, 2016 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.tools.internal;
-import java.io.*;
-import java.util.*;
-
-/* Produces the java classes mapping to XPCOM Mozilla objects */
-public class MozillaGenerator {
-	FileReader r = null;
-	FileWriter w = null;
-	int maxLines = 1000;
-	int cntLines = 0;
-	int n = 0;
-	String[] b = null;
-	String body = null;
-	int nMethods = 0;
-	String uuidName;
-	String uuidValue;
-	String className;
-	String parentName;
-	String[] constantNames;
-	String[] constantValues;
-	String[] methodNames;
-	String[][] argTypes;
-	String[][] argNames;
-	String bodyOrder;
-	Map<Integer, List<String>> vtbls;
-
-	static boolean DEBUG = false;
-
-	// Contains the characters found before a method name
-	// Useful to extract the method name. e.g.
-	//  NS_IMETHOD QueryInterface(const nsIID & uuid, void * *result) = 0;
-	//  NS_IMETHOD_(nsrefcnt) AddRef(void) = 0;
-	// method name follows: QueryInterface, AddRef etc.
-	static String[] BEFORE_METHOD_NAME = {
-		"  NS_IMETHOD ",
-		"  NS_IMETHOD_(nsrefcnt) ",
-		"  NS_IMETHOD_(void *) ",
-		"  NS_IMETHOD_(void) ",
-		"  NS_IMETHOD_(nsresult) ",
-		"  NS_SCRIPTABLE NS_IMETHOD ",
-		"  NS_SCRIPTABLE NS_IMETHOD_(nsrefcnt) ",
-		"  NS_SCRIPTABLE NS_IMETHOD_(void *) ",
-		"  NS_SCRIPTABLE NS_IMETHOD_(void) ",
-		"  NS_SCRIPTABLE NS_IMETHOD_(nsresult) ",
-	};
-	static String NO_SUPER_CLASS = "SWT_NO_SUPER_CLASS";
-	
-	static String[][] TYPES_C2JAVA = { 
-		{ "PRBool *", "int[]" },
-		{ "nsIID &", "nsID" },
-		{ "nsCID &", "nsID" },
-		{ "nsCID * *", "int /*long*/" }, // nsID[] not supported by jnigen
-		{ "* *", "int /*long*/[]" },
-		{ "**", "int /*long*/[]" },
-		{ "* &", "int /*long*/[]" },
-		{ "PRUint32 *", "int[]" }, 
-		{ "PRInt32 *", "int[]" },
-		{ "PRInt64 *", "long[]" },
-		{ "PRUnichar *", "char[]" },
-		{ "char *", "byte[]" },
-		{ "float *", "float[]" },
-		{ "PRUint16 *", "short[]" },
-		{ "nativeWindow *", "int /*long*/[]" },
-		{ "nsWriteSegmentFun", "int /*long*/" },
-		{ "nativeWindow", "int /*long*/" },
-
-		{ "*", "int /*long*/" }, // c type containing one or more * (and any other character, and did not match previous patterns) is a simple pointer
-		{ "&", "int /*long*/" }, 
-
-		{ "PRUint32", "int" },
-		{ "PRInt32", "int" }, 
-		{ "PRInt64", "long" }, 
-		{ "nsresult", "int" },
-		{ "PRBool", "int" },
-		{ "float", "float" },
-		{ "PRUint16", "short" },
-		{ "size_t", "int" },
-		};
-
-	static String GECKO = "/opt/mozilla/1.4/linux_gtk2/mozilla/dist/include/";
-	static String TARGET_FOLDER = "/opt/workspace/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/internal/mozilla/";
-	static String[] XPCOM_HEADERS = {
-		"profile/nsIProfile.h",
-		"widget/nsIAppShell.h",
-		"widget/nsIBaseWindow.h",
-		"xpcom/nsIComponentManager.h",
-		"xpcom/nsIComponentRegistrar.h",
-		"webbrwsr/nsIContextMenuListener.h", 
-		"docshell/nsIDocShell.h",
-		"dom/nsIDOMEvent.h",
-		"dom/nsIDOMMouseEvent.h",
-		"dom/nsIDOMUIEvent.h",
-		"dom/nsIDOMWindow.h",
-		"uriloader/nsIDownload.h", 
-		"webbrwsr/nsIEmbeddingSiteWindow.h",
-		"xpcom/nsIFactory.h", 
-		"xpcom/nsIFile.h",
-		"helperAppDlg/nsIHelperAppLauncherDialog.h",
-		"exthandler/nsIExternalHelperAppService.h", // contains nsIHelperAppLauncher
-		"xpcom/nsIInputStream.h", 
-		"xpcom/nsIInterfaceRequestor.h",
-		"necko/nsIIOService.h", 
-		"xpcom/nsILocalFile.h", 
-		"xpcom/nsIMemory.h",
-		"progressDlg/nsIProgressDialog.h",
-		"windowwatcher/nsIPromptService.h", 
-		"xpcom/nsIServiceManager.h",
-		"xpcom/nsISupports.h", 
-		"webbrwsr/nsITooltipListener.h", 
-		"necko/nsIURI.h",
-		"uriloader/nsIURIContentListener.h", 
-		"xpcom/nsIWeakReference.h",
-		"webbrwsr/nsIWebBrowser.h", 
-		"webbrwsr/nsIWebBrowserChrome.h",
-		"webbrwsr/nsIWebBrowserChromeFocus.h",
-		"webbrwsr/nsIWebBrowserFocus.h", 
-		"docshell/nsIWebNavigation.h",
-		"uriloader/nsIWebProgress.h", 
-		"uriloader/nsIWebProgressListener.h",
-		"embed_base/nsIWindowCreator.h", 
-		"windowwatcher/nsIWindowWatcher.h" };
-
-	public static void main(String[] args) {
-		MozillaGenerator x = new MozillaGenerator();
-		for (int i = 0; i < XPCOM_HEADERS.length; i++)
-			x.parse(GECKO + XPCOM_HEADERS[i], TARGET_FOLDER);
-		x.outputVtblCall();
-		System.out.println("done");
-	}
-
-	public MozillaGenerator() {
-		vtbls = new HashMap<>();
-	}
-
-	/** Write callbacks */
-	public void write(String data) {
-		if (DEBUG) {
-			System.out.print(data);
-			return;
-		}
-		try {
-			w.write(data);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-	}
-
-	public void writeLine() {
-		if (DEBUG) {
-			System.out.println();
-			return;
-		}
-		write("\r\n");
-	}
-
-	public void writeLine(String data) {
-		if (DEBUG) {
-			System.out.println(data);
-			return;
-		}
-		write(data + "\r\n");
-	}
-
-	public void writeCopyrights() {
-		writeLine(COPYRIGHTS);
-	}
-
-	public void writePackageDeclaration() {
-		writeLine(PACKAGE_DECLARATION);
-	}
-
-	public void writeClassDeclaration(String className, String parentName) {
-		String line = "public class " + className;
-		if (!parentName.equals(NO_SUPER_CLASS)) line += " extends " + parentName;
-		line += " {";
-		writeLine(line);
-	}
-
-	public void writeLastMethodId(String parentName, int nMethods) {
-		String line = "\tstatic final int LAST_METHOD_ID = ";
-		if (!parentName.equals(NO_SUPER_CLASS)) line += parentName + ".LAST_METHOD_ID + " + nMethods + ";";
-		else line += "" + (nMethods - 1)+ ";"; // zero indexed
-		writeLine(line);
-	}
-
-	public void writeIID(String uuidName, String uuidValue, String className) {
-		writeLine("\tstatic final String " + uuidName + " = \"" + uuidValue + "\";");
-		writeLine();
-		writeLine("\tstatic {");
-		writeLine("\t\tIIDStore.RegisterIID(" + className + ".class, MozillaVersion.VERSION_BASE, new nsID(" + uuidName + "));");
-		writeLine("\t}");
-	}
-
-	public void writeAddressField() {
-		writeLine("\tint /*long*/ address;");
-	}
-	public void writeConstructor(String className, String parentName) {
-		writeLine("\tpublic " + className + "(int /*long*/ address) {");
-		if (!parentName.equals(NO_SUPER_CLASS)) {
-			writeLine("\t\tsuper(address);");
-		} else {
-			writeLine("\t\tthis.address = address;");
-		}
-		writeLine("\t}");
-	}
-
-	public void writeAddressGetter() {
-		writeLine("\tpublic int /*long*/ getAddress() {");
-		writeLine("\t\treturn this.address;");
-		writeLine("\t}");
-	}
-	
-	public void writeConstant(String name, String value) {
-		writeLine("\tpublic static final int " + name + " = " + value + ";");
-	}
-
-	public void writeMethod(String name, String parentName, int methodIndex, String[] argTypes, String[] argNames) {
-		write("\tpublic int " + name + "(");
-		for (int i = 0; i < argTypes.length; i++) {
-			write(argTypes[i] + " " + argNames[i]);
-			if (i < argTypes.length - 1)
-				write(", ");
-		}
-		write(") {");
-		writeLine();
-		String line = "\t\treturn XPCOM.VtblCall(";
-		if (!parentName.equals(NO_SUPER_CLASS)) line += parentName + ".LAST_METHOD_ID + " + (methodIndex + 1) + ", getAddress()";
-		else line += methodIndex + ", getAddress()"; // zero indexed
-		write(line);
-		if (argTypes.length > 0)
-			write(", ");
-		for (int i = 0; i < argTypes.length; i++) {
-			write(argNames[i]);
-			if (i < argTypes.length - 1)
-				write(", ");
-		}
-		writeLine(");");
-		writeLine("\t}");
-	}
-
-	public void writeClassEnd() {
-		write("}");
-	}
-
-	public void logVtblCall(String[] argTypes) {
-		String vtbl = "static final native int VtblCall(int fnNumber, int /*long*/ ppVtbl";
-		if (argTypes.length > 0)
-			vtbl += ", ";
-		for (int i = 0; i < argTypes.length; i++) {
-			vtbl += argTypes[i] + " arg" + i;
-			if (i < argTypes.length - 1)
-				vtbl += ", ";
-		}
-		vtbl += ");";
-		Integer key = Integer.valueOf(argTypes.length);
-		List<String> list = vtbls.get(key);
-		if (list == null) {
-			list = new ArrayList<>();
-			vtbls.put(key, list);
-		}
-		boolean duplicate = false;
-		Iterator<String> e = list.iterator();
-		while (e.hasNext()) {
-			String s = e.next();
-			if (vtbl.equals(s)) {
-				duplicate = true;
-				break;
-			}
-		}
-		if (!duplicate)
-			list.add(vtbl);
-	}
-
-	public void outputVtblCall() {
-		Iterator<Integer> e = vtbls.keySet().iterator();
-		int n = 0;
-		while (e.hasNext()) {
-			e.next();
-			n++;
-		}
-		Integer[] keys = new Integer[n];
-		e = vtbls.keySet().iterator();
-		n = 0;
-		while (e.hasNext()) {
-			keys[n] = e.next();
-			n++;
-		}
-		Arrays.sort(keys);
-		for (int i = 0; i < keys.length; i++) {
-			List<String> list = vtbls.get(keys[i]);
-			Object[] elts = list.toArray();
-			Arrays.sort(elts);
-			for (int j = 0; j < elts.length; j++) {
-				System.out.println(elts[j]);
-			}
-		}
-
-	}
-
-	/** Parsing invoking write callbacks */
-
-	/*
-	 * Convert a C header file into a Java source file matching SWT Mozilla
-	 binding.
-	 */
-	public void parse(String src, String destPath) {
-		if (DEBUG) writeLine("*** PARSING <"+src+"> to folder "+destPath);
-		b = new String[maxLines];
-		cntLines = 0;
-		try {
-			r = new FileReader(src);
-			try (BufferedReader br = new BufferedReader(r)) {
-				while ((b[cntLines] = br.readLine()) != null) {
-					cntLines++;
-				}
-			}
-		} catch (IOException e) {
-			e.printStackTrace();
-			return;
-		}
-		n = 0;
-		boolean lookForClasses = true;
-		while (lookForClasses) {	
-			/* parsing */
-			lookForClasses = parse();
-	
-			String destFile = destPath + className + ".java";
-			try {
-				w = new FileWriter(destFile);
-				if (DEBUG) writeLine("** CREATED JAVA FILE <"+destFile+">");
-			} catch (IOException e) {
-				e.printStackTrace();
-				return;
-			}
-	
-			/* writing */
-			writeCopyrights();
-			writePackageDeclaration();
-			writeLine();
-			writeClassDeclaration(className, parentName);
-			writeLine();
-			writeLastMethodId(parentName, nMethods);
-			writeLine();
-			writeIID(uuidName, uuidValue, className);
-			writeLine();
-			if (parentName.equals(NO_SUPER_CLASS)) {
-				writeAddressField();
-				writeLine();
-			}
-			writeConstructor(className, parentName);
-			writeLine();
-			
-			if (parentName.equals(NO_SUPER_CLASS)) {
-				writeAddressGetter();
-				writeLine();
-			}
-	
-			int constantIndex = 0, methodIndex = 0;
-			for (int i = 0; i < bodyOrder.length(); i++) {
-				if (bodyOrder.charAt(i) == 'C') {
-					writeConstant(constantNames[constantIndex],
-							constantValues[constantIndex]);
-					if (i < bodyOrder.length() - 1) writeLine();
-					constantIndex++;
-				} else if (bodyOrder.charAt(i) == 'M') {
-					writeMethod(methodNames[methodIndex], parentName, methodIndex,
-							argTypes[methodIndex], argNames[methodIndex]);
-					if (i < bodyOrder.length() - 1) writeLine();
-					methodIndex++;
-				}
-			}
-	
-			writeClassEnd();
-	
-			try {
-				w.close();
-			} catch (IOException e) {
-				e.printStackTrace();
-			}
-		}
-	}
-
-	public String getPackages() {
-		return "package org.eclipse.swt.internal.mozilla;";
-	}
-
-	public boolean parse() {
-		if (!jumpToUuidDeclaration()) return false;
-		uuidName = getUuidName(b[n]);
-		if (DEBUG)
-			System.out.println("UUID name: <" + uuidName + ">");
-		uuidValue = getUuidValue(b[n]);
-		if (DEBUG)
-			System.out.println("UUID value: <" + uuidValue + ">");
-		jumpToInterfaceDeclaration();
-		className = getClassName(b[n]);
-		if (DEBUG)
-			System.out.println("Interface name: <" + className + ">");
-		parentName = getParentName(b[n]);
-		if (DEBUG)
-			System.out.println("parentName: <" + parentName + ">");
-		parseBody();
-		return true;
-	}
-
-	boolean jumpToUuidDeclaration() {
-		// jump to line matching: "#define NS_IWEBBROWSERCHROME_IID_STR "ba434c60-9d52-11d3-afb0-00a024ffc08c""
-		while (!(b[n].startsWith("#define ") && b[n].indexOf("_IID_STR \"") != -1)) {
-			n++;
-			if (n >= cntLines) return false;
-		}
-		return true;
-	}
-
-	//assume a declaration matching: "#define NS_IWEBBROWSERCHROME_IID_STR "ba434c60-9d52-11d3-afb0-00a024ffc08c""
-	//returns NS_IWEBBROWSERCHROME_IID_STR
-	String getUuidName(String declaration) {
-		return declaration.substring(declaration.indexOf("#define ")
-				+ "#define ".length(), declaration.indexOf(" \""));
-	}
-
-	//assume a declaration matching: "#define NS_IWEBBROWSERCHROME_IID_STR "ba434c60-9d52-11d3-afb0-00a024ffc08c""
-	//returns ba434c60-9d52-11d3-afb0-00a024ffc08c
-	String getUuidValue(String declaration) {
-		return declaration.substring(declaration.indexOf("_IID_STR \"")
-				+ "_IID_STR \"".length(), declaration.lastIndexOf('"'));
-	}
-
-	void jumpToInterfaceDeclaration() {
-		// jump to line matching: "class NS_NO_VTABLE nsIWebBrowserChrome : public nsISupports {"
-		while (!(b[n].startsWith("class NS_NO_VTABLE "))) {
-			n++;
-		}
-	}
-
-	// Assume a declaration matching: "class NS_NO_VTABLE nsIWebBrowserChrome : public nsISupports {"
-	// or "class NS_NO_VTABLE NS_SCRIPTABLE nsIWebBrowserChrome : public nsISupports {" returns nsIWebBrowserChrome.
-	// Special case for nsISupports that has no super class: class NS_NO_VTABLE nsISupports {
-	String getClassName(String declaration) {
-		int endIndex = declaration.indexOf(" :");
-		// nsISupports special case (no super class)
-		if (endIndex == -1) endIndex = declaration.indexOf(" {");
-		String searchString = "class NS_NO_VTABLE NS_SCRIPTABLE";
-		int startIndex = declaration.indexOf(searchString);
-		if (startIndex == -1) {
-			searchString = "class NS_NO_VTABLE ";
-			startIndex = declaration.indexOf(searchString);
-		}
-		return declaration.substring(startIndex + searchString.length(), endIndex);
-	}
-
-	// assume a declaration matching: "class NS_NO_VTABLE nsIWebBrowserChrome : public nsISupports {"
-	// returns nsISupports
-	// special case for nsISupports that has no super class: class NS_NO_VTABLE nsISupports {
-	String getParentName(String declaration) {
-		if (declaration.indexOf(" :") == -1) return NO_SUPER_CLASS;
-		return declaration.substring(declaration.indexOf(": public ")
-				+ ": public ".length(), declaration.indexOf(" {"));
-	}
-
-	// parse methods and constants declarations starting at the current index
-	// out:
-	// .String body - contains the corresponding java content
-	// .n - set to the end of the interface body declaration ( line with the enclosing "};" )
-	// .nMethods    - set to the number of methods parsed
-	void parseBody() {
-		body = "";
-		bodyOrder = "";
-		int nConstants = 0;
-		nMethods = 0;
-
-		int tmp_n = n;
-		while (true) {
-			int type = jumpToNextConstantOrMethod();
-			if (type == CONSTANT)
-				nConstants++;
-			if (type == METHOD)
-				nMethods++;
-			if (type == END_BODY)
-				break;
-			n++;
-		}
-		n = tmp_n;
-		constantNames = new String[nConstants];
-		constantValues = new String[nConstants];
-		methodNames = new String[nMethods];
-		argTypes = new String[nMethods][];
-		argNames = new String[nMethods][];
-		int constantIndex = 0, methodIndex = 0;
-		while (true) {
-			int type = jumpToNextConstantOrMethod();
-			if (type == CONSTANT) {
-				parseConstant(b[n], constantIndex);
-				bodyOrder += "C";
-				constantIndex++;
-			}
-			if (type == METHOD) {
-				parseMethod(b[n], methodIndex);
-				logVtblCall(argTypes[methodIndex]);
-				bodyOrder += "M";
-				methodIndex++;
-			}
-			if (type == END_BODY)
-				return;
-			n++;
-		}
-	}
-
-	static int CONSTANT = 0;
-
-	static int METHOD = 1;
-
-	static int END_BODY = 2;
-
-	boolean isEndOfInterfaceBody() {
-		return b[n].startsWith("};");
-	}
-
-	int jumpToNextConstantOrMethod() {
-		while (!isEndOfInterfaceBody()) {
-			if (b[n].startsWith("  enum { ")) {
-				return CONSTANT;
-			}
-			if (methodNameStartIndexOf(b[n]) != -1) {
-				return METHOD;
-			}
-			n++;
-		}
-		return END_BODY;
-	}
-
-	void parseConstant(String constant, int constantIndex) {
-		String constantName = constant.substring(constant.indexOf(" enum { ")
-				+ " enum { ".length(), constant.indexOf(" ="));
-		if (DEBUG)
-			writeLine("constantName <" + constantName + ">");
-		constantNames[constantIndex] = constantName;
-		
-		// most constants values have a trailing U
-		// enum { APP_TYPE_UNKNOWN = 0U };
-		int endIndex = constant.indexOf("U };");
-		// a few others don't
-		// enum { ENUMERATE_FORWARDS = 0 };		
-		if (endIndex == -1) endIndex = constant.indexOf(" };");
-		String constantValue = constant.substring(constant.indexOf(" = ")
-				+ " = ".length(), endIndex);
-		if (DEBUG)
-			writeLine("constantValue <" + constantValue + ">");
-		constantValues[constantIndex] = constantValue;
-	}
-
-	// NS_IMETHOD SetStatus(PRUint32 statusType, const PRUnichar *status) = 0;
-	// identify:
-	// method name: <SetStatus>
-	// Nbr of arguments: 2
-	// Type of argument 0: PRUint32
-	// Name of argument 0: statusType
-	// Type of argument 1: const PRUnichar *
-	// Name of argument 1: status
-	void parseMethod(String line, int methodIndex) {
-		int start = methodNameStartIndexOf(line);
-		int end = methodNameEndIndexOf(line);
-		String methodName = line.substring(start, end);
-		if (DEBUG)
-			writeLine("method name: <" + methodName + ">");
-		methodNames[methodIndex] = methodName;
-		int argStart = end+"(".length();
-		int argEnd = line.indexOf(")", argStart);
-		parseArgs(line.substring(argStart, argEnd), methodIndex);
-	}
-
-	// Given a line, returns the start of the method name or -1
-	// if the line does not contain a method declaration.
-	int methodNameStartIndexOf(String line) {
-		for (int i = 0; i < BEFORE_METHOD_NAME.length; i++) {
-			int index = line.indexOf(BEFORE_METHOD_NAME[i]);
-			if (index != -1) return index + BEFORE_METHOD_NAME[i].length();
-		}
-		return -1;
-	}
-	int methodNameEndIndexOf(String line) {
-		int startIndex = methodNameStartIndexOf(line);
-		return line.indexOf("(", startIndex);
-	}
-	void parseArgs(String args, int methodIndex) {
-		int nArgs = -1;
-		// methods with no args look like: () or (void)
-		String[] noArgs = new String[] { "", "void" };
-		for (int i = 0; i < noArgs.length; i++) {
-			if (args.equals(noArgs[i])) {
-				nArgs = 0;
-				break;
-			}
-		}
-		if (nArgs == -1)
-			nArgs = count(args, ", ") + 1;
-		String[] argTypes = new String[nArgs];
-		this.argTypes[methodIndex] = argTypes;
-		String[] argNames = new String[nArgs];
-		this.argNames[methodIndex] = argNames;
-		int typeStart = 0;
-
-		// name is separated from its type by either of the following (sorted by decreasing size to find the most complete pattern */
-		String[] typeNameSep = new String[] { " * *", " **", " * & ", " * ", " *",
-				" & ", " " };
-		for (int i = 0; i < nArgs; i++) {
-			/* get the type */
-			int nextTypeStart = i < nArgs - 1 ? args.indexOf(", ", typeStart)
-					+ ", ".length() : args.length();
-			int typeNameSepIndex = 0;
-			int separatorIndex = 0;
-			for (; typeNameSepIndex < typeNameSep.length; typeNameSepIndex++) {
-				separatorIndex = args.indexOf(typeNameSep[typeNameSepIndex],
-						typeStart);
-				if (separatorIndex != -1 && separatorIndex < nextTypeStart)
-					break;
-			}
-			String separator = typeNameSep[typeNameSepIndex];
-			argTypes[i] = getC2JavaType(args.substring(typeStart,
-					separatorIndex + separator.length()));
-			if (DEBUG)
-				writeLine("arg type" + i + ": <" + argTypes[i] + ">");
-			/* get the name */
-			int nameStart = separatorIndex + separator.length();
-			int nameEnd = i < nArgs - 1 ? args.indexOf(", ", nameStart) : args
-					.length();
-			argNames[i] = args.substring(nameStart, nameEnd);
-			if (DEBUG)
-				writeLine("arg name" + i + ": <" + argNames[i] + ">");
-
-			typeStart = nextTypeStart;
-		}
-	}
-
-	String getC2JavaType(String cType) {
-		for (int i = 0; i < TYPES_C2JAVA.length; i++) {
-			if (cType.indexOf(TYPES_C2JAVA[i][0]) != -1)
-				return TYPES_C2JAVA[i][1];
-		}
-		return "!ERROR UNKNOWN C TYPE <" + cType + ">!";
-	}
-
-	// how many times part can be found in s
-	static int count(String s, String part) {
-		int index = -1, cnt = 0;
-		while ((index = s.indexOf(part, index + 1)) != -1)
-			cnt++;
-		return cnt;
-	}
-
-	static String COPYRIGHTS =
-		"/* ***** BEGIN LICENSE BLOCK *****\r\n"
-		+ " * Version: MPL 1.1\r\n"
-		+ " *\r\n"
-		+ " * The contents of this file are subject to the Mozilla Public License Version\r\n"
-		+ " * 1.1 (the \"License\"); you may not use this file except in compliance with\r\n"
-		+ " * the License. You may obtain a copy of the License at\r\n"
-		+ " * http://www.mozilla.org/MPL/\r\n"
-		+ " *\r\n"
-		+ " * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n"
-		+ " * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n"
-		+ " * for the specific language governing rights and limitations under the\r\n"
-		+ " * License.\r\n"
-		+ " *\r\n"
-		+ " * The Original Code is Mozilla Communicator client code, released March 31, 1998.\r\n"
-		+ " *\r\n"
-		+ " * The Initial Developer of the Original Code is\r\n"
-		+ " * Netscape Communications Corporation.\r\n"
-		+ " * Portions created by Netscape are Copyright (C) 1998-1999\r\n"
-		+ " * Netscape Communications Corporation.  All Rights Reserved.\r\n"
-		+ " *\r\n" 
-		+ " * Contributor(s):\r\n" 
-		+ " *\r\n" 
-		+ " * IBM\r\n"
-		+ " * -  Binding to permit interfacing between Mozilla and SWT\r\n"
-		+ " * -  Copyright (C) 2014 IBM Corp.  All Rights Reserved.\r\n"
-		+ " *\r\n" + " * ***** END LICENSE BLOCK ***** */";
-
-	static String PACKAGE_DECLARATION = "package org.eclipse.swt.internal.mozilla;";
-
-}
diff --git a/bundles/org.eclipse.swt.tools/build.properties b/bundles/org.eclipse.swt.tools/build.properties
index adc6eae..b837100 100644
--- a/bundles/org.eclipse.swt.tools/build.properties
+++ b/bundles/org.eclipse.swt.tools/build.properties
@@ -1,5 +1,5 @@
 ###############################################################################
-# Copyright (c) 2003, 2004 IBM Corporation and others.
+# Copyright (c) 2003, 2017 IBM Corporation and others.
 # All rights reserved. This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License v1.0
 # which accompanies this distribution, and is available at
@@ -21,7 +21,6 @@ source.. = src/,\
            Mac Generation/,\
            Icon Exe/,\
            NativeStats/,\
-           Mozilla Generation/,\
            JavadocBasher/
 src.includes = about.html
 bin.excludes = META-INF/p2.inf
commit 18326ae5bb99e1bc2fe12f7d3b1b1b678c9b97b5
Author: Lakshmi Shanmugam <lshanmug@in.ibm.com>
Date:   Thu Jun 29 12:13:10 2017 +0530

    Bug 518542 - Remove XULRunner related code from SWT source repository
    
    Removed Mozilla specific snippets and updated classpath files.
    
    Change-Id: Id0cfc0a4d60c2d333384a44a2a5fd0de77f0f400

1	1	examples/org.eclipse.swt.snippets/.classpath_cocoa
1	1	examples/org.eclipse.swt.snippets/.classpath_gtk
1	1	examples/org.eclipse.swt.snippets/.classpath_win32
0	92	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet267.java
0	154	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet277.java
0	81	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet306.java
0	103	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet321.java
0	226	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet323.java
0	91	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet329.java
diff --git a/examples/org.eclipse.swt.snippets/.classpath_cocoa b/examples/org.eclipse.swt.snippets/.classpath_cocoa
index 27f2f18..0e42ac5 100644
--- a/examples/org.eclipse.swt.snippets/.classpath_cocoa
+++ b/examples/org.eclipse.swt.snippets/.classpath_cocoa
@@ -2,6 +2,6 @@
 <classpath>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry excluding="org/eclipse/swt/snippets/Snippet123.java|org/eclipse/swt/snippets/Snippet157.java|org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet186.java|org/eclipse/swt/snippets/Snippet187.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet199.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet261.java|org/eclipse/swt/snippets/Snippet262.java|org/eclipse/swt/snippets/Snippet263.java|org/eclipse/swt/snippets/Snippet264.java|org/eclipse/swt/snippets/Snippet265.java|org/eclipse/swt/snippets/Snippet267.java|org/eclipse/swt/snippets/Snippet277.java|org/eclipse/swt/snippets/Snippet305.java|org/eclipse/swt/snippets/Snippet306.java|org/eclipse/swt/snippets/Snippet321.java|org/eclipse/swt/snippets/Snippet323.java|org/eclipse/swt/snippets/Snippet329.java|org/eclipse/swt/snippets/Snippet341.java|org/eclipse/swt/snippets/Snippet81.java|org/eclipse/swt/snippets/Snippet83.java" kind="src" path="src"/>
+	<classpathentry excluding="org/eclipse/swt/snippets/Snippet123.java|org/eclipse/swt/snippets/Snippet157.java|org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet186.java|org/eclipse/swt/snippets/Snippet187.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet199.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet261.java|org/eclipse/swt/snippets/Snippet262.java|org/eclipse/swt/snippets/Snippet263.java|org/eclipse/swt/snippets/Snippet264.java|org/eclipse/swt/snippets/Snippet265.java|org/eclipse/swt/snippets/Snippet305.java|org/eclipse/swt/snippets/Snippet341.java|org/eclipse/swt/snippets/Snippet81.java|org/eclipse/swt/snippets/Snippet83.java" kind="src" path="src"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
diff --git a/examples/org.eclipse.swt.snippets/.classpath_gtk b/examples/org.eclipse.swt.snippets/.classpath_gtk
index 27f2f18..0e42ac5 100644
--- a/examples/org.eclipse.swt.snippets/.classpath_gtk
+++ b/examples/org.eclipse.swt.snippets/.classpath_gtk
@@ -2,6 +2,6 @@
 <classpath>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry excluding="org/eclipse/swt/snippets/Snippet123.java|org/eclipse/swt/snippets/Snippet157.java|org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet186.java|org/eclipse/swt/snippets/Snippet187.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet199.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet261.java|org/eclipse/swt/snippets/Snippet262.java|org/eclipse/swt/snippets/Snippet263.java|org/eclipse/swt/snippets/Snippet264.java|org/eclipse/swt/snippets/Snippet265.java|org/eclipse/swt/snippets/Snippet267.java|org/eclipse/swt/snippets/Snippet277.java|org/eclipse/swt/snippets/Snippet305.java|org/eclipse/swt/snippets/Snippet306.java|org/eclipse/swt/snippets/Snippet321.java|org/eclipse/swt/snippets/Snippet323.java|org/eclipse/swt/snippets/Snippet329.java|org/eclipse/swt/snippets/Snippet341.java|org/eclipse/swt/snippets/Snippet81.java|org/eclipse/swt/snippets/Snippet83.java" kind="src" path="src"/>
+	<classpathentry excluding="org/eclipse/swt/snippets/Snippet123.java|org/eclipse/swt/snippets/Snippet157.java|org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet186.java|org/eclipse/swt/snippets/Snippet187.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet199.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet261.java|org/eclipse/swt/snippets/Snippet262.java|org/eclipse/swt/snippets/Snippet263.java|org/eclipse/swt/snippets/Snippet264.java|org/eclipse/swt/snippets/Snippet265.java|org/eclipse/swt/snippets/Snippet305.java|org/eclipse/swt/snippets/Snippet341.java|org/eclipse/swt/snippets/Snippet81.java|org/eclipse/swt/snippets/Snippet83.java" kind="src" path="src"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
diff --git a/examples/org.eclipse.swt.snippets/.classpath_win32 b/examples/org.eclipse.swt.snippets/.classpath_win32
index 19e9a89..ecdf7f8 100644
--- a/examples/org.eclipse.swt.snippets/.classpath_win32
+++ b/examples/org.eclipse.swt.snippets/.classpath_win32
@@ -2,6 +2,6 @@
 <classpath>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry excluding="org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet267.java|org/eclipse/swt/snippets/Snippet277.java|org/eclipse/swt/snippets/Snippet306.java|org/eclipse/swt/snippets/Snippet321.java|org/eclipse/swt/snippets/Snippet323.java|org/eclipse/swt/snippets/Snippet329.java|org/eclipse/swt/snippets/Snippet341.java" kind="src" path="src"/>
+	<classpathentry excluding="org/eclipse/swt/snippets/Snippet174.java|org/eclipse/swt/snippets/Snippet195.java|org/eclipse/swt/snippets/Snippet209.java|org/eclipse/swt/snippets/Snippet341.java" kind="src" path="src"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet267.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet267.java
deleted file mode 100644
index 70a06e7..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet267.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.SWTError;
-import org.eclipse.swt.browser.Browser;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-import org.mozilla.interfaces.*;
-
-/*
- * Browser example snippet: Toggle a Mozilla Browser between Design mode and View mode.
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-public class Snippet267 {
-	static Browser browser;
-	public static void main (String [] args) {
-		Display display = new Display();
-		Shell shell = new Shell(display);
-		shell.setLayout(new GridLayout(2, true));
-		shell.setText("Use Mozilla's Design Mode");
-		try {
-			browser = new Browser(shell, SWT.MOZILLA);
-		} catch (SWTError e) {
-			System.out.println("Could not instantiate Browser: " + e.getMessage());
-			display.dispose();
-			return;
-		}
-		browser.setLayoutData(new GridData(GridData.FILL, GridData.FILL, true, true, 2, 1));
-
-		final Button offButton = new Button(shell, SWT.RADIO);
-		offButton.setText("Design Mode Off");
-		offButton.addListener(SWT.Selection, new Listener() {
-			@Override
-			public void handleEvent(Event event) {
-				if (!offButton.getSelection()) return;
-				setDesignMode("off");
-			}
-		});
-		final Button onButton = new Button(shell, SWT.RADIO);
-		onButton.setText("Design Mode On");
-		onButton.addListener(SWT.Selection, new Listener() {
-			@Override
-			public void handleEvent(Event event) {
-				if (!onButton.getSelection()) return;
-				boolean success = setDesignMode("on");
-				if (!success) {
-					onButton.setSelection(false);
-					offButton.setSelection(true);
-				}
-			}
-		});
-		offButton.setSelection(true);
-
-		browser.setUrl("http://www.google.com");
-		shell.setSize(400,400);
-		shell.open();
-		while (!shell.isDisposed()) {
-			if (!display.readAndDispatch()) display.sleep();
-		}
-		display.dispose();
-	}
-	public static boolean setDesignMode(String value) {
-		nsIWebBrowser webBrowser = (nsIWebBrowser)browser.getWebBrowser();
-		if (webBrowser == null) {
-			System.out.println("Could not get the nsIWebBrowser from the Browser widget");
-			return false;
-		}
-		nsIDOMWindow window = webBrowser.getContentDOMWindow();
-		nsIDOMDocument document = window.getDocument();
-		nsIDOMNSHTMLDocument nsDocument = (nsIDOMNSHTMLDocument)document.queryInterface(nsIDOMNSHTMLDocument.NS_IDOMNSHTMLDOCUMENT_IID);
-		nsDocument.setDesignMode(value);
-		return true;
-	}
-}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet277.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet277.java
deleted file mode 100644
index 45b9b7e..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet277.java
+++ /dev/null
@@ -1,154 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-/*
- * Browser example snippet: Implement a custom download handler for a Mozilla Browser.
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-import org.eclipse.swt.*;
-import org.eclipse.swt.browser.*;
-import org.eclipse.swt.custom.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-import org.mozilla.interfaces.*;
-import org.mozilla.xpcom.Mozilla;
-
-public class Snippet277 {
-	static Shell shell;
-	static Table table;
-
-	public static void main (String [] args) {
-		Display display = new Display ();
-		shell = new Shell (display);
-		shell.setLayout(new GridLayout ());
-		shell.setText ("Custom Download Handler");
-
-		Browser browser;
-		try {
-			browser = new Browser (shell, SWT.MOZILLA);
-		} catch (SWTError e) {
-			System.out.println ("Could not instantiate Browser: " + e.getMessage ());
-			display.dispose();
-			return;
-		}
-		GridData data = new GridData (GridData.FILL_BOTH);
-		data.minimumHeight = 800;
-		data.minimumWidth = 800;
-		browser.setLayoutData (data);
-
-		table = new Table (shell, SWT.NONE);
-		table.setForeground (display.getSystemColor (SWT.COLOR_RED));
-		data = new GridData (GridData.FILL_HORIZONTAL);
-		data.exclude = true;
-		table.setLayoutData (data);
-		new TableColumn (table, SWT.NONE);
-		new TableColumn (table, SWT.NONE);
-
-		nsIComponentRegistrar registrar = Mozilla.getInstance ().getComponentRegistrar ();
-		String NS_DOWNLOAD_CID = "e3fa9D0a-1dd1-11b2-bdef-8c720b597445";
-		String NS_TRANSFER_CONTRACTID = "@mozilla.org/transfer;1";
-		registrar.registerFactory (NS_DOWNLOAD_CID, "Transfer", NS_TRANSFER_CONTRACTID, new nsIFactory () {
-			public nsISupports queryInterface (String uuid) {
-				if (uuid.equals (nsIFactory.NS_IFACTORY_IID) ||
-					uuid.equals (nsIFactory.NS_ISUPPORTS_IID)) return this;
-				return null;
-			}
-			public nsISupports createInstance (nsISupports outer, String iid) {
-				return createTransfer ();
-			}
-			public void lockFactory (boolean lock) {}
-		});
-
-		browser.setUrl ("http://www.eclipse.org/downloads");
-		shell.pack ();
-		shell.open ();
-		while (!shell.isDisposed ()) {
-			if (!display.readAndDispatch ()) display.sleep ();
-		}
-		display.dispose ();
-	}
-
-	static nsITransfer createTransfer () {
-		/* nsITransfer is documented at http://www.xulplanet.com/references/xpcomref/ifaces/nsITransfer.html */
-		return new nsITransfer () {
-			public nsISupports queryInterface (String uuid) {
-				if (uuid.equals (nsITransfer.NS_ITRANSFER_IID) ||
-					uuid.equals (nsITransfer.NS_IWEBPROGRESSLISTENER2_IID) ||
-					uuid.equals (nsITransfer.NS_IWEBPROGRESSLISTENER_IID) ||
-					uuid.equals (nsITransfer.NS_ISUPPORTS_IID)) return this;
-				return null;
-			}
-			public void onStateChange (nsIWebProgress webProgress, nsIRequest request, long stateFlags, long status) {
-				if ((stateFlags & nsIWebProgressListener.STATE_STOP) != 0) {
-					removeFromTable ();
-				}
-			}
-			public void onProgressChange64 (nsIWebProgress webProgress, nsIRequest request, long curSelfProgress, long maxSelfProgress, long curTotalProgress, long maxTotalProgress) {
-				long currentKBytes = curTotalProgress / 1024;
-				long totalKBytes = maxTotalProgress / 1024;
-				tableItem.setText (1, baseString + " (" + currentKBytes + "/" + totalKBytes + ")");
-				table.getColumn (1).pack ();
-			}
-			public void init (nsIURI source, nsIURI target, String displayName, nsIMIMEInfo MIMEInfo, double startTime, nsILocalFile tempFile, final nsICancelable cancelable) {
-				tableItem = new TableItem (table, SWT.NONE);
-				button = new Button (table, SWT.PUSH);
-				button.setText ("Cancel");
-				button.pack ();
-				button.addListener (SWT.Selection, new Listener () {
-					@Override
-					public void handleEvent (Event event) {
-						cancelable.cancel (Mozilla.NS_ERROR_ABORT);
-						removeFromTable ();
-					}
-				});
-				TableEditor editor = new TableEditor (table);
-				editor.setEditor (button, tableItem, 0);
-				editor.minimumWidth = button.computeSize (SWT.DEFAULT, SWT.DEFAULT).x;
-				baseString = "Downloading to " + target.getPath ();
-				tableItem.setText (1, baseString);
-				if (table.getItemCount () == 1) {
-					((GridData)table.getLayoutData ()).exclude = false;	/* show the table */
-					table.getColumn (0).setWidth (editor.minimumWidth);
-				}
-				table.getColumn (1).pack ();
-				table.getShell ().layout ();
-			}
-			public void onStatusChange (nsIWebProgress webProgress, nsIRequest request, long status, String message) {}
-			public void onSecurityChange (nsIWebProgress webProgress, nsIRequest request, long state) {}
-			public void onProgressChange (nsIWebProgress webProgress, nsIRequest request, int curSelfProgress, int maxSelfProgress, int curTotalProgress, int maxTotalProgress) {}
-			public void onLocationChange (nsIWebProgress webProgress, nsIRequest request, nsIURI location) {}
-
-			/* the following are not part of the nsITransfer interface but are here for the snippet's convenience */
-			Button button;
-			TableItem tableItem;
-			String baseString;
-
-			void removeFromTable () {
-				tableItem.dispose ();
-				button.dispose ();
-				if (table.getItemCount () == 0) {
-					((GridData)table.getLayoutData ()).exclude = true;	/* hide the table */
-				}
-				table.getColumn (1).pack ();
-				table.getShell ().layout ();
-			}
-		};
-	}
-}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet306.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet306.java
deleted file mode 100644
index 326a9da..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet306.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-/*
- * Browser example snippet: Show an HTML element-specific context menu
- * in a Mozilla Browser.
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-import org.eclipse.swt.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.browser.*;
-import org.mozilla.interfaces.*;
-
-public class Snippet306 {
-
-public static void main (String [] args) {
-	Display display = new Display ();
-	final Shell shell = new Shell (display);
-	shell.setLayout (new FillLayout ());
-	final Browser browser;
-	try {
-		browser = new Browser (shell, SWT.MOZILLA);
-	} catch (SWTError e) {
-		System.out.println ("Could not instantiate Browser: " + e.getMessage ());
-		display.dispose();
-		return;
-	}
-	browser.addProgressListener (new ProgressAdapter () {
-		@Override
-		public void completed (ProgressEvent event) {
-			nsIWebBrowser webBrowser = (nsIWebBrowser)browser.getWebBrowser ();
-			nsIDOMWindow domWindow = webBrowser.getContentDOMWindow ();
-			nsIDOMEventTarget target = (nsIDOMEventTarget)domWindow.queryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID);
-			nsIDOMEventListener listener = new nsIDOMEventListener () {
-				public nsISupports queryInterface (String uuid) {
-					if (uuid.equals (nsIDOMEventListener.NS_IDOMEVENTLISTENER_IID) ||
-						uuid.equals (nsIDOMEventListener.NS_ISUPPORTS_IID)) {
-							return this;
-					}
-					return null;
-				}
-				public void handleEvent (nsIDOMEvent event) {
-					nsIDOMElement element = (nsIDOMElement)event.getTarget ().queryInterface (nsIDOMElement.NS_IDOMELEMENT_IID);
-					Menu menu = new Menu (browser);
-					MenuItem item = new MenuItem (menu, SWT.NONE);
-					item.setText ("custom menu for element with tag: " + element.getTagName ());
-					nsIDOMMouseEvent mouseEvent = (nsIDOMMouseEvent)event.queryInterface (nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_IID);
-					menu.setLocation (mouseEvent.getScreenX (), mouseEvent.getScreenY ());
-					menu.setVisible (true);
-				}
-			};
-			target.addEventListener ("contextmenu", listener, false);
-		}
-	});
-	shell.open ();
-	browser.setUrl ("http://www.eclipse.org");
-	while (!shell.isDisposed ()) {
-		if (!display.readAndDispatch ()) display.sleep ();
-	}
-	display.dispose ();
-}
-
-}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet321.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet321.java
deleted file mode 100644
index 5be5d4c..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet321.java
+++ /dev/null
@@ -1,103 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2000, 2009 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-/*
- * Browser example snippet: Examine request and response headers in a Mozilla Browser
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.SWTError;
-import org.eclipse.swt.browser.Browser;
-import org.eclipse.swt.layout.FillLayout;
-import org.eclipse.swt.widgets.*;
-import org.mozilla.interfaces.*;
-import org.mozilla.xpcom.Mozilla;
-
-public class Snippet321 {
-
-public static void main(String [] args) {
-	Display display = new Display();
-	Shell shell = new Shell(display);
-	shell.setBounds(10,10,200,200);
-	shell.setLayout(new FillLayout());
-	Browser browser;
-	try {
-		browser = new Browser(shell, SWT.MOZILLA);
-	} catch (SWTError e) {
-		System.out.println("Could not instantiate Browser: " + e.getMessage());
-		display.dispose();
-		return;
-	}
-
-	nsIObserver observer = new nsIObserver() {
-		public nsISupports queryInterface(String aIID) {
-			if (aIID.equals(nsIObserver.NS_IOBSERVER_IID) || aIID.equals(nsIObserver.NS_ISUPPORTS_IID)) {
-				return this;
-			}
-			return null;
-		}
-		public void observe(nsISupports subject, String topic, String data) {
-			nsIHttpChannel channel = (nsIHttpChannel)subject.queryInterface(nsIHttpChannel.NS_IHTTPCHANNEL_IID);
-			nsIRequest request = (nsIRequest)subject.queryInterface(nsIRequest.NS_IREQUEST_IID);
-			if (topic.equals("http-on-modify-request")) {
-				System.out.println("---------------------\nSome Request Header Values for " + request.getName() + ':');
-				printRequestHeader(channel, "accept");
-				printRequestHeader(channel, "accept-language");
-				printRequestHeader(channel, "host");
-				printRequestHeader(channel, "user-agent");
-			} else {
-				/* http-on-examine-response */
-				System.out.println("---------------------\n\tSome Response Header Values for " + request.getName() + ':');
-				printResponseHeader(channel, "content-length");
-				printResponseHeader(channel, "content-type");
-				printResponseHeader(channel, "expires");
-				printResponseHeader(channel, "server");
-			}
-		}
-		void printRequestHeader(nsIHttpChannel channel, String header) {
-			try {
-				System.out.println(header + '=' + channel.getRequestHeader(header));
-			} catch (Exception e) {
-				// the header did not exist, just continue
-			}
-		}
-		void printResponseHeader(nsIHttpChannel channel, String header) {
-			try {
-				System.out.println('\t' + header + '=' + channel.getResponseHeader(header));
-			} catch (Exception e) {
-				// the header did not exist, just continue
-			}
-		}
-	};
-	nsIObserverService observerService = (nsIObserverService)Mozilla.getInstance().getServiceManager().getServiceByContractID(
-		"@mozilla.org/observer-service;1", nsIObserverService.NS_IOBSERVERSERVICE_IID);
-	observerService.addObserver(observer, "http-on-modify-request", false);
-	observerService.addObserver(observer, "http-on-examine-response", false);
-
-	browser.setUrl("http://www.eclipse.org");
-	shell.open();
-	while (!shell.isDisposed()) {
-		if (!display.readAndDispatch()) display.sleep();
-	}
-	display.dispose();
-}
-
-}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet323.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet323.java
deleted file mode 100644
index 629d4f7..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet323.java
+++ /dev/null
@@ -1,226 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-/*
- * Browser example snippet: View DOM tree and edit node values in a Mozilla Browser
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-import static org.eclipse.swt.events.SelectionListener.*;
-
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.browser.*;
-import org.eclipse.swt.custom.*;
-import org.eclipse.swt.events.*;
-import org.eclipse.swt.graphics.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-import org.mozilla.interfaces.*;
-
-public class Snippet323 {
-
-public static void main (String[] args) {
-	new Snippet323 ().run ();
-}
-
-void run () {
-	final Display display = new Display ();
-	final Shell shell = new Shell (display);
-	shell.setBounds (10,10,500,500);
-	shell.setLayout (new FillLayout ());
-	final Browser browser = new Browser (shell, SWT.MOZILLA);
-	browser.setUrl ("http://www.google.com");
-	browser.addProgressListener (new ProgressAdapter () {
-		@Override
-		public void completed (ProgressEvent event) {
-			nsIWebBrowser webBrowser = (nsIWebBrowser)browser.getWebBrowser ();
-			nsIDOMWindow domWindow = webBrowser.getContentDOMWindow ();
-			nsIDOMDocument document = domWindow.getDocument ();
-			nsIDOMElement documentElement = document.getDocumentElement ();
-			DOMEditor domEditor = new DOMEditor (shell);
-			domEditor.populate (documentElement);
-		}
-	});
-
-	shell.open ();
-	while (!shell.isDisposed ()) {
-		if (!display.readAndDispatch ()) display.sleep ();
-	}
-	display.dispose ();
-}
-
-class DOMEditor {
-	Tree tree;
-
-	public DOMEditor (Shell parent) {
-		super ();
-		Shell shell = new Shell (parent, SWT.SHELL_TRIM);
-		shell.setText ("DOM Editor");
-		shell.setBounds (510,10,400,400);
-		shell.setLayout (new FillLayout ());
-
-		tree = new Tree (shell, SWT.NONE);
-		shell.open ();
-		final TreeItem[] lastItem = new TreeItem[1];
-		final TreeEditor editor = new TreeEditor (tree);
-		tree.addSelectionListener (widgetDefaultSelectedAdapter(e -> {
-			final TreeItem item = (TreeItem)e.item;
-			final nsIDOMNode node = (nsIDOMNode)item.getData ();
-			if (node == null) return; 	/* not editable */
-			if (item != null && item == lastItem[0]) {
-				final Composite composite = new Composite (tree, SWT.NONE);
-				final Text text = new Text (composite, SWT.NONE);
-				final int inset = 1;
-				composite.addListener (SWT.Resize, e -> {
-					Rectangle rect = composite.getClientArea ();
-					text.setBounds (rect.x + inset, rect.y + inset, rect.width - inset * 2, rect.height - inset * 2);
-				});
-				Listener textListener = new Listener () {
-					@Override
-					public void handleEvent (final Event e) {
-						switch (e.type) {
-							case SWT.FocusOut:
-								String string = text.getText ();
-								node.setNodeValue (string);
-								item.setText ("Node Value: " + node.getNodeValue ());
-								composite.dispose ();
-								break;
-							case SWT.Verify:
-								String newText = text.getText ();
-								String leftText = newText.substring (0, e.start);
-								String rightText = newText.substring (e.end, newText.length ());
-								GC gc = new GC (text);
-								Point size = gc.textExtent (leftText + e.text + rightText);
-								gc.dispose ();
-								size = text.computeSize (size.x, SWT.DEFAULT);
-								editor.horizontalAlignment = SWT.LEFT;
-								Rectangle itemRect = item.getBounds (), rect = tree.getClientArea ();
-								editor.minimumWidth = Math.max (size.x, itemRect.width) + inset * 2;
-								int left = itemRect.x, right = rect.x + rect.width;
-								editor.minimumWidth = Math.min (editor.minimumWidth, right - left);
-								editor.minimumHeight = size.y + inset * 2;
-								editor.layout ();
-								break;
-							case SWT.Traverse:
-								switch (e.detail) {
-									case SWT.TRAVERSE_RETURN:
-										string = text.getText ();
-										node.setNodeValue (string);
-										item.setText ("Node Value: " + node.getNodeValue ());
-										//FALL THROUGH
-									case SWT.TRAVERSE_ESCAPE:
-										composite.dispose ();
-										e.doit = false;
-								}
-								break;
-						}
-					}
-				};
-				text.addListener (SWT.FocusOut, textListener);
-				text.addListener (SWT.Traverse, textListener);
-				text.addListener (SWT.Verify, textListener);
-				editor.setEditor (composite, item);
-				String nodeValue = node.getNodeValue ();
-				text.setText (nodeValue == null ? "null" : nodeValue);
-				text.selectAll ();
-				text.setFocus ();
-			}
-			lastItem [0] = item;
-		}));
-	}
-
-	public void populate (nsIDOMElement element) {
-		tree.removeAll ();
-		TreeItem root = new TreeItem (tree, SWT.NONE);
-		root.setText ("Root: " + element.getTagName ());
-		populate (root, element);
-	}
-
-	void populate (TreeItem parentItem, nsIDOMNode node) {
-		String nodeName = node.getNodeName ();
-		if (nodeName.length () > 0) {
-			new TreeItem (parentItem, SWT.NONE).setText ("Node Name: " + nodeName);
-		}
-		String localName = node.getLocalName ();
-		if (localName != null && localName.length () > 0) {
-			new TreeItem (parentItem, SWT.NONE).setText ("Local Name: " + localName);			
-		}
-
-		TreeItem valueItem = new TreeItem (parentItem, SWT.NONE);
-		String nodeValue = node.getNodeValue ();
-		valueItem.setText ("Node Value: " + nodeValue);
-		if (node != null) {
-			valueItem.setData (node);
-			Color red = parentItem.getDisplay ().getSystemColor (SWT.COLOR_RED);
-			valueItem.setForeground (red);
-		}
-
-		String prefix = node.getPrefix ();
-		if (prefix != null && prefix.length () > 0) {
-			new TreeItem (parentItem, SWT.NONE).setText ("Prefix: " + prefix);			
-		}
-		String namespaceURI = node.getNamespaceURI ();
-		if (namespaceURI != null && namespaceURI.length () > 0) {
-			new TreeItem (parentItem, SWT.NONE).setText ("Namespace URI: " + namespaceURI);			
-		}
-
-		nsIDOMNamedNodeMap attributes = node.getAttributes ();
-		if (attributes != null) {
-			int count = (int)attributes.getLength ();
-			if (count > 0) {
-				for (int i = 0; i < count; i++) {
-					TreeItem attributeItem = new TreeItem (parentItem, SWT.NONE);
-					nsIDOMNode child = attributes.item (i);
-					attributeItem.setText ("Attribute " + i + " (" + child.getNodeName () + ")");
-					populate (attributeItem, child);
-				}
-			}
-		}
-		String typeString;
-		switch (node.getNodeType ()) {
-			case 1: typeString = "ELEMENT_NODE"; break;
-			case 2: typeString = "ATTRIBUTE_NODE"; break;
-			case 3: typeString = "TEXT_NODE"; break;
-			case 4: typeString = "CDATA_SECTION_NODE"; break;
-			case 5: typeString = "ENTITY_REFERENCE_NODE"; break;
-			case 6: typeString = "ENTITY_NODE"; break;
-			case 7: typeString = "PROCESSING_INSTRUCTION_NODE"; break;
-			case 8: typeString = "COMMENT_NODE"; break;
-			case 9: typeString = "DOCUMENT_NODE"; break;
-			case 10: typeString = "DOCUMENT_TYPE_NODE"; break;
-			case 11: typeString = "DOCUMENT_FRAGMENT_NODE"; break;
-			case 12: typeString = "NOTATION_NODE"; break;
-			default: typeString = "unknown?!?";
-		}
-		new TreeItem (parentItem, SWT.NONE).setText ("Type: " + typeString);
-
-		nsIDOMNodeList children = node.getChildNodes ();
-		int count = (int)children.getLength ();
-		if (count > 0) {
-			for (int i = 0; i < count; i++) {
-				TreeItem childItem = new TreeItem (parentItem, SWT.NONE);
-				nsIDOMNode child = children.item (i);
-				childItem.setText ("Child " + i + " (" + child.getNodeName () + ")");
-				populate (childItem, child);
-			}
-		}
-	}
-}
-
-}
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet329.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet329.java
deleted file mode 100644
index 3fd275c..0000000
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet329.java
+++ /dev/null
@@ -1,91 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.swt.snippets;
-
-/*
- * Browser example snippet: Zoom HTML page content in a Mozilla Browser
- * (note that XULRunner 1.9 or newer is required).
- * 
- * IMPORTANT: For this snippet to work properly all of the requirements
- * for using JavaXPCOM in a stand-alone application must be satisfied
- * (see http://www.eclipse.org/swt/faq.php#howusejavaxpcom).
- * 
- * For a list of all SWT example snippets see
- * http://www.eclipse.org/swt/snippets/
- * 
- * @since 3.3
- */
-import org.eclipse.swt.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.browser.*;
-import org.eclipse.swt.layout.*;
-import org.mozilla.interfaces.*;
-
-public class Snippet329 {
-	static int zoom = 10;
-	static Browser browser;
-
-public static void main(String [] args) {
-	Display display = new Display();
-	Shell shell = new Shell(display);
-	shell.setLayout(new GridLayout(2, true));
-
-	try {
-		browser = new Browser(shell, SWT.MOZILLA);
-	} catch (SWTError e) {
-		System.out.println("Could not instantiate Browser: " + e.getMessage());
-		display.dispose();
-		return;
-	}
-	GridData data = new GridData();
-	data.heightHint = data.widthHint = 400;
-	data.horizontalSpan = 2;
-	browser.setLayoutData(data);
-
-	Button zoomIn = new Button(shell, SWT.PUSH);
-	zoomIn.setText("Zoom In");
-	zoomIn.addListener(SWT.Selection, new Listener() {
-		@Override
-		public void handleEvent(Event event) {
-			setZoom(++zoom);
-		}
-	});
-	Button zoomOut = new Button(shell, SWT.PUSH);
-	zoomOut.setText("Zoom Out");
-	zoomOut.addListener(SWT.Selection, new Listener() {
-		@Override
-		public void handleEvent(Event event) {
-			if (zoom > 1) {
-				setZoom(--zoom);
-			}
-		}
-	});
-
-	shell.pack();
-	shell.open();
-	browser.setUrl("http://www.eclipse.org");
-	while (!shell.isDisposed()) {
-		if (!display.readAndDispatch()) display.sleep();
-	}
-	display.dispose();
-}
-static void setZoom(int zoom) {
-	nsIWebBrowser webBrowser = (nsIWebBrowser)browser.getWebBrowser();
-	nsIInterfaceRequestor req = (nsIInterfaceRequestor)webBrowser.queryInterface(nsIInterfaceRequestor.NS_IINTERFACEREQUESTOR_IID);
-	nsIDocShell docShell = (nsIDocShell)req.getInterface(nsIDocShell.NS_IDOCSHELL_IID);
-	nsIContentViewer contentView = docShell.getContentViewer();
-	nsIMarkupDocumentViewer docView = (nsIMarkupDocumentViewer)contentView.queryInterface(nsIMarkupDocumentViewer.NS_IMARKUPDOCUMENTVIEWER_IID);
-	float value = zoom / 10f;
-	System.out.println("zoom: " + value);
-	docView.setFullZoom(value);
-}
-
-}
\ No newline at end of file
