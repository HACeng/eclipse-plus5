commit 0ead8be29873762000bc22441e27f1da65f26fff
Author: Lars Vogel <Lars.Vogel@vogella.com>
Date:   Fri Sep 30 13:07:46 2016 +0200

    Bug 502845 - Update SWT snippets to use the SelectionListener lambda
    helper methods
    
    Converts all snippets below Snippets 200.
    
    Change-Id: I3a6cb7e2b1bbb6de311c9ae8a927e196f631f58b
    Signed-off-by: Lars Vogel <Lars.Vogel@vogella.com>

7	15	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet108.java
5	13	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet116.java
19	16	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet122.java
6	6	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet130.java
12	38	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java
47	32	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet140.java
6	13	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet147.java
6	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet162.java
9	11	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java
16	18	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet182.java
12	12	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet190.java
7	8	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet39.java
14	13	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet4.java
8	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet80.java
13	10	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet88.java
16	15	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet89.java
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet108.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet108.java
index 9b40ebc..0ecd874e 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet108.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet108.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,10 +17,11 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
+import org.eclipse.swt.widgets.*;
 
 public class Snippet108 {
 
@@ -32,20 +34,10 @@ public static void main (String [] args) {
 	text.setLayoutData (new RowData (100, SWT.DEFAULT));
 	Button ok = new Button (shell, SWT.PUSH);
 	ok.setText ("OK");
-	ok.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			System.out.println("OK");
-		}
-	});
+	ok.addSelectionListener(widgetSelectedAdapter(e -> System.out.println("OK")));
 	Button cancel = new Button (shell, SWT.PUSH);
 	cancel.setText ("Cancel");
-	cancel.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			System.out.println("Cancel");
-		}
-	});
+	cancel.addSelectionListener(widgetSelectedAdapter(e -> System.out.println("Cancel")));
 	shell.setDefaultButton (cancel);
 	shell.setLayout (new RowLayout ());
 	shell.pack ();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet116.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet116.java
index f410c54..ea26593 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet116.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet116.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,8 +17,9 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -29,12 +31,7 @@ public static void main(String[] args) {
 	Text text = new Text(shell, SWT.SINGLE | SWT.BORDER);
 	text.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 	text.setText("Here is some text");
-	text.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetDefaultSelected(SelectionEvent e) {
-			System.out.println("Text default selected (overrides default button)");
-		}
-	});
+	text.addSelectionListener(widgetDefaultSelectedAdapter(e-> System.out.println("Text default selected (overrides default button)")));
 	text.addTraverseListener(e -> {
 		if (e.detail == SWT.TRAVERSE_RETURN) {
 			e.doit = false;
@@ -43,12 +40,7 @@ public static void main(String[] args) {
 	});
 	Button button = new Button(shell, SWT.PUSH);
 	button.setText("Ok");
-	button.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			System.out.println("Button selected");
-		}
-	});
+	button.addSelectionListener(widgetSelectedAdapter(e-> System.out.println("Button selected")));
 	shell.setDefaultButton(button);
 	shell.pack();
 	shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet122.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet122.java
index 3f3a5e5..6740353 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet122.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet122.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -18,6 +19,9 @@ package org.eclipse.swt.snippets;
  * 
  * @since 3.0
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.events.*;
@@ -35,25 +39,24 @@ public static void main(String[] args) {
 	Menu menu = new Menu(shell, SWT.POP_UP);
 	final MenuItem copyItem = new MenuItem(menu, SWT.PUSH);
 	copyItem.setText("Copy");
-	copyItem.addSelectionListener(new SelectionAdapter(){
-		@Override
-		public void widgetSelected(SelectionEvent e) {
+	copyItem.addSelectionListener(widgetSelectedAdapter(e -> {
 			String selection = text.getSelectionText();
-			if (selection.length() == 0) return;
-			Object[] data = new Object[]{selection};
-			Transfer[] types = new Transfer[] {TextTransfer.getInstance()};
+			if (selection.length() == 0) {
+				return;
+			}
+			Object[] data = new Object[] { selection };
+			Transfer[] types = new Transfer[] { TextTransfer.getInstance() };
 			cb.setContents(data, types);
-		}
-	});
+		}));
+
 	final MenuItem pasteItem = new MenuItem(menu, SWT.PUSH);
 	pasteItem.setText ("Paste");
-	pasteItem.addSelectionListener(new SelectionAdapter(){
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			String string = (String)(cb.getContents(TextTransfer.getInstance()));
-			if (string != null) text.insert(string);
-		}
-	});
+	pasteItem.addSelectionListener(widgetSelectedAdapter(e -> {
+			String string = (String) (cb.getContents(TextTransfer.getInstance()));
+			if (string != null) {
+				text.insert(string);
+			}
+		}));
 	menu.addMenuListener(new MenuAdapter() {
 		@Override
 		public void menuShown(MenuEvent e) {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet130.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet130.java
index c80b0fa..aff9232 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet130.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet130.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,9 +17,11 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.custom.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -33,9 +36,7 @@ public class Snippet130 {
 		final int[] nextId = new int[1];
 		Button b = new Button(shell, SWT.PUSH);
 		b.setText("invoke long running job");
-		b.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
+		b.addSelectionListener(widgetSelectedAdapter(e-> {
 				Runnable longJob = new Runnable() {
 					boolean done = false;
 					int id;
@@ -67,8 +68,7 @@ public class Snippet130 {
 					}
 				};
 				BusyIndicator.showWhile(display, longJob);
-			}
-		});
+			}));
 		shell.setSize(250, 150);
 		shell.open();
 		while (!shell.isDisposed()) {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java
index 6b9e60d..9902be4 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2015 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,19 +7,23 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
   
+
 /*
  * Printing example snippet: print text to printer, with word wrap and pagination
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import java.io.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.graphics.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.printing.*;
@@ -66,54 +70,24 @@ public class Snippet133 {
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("&Open...");
 		item.setAccelerator(SWT.CTRL + 'O');
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				menuOpen();
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e-> menuOpen()));
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("Font...");
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				menuFont();
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e-> menuFont()));
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("Foreground Color...");
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				menuForegroundColor();
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e-> menuForegroundColor()));
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("Background Color...");
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				menuBackgroundColor();
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e-> menuBackgroundColor()));
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("&Print...");
 		item.setAccelerator(SWT.CTRL + 'P');
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				menuPrint();
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e-> menuPrint()));
 		new MenuItem(fileMenu, SWT.SEPARATOR);
 		item = new MenuItem(fileMenu, SWT.PUSH);
 		item.setText("E&xit");
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent event) {
-				System.exit(0);
-			}
-		});
+		item.addSelectionListener(widgetSelectedAdapter(e->	System.exit(0)));
 
 		shell.open();
 		while (!shell.isDisposed()) {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet140.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet140.java
index 3df490d..fef64dc 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet140.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet140.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,20 +7,24 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
   
+
 /*
  * CoolBar example snippet: drop-down a chevron menu containing hidden tool items
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.graphics.*;
 import org.eclipse.swt.layout.*;
+import org.eclipse.swt.widgets.*;
 
 public class Snippet140 {
 	static Display display;
@@ -51,50 +55,61 @@ public static void main (String [] args) {
 	coolItem.setMinimumSize(minWidth, coolSize.y);
 	coolItem.setPreferredSize(coolSize);
 	coolItem.setSize(coolSize);
-	coolItem.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent event) {
+	coolItem.addSelectionListener(widgetSelectedAdapter(event -> {
 			if (event.detail == SWT.ARROW) {
 				CoolItem item = (CoolItem) event.widget;
-				Rectangle itemBounds = item.getBounds ();
+				Rectangle itemBounds = item.getBounds();
 				Point pt = coolBar.toDisplay(new Point(itemBounds.x, itemBounds.y));
 				itemBounds.x = pt.x;
 				itemBounds.y = pt.y;
-				ToolBar bar = (ToolBar) item.getControl ();
-				ToolItem[] tools = bar.getItems ();
-				
+				ToolBar bar = (ToolBar) item.getControl();
+				ToolItem[] tools = bar.getItems();
+
 				int i = 0;
 				while (i < tools.length) {
-					Rectangle toolBounds = tools[i].getBounds ();
+					Rectangle toolBounds = tools[i].getBounds();
 					pt = bar.toDisplay(new Point(toolBounds.x, toolBounds.y));
 					toolBounds.x = pt.x;
 					toolBounds.y = pt.y;
-					
-					/* Figure out the visible portion of the tool by looking at the
-					 * intersection of the tool bounds with the cool item bounds. */
-			  		Rectangle intersection = itemBounds.intersection (toolBounds);
-			  		
-					/* If the tool is not completely within the cool item bounds, then it
-					 * is partially hidden, and all remaining tools are completely hidden. */
-			  		if (!intersection.equals (toolBounds)) break;
-			  		i++;
+
+					/*
+					 * Figure out the visible portion of the tool by looking at
+					 * the intersection of the tool bounds with the cool item
+					 * bounds.
+					 */
+					Rectangle intersection = itemBounds.intersection(toolBounds);
+
+					/*
+					 * If the tool is not completely within the cool item
+					 * bounds, then it is partially hidden, and all remaining
+					 * tools are completely hidden.
+					 */
+					if (!intersection.equals(toolBounds))
+						break;
+					i++;
 				}
-				
-				/* Create a menu with items for each of the completely hidden buttons. */
-				if (chevronMenu != null) chevronMenu.dispose();
-				chevronMenu = new Menu (coolBar);
+
+				/*
+				 * Create a menu with items for each of the completely hidden
+				 * buttons.
+				 */
+				if (chevronMenu != null)
+					chevronMenu.dispose();
+				chevronMenu = new Menu(coolBar);
 				for (int j = i; j < tools.length; j++) {
-					MenuItem menuItem = new MenuItem (chevronMenu, SWT.PUSH);
-					menuItem.setText (tools[j].getText());
+					MenuItem menuItem = new MenuItem(chevronMenu, SWT.PUSH);
+					menuItem.setText(tools[j].getText());
 				}
-				
-				/* Drop down the menu below the chevron, with the left edges aligned. */
+
+				/*
+				 * Drop down the menu below the chevron, with the left edges
+				 * aligned.
+				 */
 				pt = coolBar.toDisplay(new Point(event.x, event.y));
-				chevronMenu.setLocation (pt.x, pt.y);
-				chevronMenu.setVisible (true);
+				chevronMenu.setLocation(pt.x, pt.y);
+				chevronMenu.setVisible(true);
 			}
-		}
-	});
+		}));
 
 	shell.pack();
 	shell.open ();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet147.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet147.java
index fbeca0e..0b83acf 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet147.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet147.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,8 +17,10 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -29,12 +32,7 @@ public static void main(String[] args) {
 	Combo combo = new Combo(shell, SWT.NONE);
 	combo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 	combo.setText("Here is some text");
-	combo.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetDefaultSelected(SelectionEvent e) {
-			System.out.println("Combo default selected (overrides default button)");
-		}
-	});
+	combo.addSelectionListener(widgetDefaultSelectedAdapter(e -> System.out.println("Combo default selected (overrides default button)")));
 	combo.addTraverseListener(e -> {
 		if (e.detail == SWT.TRAVERSE_RETURN) {
 			e.doit = false;
@@ -43,12 +41,7 @@ public static void main(String[] args) {
 	});
 	Button button = new Button(shell, SWT.PUSH);
 	button.setText("Ok");
-	button.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			System.out.println("Button selected");
-		}
-	});
+	button.addSelectionListener(widgetSelectedAdapter(e -> System.out.println("Button selected")));
 	shell.setDefaultButton(button);
 	shell.pack();
 	shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet162.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet162.java
index dc5c4e2..57d918f 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet162.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet162.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,10 +17,11 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.accessibility.*;
-import org.eclipse.swt.events.SelectionAdapter;
-import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.graphics.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
@@ -42,13 +44,10 @@ public static void main (String [] args) {
 		item.setText (ITEM_NAMES[i]);
 		item.setImage (i % 2 == 0 ? checkedImage : uncheckedImage);
 	}
-	table.addSelectionListener(new SelectionAdapter(){
-		@Override
-		public void widgetDefaultSelected(SelectionEvent e) {
+	table.addSelectionListener(widgetDefaultSelectedAdapter(e -> {
 			TableItem item = (TableItem)e.item;
 			item.setImage(item.getImage() == checkedImage ? uncheckedImage : checkedImage);
-		}
-	});
+		}));
 
 	table.getAccessible ().addAccessibleControlListener (new AccessibleControlAdapter () {
 		@Override
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java
index d158651..b3c0f47 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,11 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * Create two ScrolledComposites that scroll in tandem.
  *
@@ -17,6 +19,8 @@ package org.eclipse.swt.snippets;
  * http://www.eclipse.org/swt/snippets/
  */
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.custom.*;
 import org.eclipse.swt.events.*;
@@ -46,22 +50,16 @@ public static void main (String [] args) {
 	final ScrollBar vBar2 = sc2.getVerticalBar ();
 	final ScrollBar hBar1 = sc1.getHorizontalBar ();
 	final ScrollBar hBar2 = sc2.getHorizontalBar ();
-	SelectionListener listener1 = new SelectionAdapter () {
-		@Override
-		public void widgetSelected (SelectionEvent e) {
+	SelectionListener listener1 = widgetSelectedAdapter(e -> {
 			int x =  hBar1.getSelection() * (hBar2.getMaximum() - hBar2.getThumb()) / Math.max(1, hBar1.getMaximum() - hBar1.getThumb());
 			int y =  vBar1.getSelection() * (vBar2.getMaximum() - vBar2.getThumb()) / Math.max(1, vBar1.getMaximum() - vBar1.getThumb());
 			sc2.setOrigin (x, y);
-		}
-	};
-	SelectionListener listener2 = new SelectionAdapter () {
-		@Override
-		public void widgetSelected (SelectionEvent e) {
+		});
+	SelectionListener listener2 = widgetSelectedAdapter(e -> {
 			int x =  hBar2.getSelection() * (hBar1.getMaximum() - hBar1.getThumb()) / Math.max(1, hBar2.getMaximum() - hBar2.getThumb());
 			int y =  vBar2.getSelection() * (vBar1.getMaximum() - vBar1.getThumb()) / Math.max(1, vBar2.getMaximum() - vBar2.getThumb());
 			sc1.setOrigin (x, y);
-		}
-	};
+		});
 	vBar1.addSelectionListener (listener1);
 	hBar1.addSelectionListener (listener1);
 	vBar2.addSelectionListener (listener2);
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet182.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet182.java
index 1733660..b67d6c6 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet182.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet182.java
@@ -7,9 +7,11 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * Link example snippet: create a link widget and 
  * provide buttons to set the link color.
@@ -19,8 +21,10 @@ package org.eclipse.swt.snippets;
  * 
  * @since 3.1
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.graphics.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
@@ -37,26 +41,20 @@ public class Snippet182 {
 		
 		Button setButton = new Button(shell, SWT.PUSH);
 		setButton.setText("Choose link color");
-		setButton.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				System.out.println("default link color " + link.getLinkForeground());
-				ColorDialog colorDialog = new ColorDialog(shell);
-				RGB color = colorDialog.open();
-				link.setLinkForeground(new Color(display, color));
-				System.out.println("user selected link color " + link.getLinkForeground());
-			}
-		});
+		setButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			System.out.println("default link color " + link.getLinkForeground());
+			ColorDialog colorDialog = new ColorDialog(shell);
+			RGB color = colorDialog.open();
+			link.setLinkForeground(new Color(display, color));
+			System.out.println("user selected link color " + link.getLinkForeground());
+		}));
 		
 		Button resetButton = new Button(shell, SWT.PUSH);
 		resetButton.setText("Reset link color");
-		resetButton.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				System.out.println("link color reset to system default");
-				link.setLinkForeground(null);
-			}
-		});
+		resetButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			System.out.println("link color reset to system default");
+			link.setLinkForeground(null);
+		}));
 		
 		shell.pack ();
 		shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet190.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet190.java
index 81d9778..15a7364 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet190.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet190.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,14 +7,10 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
-import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
-import org.eclipse.swt.layout.*;
-import org.eclipse.swt.widgets.*;
-
 /*
  * Floating point values in Spinner
  * 
@@ -24,6 +20,13 @@ import org.eclipse.swt.widgets.*;
  * @since 3.1
  */
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
+import org.eclipse.swt.*;
+import org.eclipse.swt.layout.*;
+import org.eclipse.swt.widgets.*;
+
+
 public class Snippet190 {
 	
 public static void main (String [] args) {
@@ -42,14 +45,11 @@ public static void main (String [] args) {
 	spinner.setIncrement(10);
 	// set the seletion to 3.456
 	spinner.setSelection(3456);
-	spinner.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
+	spinner.addSelectionListener(widgetSelectedAdapter(e -> {
 			int selection = spinner.getSelection();
 			int digits = spinner.getDigits();
-			System.out.println("Selection is "+(selection / Math.pow(10, digits)));
-		}
-	});
+			System.out.println("Selection is " + (selection / Math.pow(10, digits)));
+		}));
 	shell.setSize(200, 200);
 	shell.open();
 	while (!shell.isDisposed ()) {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet39.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet39.java
index 046c3df..28dcd87 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet39.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet39.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,18 +7,22 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * CCombo example snippet: create a CCombo (read-only, flat)
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.custom.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -35,12 +39,7 @@ public class Snippet39 {
 		}
 		combo.setText("item0");
 
-		combo.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				System.out.println("Item selected");
-			}
-		});
+		combo.addSelectionListener(widgetSelectedAdapter(e -> System.out.println("Item selected")));
 
 		shell.pack();
 		shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet4.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet4.java
index 084a394..18ab5d8 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet4.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet4.java
@@ -7,17 +7,21 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * Shell example snippet: prevent escape from closing a dialog
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.graphics.*;
 import org.eclipse.swt.widgets.*;
 
@@ -31,18 +35,15 @@ public class Snippet4 {
 		b.pack();
 		Rectangle clientArea = shell.getClientArea();
 		b.setLocation(clientArea.x + 10, clientArea.y + 10);
-		b.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent se) {
-				Shell dialog = new Shell(shell, SWT.DIALOG_TRIM);
-				dialog.addListener(SWT.Traverse, e -> {
-					if (e.detail == SWT.TRAVERSE_ESCAPE) {
-						e.doit = false;
-					}
-				});
-				dialog.open();
-			}
-		});
+		b.addSelectionListener(widgetSelectedAdapter(e -> {
+			Shell dialog = new Shell(shell, SWT.DIALOG_TRIM);
+			dialog.addListener(SWT.Traverse, t -> {
+				if (t.detail == SWT.TRAVERSE_ESCAPE) {
+					t.doit = false;
+				}
+			});
+			dialog.open();
+		}));
 		shell.open();
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch())
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet80.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet80.java
index df31984..e7ba8d8 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet80.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet80.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,17 +7,21 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * Tree example snippet: limit selection to items that match a pattern
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -41,9 +45,7 @@ public static void main(String[] args) {
 		}
 	}
 	
-	tree.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
+	tree.addSelectionListener(widgetSelectedAdapter(e -> {
 			TreeItem[] selection = tree.getSelection();
 			TreeItem[] revisedSelection = new TreeItem[0];
 			for (int i = 0; i < selection.length; i++) {
@@ -56,8 +58,7 @@ public static void main(String[] args) {
 				}
 			}
 			tree.setSelection(revisedSelection);
-		}
-	});
+		}));
 
 	shell.setSize(300, 300);
 	shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet88.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet88.java
index 277b019..420c12e 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet88.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet88.java
@@ -7,18 +7,22 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+
 /*
  * TableEditor example snippet: edit the text of a table item (in place)
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.custom.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -47,29 +51,28 @@ public static void main(String[] args) {
 	// editing the second column
 	final int EDITABLECOLUMN = 1;
 
-	table.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
+	table.addSelectionListener(widgetSelectedAdapter(e -> {
 			// Clean up any previous editor control
 			Control oldEditor = editor.getEditor();
-			if (oldEditor != null) oldEditor.dispose();
+			if (oldEditor != null)
+				oldEditor.dispose();
 
 			// Identify the selected row
-			TableItem item = (TableItem)e.item;
-			if (item == null) return;
+			TableItem item = (TableItem) e.item;
+			if (item == null)
+				return;
 
 			// The control that will be the editor must be a child of the Table
 			Text newEditor = new Text(table, SWT.NONE);
 			newEditor.setText(item.getText(EDITABLECOLUMN));
 			newEditor.addModifyListener(me -> {
-				Text text = (Text)editor.getEditor();
+				Text text = (Text) editor.getEditor();
 				editor.getItem().setText(EDITABLECOLUMN, text.getText());
 			});
 			newEditor.selectAll();
 			newEditor.setFocus();
 			editor.setEditor(newEditor, item, EDITABLECOLUMN);
-		}
-	});
+		}));
 	shell.setSize(300, 300);
 	shell.open();
 
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet89.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet89.java
index 12a1e12..35c0a42 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet89.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet89.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,39 +7,40 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
  
+
 /*
  * Menu example snippet: create a menu with radio items
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.widgets.*;
-import org.eclipse.swt.events.*;
 
 public class Snippet89 {
 public static void main (String [] args) {
 	Display display = new Display ();
 	Shell shell = new Shell (display);
 	Menu menu = new Menu (shell, SWT.POP_UP);
-	for (int i=0; i<4; i++) {
-		MenuItem item = new MenuItem (menu, SWT.RADIO);
-		item.setText ("Item " + i);
-		item.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				MenuItem item = (MenuItem)e.widget;
-				if (item.getSelection ()) {
-					System.out.println (item + " selected");
+	for (int i = 0; i < 4; i++) {
+			MenuItem item = new MenuItem(menu, SWT.RADIO);
+			item.setText("Item " + i);
+			item.addSelectionListener(widgetSelectedAdapter(e -> {
+				MenuItem menuItem = (MenuItem) e.widget;
+				if (menuItem.getSelection()) {
+					System.out.println(menuItem + " selected");
 				} else {
-					System.out.println (item + " unselected");
+					System.out.println(menuItem + " unselected");
 				}
-			}
-		});
-	}
+			}));
+		}
 	shell.setMenu (menu);
 	shell.setSize (300, 300);
 	shell.open ();
commit ce80d9427473d20677f747ab95d186ddb6cc95e4
Author: Lars Vogel <Lars.Vogel@vogella.com>
Date:   Wed Oct 12 21:21:49 2016 +0200

    Bug 502845 - Update SWT snippets to use the SelectionListener lambda
    helper methods
    
    Converts all relevant snippets below Snippets 300.
    
    Change-Id: I7c54c8627e7e33db63e9da93a9fc43008e75f3a1
    Signed-off-by: Lars Vogel <Lars.Vogel@vogella.com>

6	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet247.java
7	14	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet250.java
9	10	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java
10	11	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet258.java
5	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
7	13	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
5	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
5	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
6	13	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
6	5	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet247.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet247.java
index 9f94fed..c68fd7c 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet247.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet247.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,8 +17,10 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -38,12 +41,8 @@ public static void main (String [] args) {
 	Button button = new Button (shell, SWT.PUSH);
 	button.pack();
 	button.setText("OK");
-	button.addSelectionListener(new SelectionAdapter () {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
-			System.out.println("OK selected");
-		}
-	});
+	button.addSelectionListener(widgetSelectedAdapter(e->System.out.println("OK selected")));
+
 	shell.setDefaultButton(button);
 	shell.pack ();
 	shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet250.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet250.java
index 1fdca4a..3ca3f3c 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet250.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet250.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,8 +17,10 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -29,20 +32,10 @@ public static void main (String [] args) {
 	shell.setLayout (new RowLayout ());
 
 	DateTime calendar = new DateTime (shell, SWT.CALENDAR);
-	calendar.addSelectionListener (new SelectionAdapter () {
-		@Override
-		public void widgetSelected (SelectionEvent e) {
-			System.out.println ("calendar date changed");
-		}
-	});
+	calendar.addSelectionListener (widgetSelectedAdapter(e -> System.out.println ("calendar date changed")));
 
 	DateTime time = new DateTime (shell, SWT.TIME);
-	time.addSelectionListener (new SelectionAdapter () {
-		@Override
-		public void widgetSelected (SelectionEvent e) {
-			System.out.println ("time changed");
-		}
-	});
+	time.addSelectionListener (widgetSelectedAdapter(e -> System.out.println ("time changed")));
 
 	shell.pack ();
 	shell.open ();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java
index 4a9f146..e48d52b 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet251.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+ * Copyright (c) 2000, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,8 +17,10 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.widgets.*;
 
@@ -30,9 +33,7 @@ public static void main (String [] args) {
 
 	Button open = new Button (shell, SWT.PUSH);
 	open.setText ("Open Dialog");
-	open.addSelectionListener (new SelectionAdapter () {
-		@Override
-		public void widgetSelected (SelectionEvent e) {
+	open.addSelectionListener (widgetSelectedAdapter(e-> {
 			final Shell dialog = new Shell (shell, SWT.DIALOG_TRIM);
 			dialog.setLayout (new GridLayout (3, false));
 
@@ -45,20 +46,18 @@ public static void main (String [] args) {
 			Button ok = new Button (dialog, SWT.PUSH);
 			ok.setText ("OK");
 			ok.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false));
-			ok.addSelectionListener (new SelectionAdapter () {
-				@Override
-				public void widgetSelected (SelectionEvent e) {
+			ok.addSelectionListener (widgetSelectedAdapter(event -> {
 					System.out.println ("Calendar date selected (MM/DD/YYYY) = " + (calendar.getMonth () + 1) + "/" + calendar.getDay () + "/" + calendar.getYear ());
 					System.out.println ("Date selected (MM/YYYY) = " + (date.getMonth () + 1) + "/" + date.getYear ());
 					System.out.println ("Time selected (HH:MM) = " + time.getHours () + ":" + (time.getMinutes () < 10 ? "0" : "") + time.getMinutes ());
 					dialog.close ();
 				}
-			});
+			));
 			dialog.setDefaultButton (ok);
 			dialog.pack ();
 			dialog.open ();
 		}
-	});
+	));
 	shell.pack ();
 	shell.open ();
 	
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet258.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet258.java
index 399b7b0..c7d865b 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet258.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet258.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -18,11 +19,13 @@ package org.eclipse.swt.snippets;
  * 
  * @since 3.3
  */ 
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.graphics.*;
-import org.eclipse.swt.widgets.*;
 import org.eclipse.swt.layout.*;
-import org.eclipse.swt.events.*;
+import org.eclipse.swt.widgets.*;
 
 public class Snippet258 {
 	public static void main(String[] args) {
@@ -37,26 +40,22 @@ public class Snippet258 {
 			ToolBar toolBar = new ToolBar (shell, SWT.FLAT);
 			ToolItem item = new ToolItem (toolBar, SWT.PUSH);
 			item.setImage (image);
-			item.addSelectionListener(new SelectionAdapter() {
-				@Override
-				public void widgetSelected(SelectionEvent e) {
+			item.addSelectionListener(widgetSelectedAdapter(e ->  {
 					text.setText("");
 					System.out.println("Search cancelled");
 				}
-			});
+			));
 		}
 		text.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 		text.setText("Search text");
-		text.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetDefaultSelected(SelectionEvent e) {
+		text.addSelectionListener(widgetSelectedAdapter(e ->  {
 				if (e.detail == SWT.CANCEL) {
 					System.out.println("Search cancelled");
 				} else {
 					System.out.println("Searching for: " + text.getText() + "...");
 				}
 			}
-		});
+		));
 
 		shell.pack();
 		shell.open();
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
index 3d7ad4b..f5ba695 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
@@ -59,12 +62,7 @@ public class Snippet261 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				shell.dispose();
-			}
-		});
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
index b9b7844..51a50bd 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import java.io.*;
 
 import org.eclipse.swt.*;
@@ -69,20 +72,11 @@ public class Snippet262 {
 
 		MenuItem menuFileOpen = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileOpen.setText("Open...");
-		menuFileOpen.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				fileOpen();
-			}
-		});
+		menuFileOpen.addSelectionListener(widgetSelectedAdapter( e-> fileOpen());
+
 		MenuItem menuFileExit = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileExit.setText("Exit");
-		menuFileExit.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				shell.dispose();
-			}
-		});
+		menuFileExit.addSelectionListener(widgetSelectedAdapter( e-> shell.dispose()));
 	}
 
 	static void fileOpen() {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
index 30629ed..79b8167 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
@@ -61,12 +64,7 @@ public class Snippet263 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				shell.dispose();
-			}
-		});
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
\ No newline at end of file
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
index 41f41ea..d00e765 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
@@ -61,12 +64,7 @@ public class Snippet264 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				shell.dispose();
-			}
-		});
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
\ No newline at end of file
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
index 0e8a497..81222a0 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2013 IBM Corporation and others.
+ * Copyright (c) 2007, 2016 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -7,9 +7,12 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
@@ -66,20 +69,10 @@ public class Snippet265 {
 
 		MenuItem menuFileOpen = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileOpen.setText("Open...");
-		menuFileOpen.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				fileOpen();
-			}
-		});
+		menuFileOpen.addSelectionListener(widgetSelectedAdapter(e-> fileOpen()));
 		MenuItem menuFileExit = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileExit.setText("Exit");
-		menuFileExit.addSelectionListener(new SelectionAdapter() {
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				shell.dispose();
-			}
-		});
+		menuFileExit.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()))
 	}
 
 	static void fileOpen() {
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java
index 7db8ae4..c6280b0 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet296.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 502845
  *******************************************************************************/
 package org.eclipse.swt.snippets;
 
@@ -16,6 +17,9 @@ package org.eclipse.swt.snippets;
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
  */
+
+import static org.eclipse.swt.events.SelectionListener.*;
+
 import org.eclipse.swt.*;
 import org.eclipse.swt.custom.*;
 import org.eclipse.swt.events.*;
@@ -61,9 +65,7 @@ public static void main (String[] args) {
 	 * The following listener ensures that a newly-selected item
 	 * in the Tree is always visible.
 	 */
-	tree.addSelectionListener(new SelectionAdapter() {
-		@Override
-		public void widgetSelected(SelectionEvent e) {
+	tree.addSelectionListener(widgetSelectedAdapter(e->  {
 			TreeItem [] selectedItems = tree.getSelection();
 			if (selectedItems.length > 0) {
 				Rectangle itemRect = selectedItems[0].getBounds();
@@ -75,8 +77,7 @@ public static void main (String[] args) {
 					sc.setOrigin(itemRect.x, itemRect.y);
 				}
 			}
-		}
-	});
+		}));
 	/*
 	 * The following listener scrolls the Tree one item at a time
 	 * in response to MouseWheel events.
commit 0d371d70b9968adc46da51453a451487f5b00519
Author: Alexander Kurtakov <akurtako@redhat.com>
Date:   Wed Oct 19 20:27:51 2016 +0300

    Bug 502845 - Update SWT snippets to use the SelectionListener lambda
    helper methods
    
    Fix OLE snippets compilation errors.
    
    Change-Id: I7bcb4e7b851ccc8553b943597dc1baf995a63dcd
    Signed-off-by: Alexander Kurtakov <akurtako@redhat.com>

5	6	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
6	7	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
5	6	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
5	6	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
3	4	examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
index f5ba695..7da0cc6 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet261.java
@@ -14,7 +14,6 @@ package org.eclipse.swt.snippets;
 import static org.eclipse.swt.events.SelectionListener.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.ole.win32.*;
 import org.eclipse.swt.widgets.*;
@@ -24,9 +23,9 @@ import org.eclipse.swt.widgets.*;
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
- * 
+ *
  * @since 3.3
- */ 
+ */
 public class Snippet261 {
 	public static void main(String[] args) {
 		Display display = new Display();
@@ -44,14 +43,14 @@ public class Snippet261 {
 		}
 		shell.setSize(800, 600);
 		shell.open();
-		
+
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch())
 				display.sleep();
 		}
 		display.dispose();
 	}
-	
+
 	static void addFileMenu(OleFrame frame) {
 		final Shell shell = frame.getShell();
 		Menu menuBar = new Menu(shell, SWT.BAR);
@@ -62,7 +61,7 @@ public class Snippet261 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()));
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
index 51a50bd..422aaf7 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet262.java
@@ -16,7 +16,6 @@ import static org.eclipse.swt.events.SelectionListener.*;
 import java.io.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.ole.win32.*;
 import org.eclipse.swt.widgets.*;
@@ -26,13 +25,13 @@ import org.eclipse.swt.widgets.*;
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
- * 
+ *
  * @since 3.3
- */ 
+ */
 public class Snippet262 {
 	static OleClientSite clientSite;
 	static OleFrame frame;
-	
+
 	public static void main(String[] args) {
 		Display display = new Display();
 		final Shell shell = new Shell(display);
@@ -49,14 +48,14 @@ public class Snippet262 {
 		}
 		shell.setSize(800, 600);
 		shell.open();
-		
+
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch())
 				display.sleep();
 		}
 		display.dispose();
 	}
-	
+
 	static void addFileMenu(OleFrame frame) {
 		final Shell shell = frame.getShell();
 		Menu menuBar = shell.getMenuBar();
@@ -72,7 +71,7 @@ public class Snippet262 {
 
 		MenuItem menuFileOpen = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileOpen.setText("Open...");
-		menuFileOpen.addSelectionListener(widgetSelectedAdapter( e-> fileOpen());
+		menuFileOpen.addSelectionListener(widgetSelectedAdapter( e-> fileOpen()));
 
 		MenuItem menuFileExit = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileExit.setText("Exit");
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
index 79b8167..19e2b8f 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet263.java
@@ -14,7 +14,6 @@ package org.eclipse.swt.snippets;
 import static org.eclipse.swt.events.SelectionListener.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.ole.win32.*;
 import org.eclipse.swt.widgets.*;
@@ -24,9 +23,9 @@ import org.eclipse.swt.widgets.*;
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
- * 
+ *
  * @since 3.3
- */ 
+ */
 public class Snippet263 {
 	static OleClientSite clientSite;
 
@@ -46,14 +45,14 @@ public class Snippet263 {
 		}
 		shell.setSize(800, 600);
 		shell.open();
-		
+
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch())
 				display.sleep();
 		}
 		display.dispose();
 	}
-	
+
 	static void addFileMenu(OleFrame frame) {
 		final Shell shell = frame.getShell();
 		Menu menuBar = new Menu(shell, SWT.BAR);
@@ -64,7 +63,7 @@ public class Snippet263 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()));
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
\ No newline at end of file
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
index d00e765..c55a42a 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet264.java
@@ -14,7 +14,6 @@ package org.eclipse.swt.snippets;
 import static org.eclipse.swt.events.SelectionListener.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.ole.win32.*;
 import org.eclipse.swt.widgets.*;
@@ -24,9 +23,9 @@ import org.eclipse.swt.widgets.*;
  *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
- * 
+ *
  * @since 3.3
- */ 
+ */
 public class Snippet264 {
 	static OleClientSite clientSite;
 
@@ -46,14 +45,14 @@ public class Snippet264 {
 		}
 		shell.setSize(800, 600);
 		shell.open();
-		
+
 		while (!shell.isDisposed()) {
 			if (!display.readAndDispatch())
 				display.sleep();
 		}
 		display.dispose();
 	}
-	
+
 	static void addFileMenu(OleFrame frame) {
 		final Shell shell = frame.getShell();
 		Menu menuBar = new Menu(shell, SWT.BAR);
@@ -64,7 +63,7 @@ public class Snippet264 {
 		fileMenu.setMenu(menuFile);
 		MenuItem menuFileControl = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileControl.setText("Exit");
-		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose());
+		menuFileControl.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()));
 		frame.setFileMenus(new MenuItem[] { fileMenu });
 	}
 }
\ No newline at end of file
diff --git a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
index 81222a0..e4042e5 100644
--- a/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
+++ b/examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet265.java
@@ -14,17 +14,16 @@ package org.eclipse.swt.snippets;
 import static org.eclipse.swt.events.SelectionListener.*;
 
 import org.eclipse.swt.*;
-import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.*;
 import org.eclipse.swt.ole.win32.*;
 import org.eclipse.swt.widgets.*;
 
 /*
  * Open an OLE Windows Media Player.
- * 
+ *
  * For a list of all SWT example snippets see
  * http://www.eclipse.org/swt/snippets/
- * 
+ *
  * @since 3.3
  */
 public class Snippet265 {
@@ -72,7 +71,7 @@ public class Snippet265 {
 		menuFileOpen.addSelectionListener(widgetSelectedAdapter(e-> fileOpen()));
 		MenuItem menuFileExit = new MenuItem(menuFile, SWT.CASCADE);
 		menuFileExit.setText("Exit");
-		menuFileExit.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()))
+		menuFileExit.addSelectionListener(widgetSelectedAdapter(e-> shell.dispose()));
 	}
 
 	static void fileOpen() {
