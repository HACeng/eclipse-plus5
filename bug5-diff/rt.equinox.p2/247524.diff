commit c13a68e4b7750dbfcebf7daff6c8c92ac3f8940c
Author: John Arthorne <johna>
Date:   Sun Sep 28 00:27:58 2008 +0000

    Bug 247524 [ui] AddProfileOperation constructor doesn't use profile argument

2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
index 2a474a2..5e1de1e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
@@ -27,6 +27,8 @@ public class AddProfileOperation extends ProfileOperation {
 
 	public AddProfileOperation(String label, IProfile profile) {
 		super(label, new IProfile[0]);
+		this.profileId = profile.getProfileId();
+		this.profileProperties = profile.getProperties();
 	}
 
 	public AddProfileOperation(String label, String profileId, Map profileProperties) {
commit 2f31c83fdf8f9e680019cbcbb303ccdcfca85abb
Author: Susan Franklin <sfranklin>
Date:   Thu Oct 30 16:50:44 2008 +0000

    Bug 247524 - [ui] AddProfileOperation constructor doesn't use profile argument
    Bug 247532 - [ui] AddProfileOperation undo is broken
    Bug 247540 - [ui] RemoveProfileOperation shouldn't be undoable

0	89	bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/AddProfileOperationTest.java
5	57	bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/RemoveProfilesOperationTest.java
8	10	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
4	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
2	36	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
0	59	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileOperation.java
5	33	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveProfilesOperation.java
diff --git a/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/AddProfileOperationTest.java b/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/AddProfileOperationTest.java
index ca97e3d..b5179b0 100644
--- a/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/AddProfileOperationTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/AddProfileOperationTest.java
@@ -27,31 +27,6 @@ public class AddProfileOperationTest extends AbstractProvisioningTest {
 	public static final String TEST_PROP_VALUE = "TEST_PROP_VALUE";
 
 	/**
-	 * Tests attempting to add a profile that already exists.
-	 */
-	public void testAddExistingProfile() {
-		String profileId = "add-existing";
-		IProfile profile = createProfile(profileId, null, new HashMap());
-		profilesToRemove.add(profileId);
-		AddProfileOperation op = new AddProfileOperation("label", profile);
-
-		assertTrue("1.0", !op.canUndo());
-		assertTrue("1.1", op.canExecute());
-
-		try {
-			op.execute(getMonitor(), null);
-			fail("1.2");//should have failed
-		} catch (ExecutionException e) {
-			//failure expected
-		}
-
-		//it should not be possible to undo because it failed
-		assertTrue("2.0", !op.canUndo());
-		assertTrue("2.1", op.canExecute());
-		assertTrue("2.2", op.canRedo());
-	}
-
-	/**
 	 * Tests a simple profile addition that should succeed
 	 */
 	public void testAddSimple() {
@@ -61,9 +36,6 @@ public class AddProfileOperationTest extends AbstractProvisioningTest {
 		profilesToRemove.add(profileId);
 		AddProfileOperation op = new AddProfileOperation("label", profileId, properties);
 
-		assertTrue("1.0", !op.canUndo());
-		assertTrue("1.1", op.canExecute());
-
 		try {
 			IStatus result = op.execute(getMonitor(), null);
 			assertTrue("1.2", result.isOK());
@@ -71,11 +43,6 @@ public class AddProfileOperationTest extends AbstractProvisioningTest {
 			fail("0.99", e);
 		}
 
-		//it should be possible to undo
-		assertTrue("2.0", op.canUndo());
-		assertTrue("2.1", !op.canExecute());
-		assertTrue("2.2", !op.canRedo());
-
 		IProfile profile = null;
 		try {
 			profile = ProvisioningUtil.getProfile(profileId);
@@ -86,60 +53,4 @@ public class AddProfileOperationTest extends AbstractProvisioningTest {
 		assertNotNull("3.0", profile);
 		assertEquals("3.1", TEST_PROP_VALUE, profile.getProperty(TEST_PROP_KEY));
 	}
-
-	/**
-	 * Tests undoing a simple profile addition.
-	 * Commented out due to bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=247532.
-	 */
-	public void _testUndoRedo() {
-		String profileId = "simple-undo";
-		profilesToRemove.add(profileId);
-		HashMap properties = new HashMap();
-		properties.put(TEST_PROP_KEY, TEST_PROP_VALUE);
-		AddProfileOperation op = new AddProfileOperation("label", profileId, properties);
-
-		try {
-			op.execute(getMonitor(), null);
-		} catch (ExecutionException e) {
-			fail("0.99", e);
-		}
-
-		//now undo
-		try {
-			IStatus result = op.undo(getMonitor(), null);
-			assertTrue("1.0", result.isOK());
-		} catch (ExecutionException e1) {
-			fail("1.99", e1);
-		}
-
-		assertTrue("1.1", !op.canUndo());
-		assertTrue("1.2", op.canRedo());
-
-		IProfile profile = null;
-		try {
-			profile = ProvisioningUtil.getProfile(profileId);
-		} catch (ProvisionException e) {
-			fail("2.99", e);
-			return;
-		}
-		//profile should not exist
-		assertNull("2.0", profile);
-
-		//now redo the operation
-		try {
-			op.redo(getMonitor(), null);
-		} catch (ExecutionException e) {
-			fail("3.99", e);
-		}
-
-		//the profile should exist
-		try {
-			profile = ProvisioningUtil.getProfile(profileId);
-		} catch (ProvisionException e) {
-			fail("4.99", e);
-			return;
-		}
-		assertNotNull("4.0", profile);
-		assertEquals("4.1", TEST_PROP_VALUE, profile.getProperty(TEST_PROP_KEY));
-	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/RemoveProfilesOperationTest.java b/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/RemoveProfilesOperationTest.java
index a4d613d..9c41145 100644
--- a/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/RemoveProfilesOperationTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests.ui/src/org/eclipse/equinox/p2/tests/ui/operations/RemoveProfilesOperationTest.java
@@ -27,10 +27,7 @@ public class RemoveProfilesOperationTest extends AbstractProvisioningTest {
 	public void testRemoveExisting() {
 		String profileId = "testRemoveNonExisting";
 		IProfile profile = createProfile(profileId);
-		RemoveProfilesOperation op = new RemoveProfilesOperation("label", new IProfile[] {profile});
-
-		assertTrue("1.0", op.canExecute());
-		assertTrue("1.1", !op.canUndo());
+		RemoveProfilesOperation op = new RemoveProfilesOperation("label", new String[] {profileId});
 
 		try {
 			op.execute(getMonitor(), null);
@@ -46,10 +43,7 @@ public class RemoveProfilesOperationTest extends AbstractProvisioningTest {
 		assertNull("2.0", profile);
 	}
 
-	/**
-	 * Commented out due to bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=247540.
-	 */
-	public void _testRemoveNonExisting() {
+	public void testRemoveNonExisting() {
 		String profileId = "testRemoveNonExisting";
 		IProfile profile = createProfile(profileId);
 		try {
@@ -57,22 +51,16 @@ public class RemoveProfilesOperationTest extends AbstractProvisioningTest {
 		} catch (ProvisionException e) {
 			fail("0.99", e);
 		}
-		RemoveProfilesOperation op = new RemoveProfilesOperation("label", new IProfile[] {profile});
+		RemoveProfilesOperation op = new RemoveProfilesOperation("label", new String[] {profileId});
 
-		//currently running doesn't fail and behavior is not specific either way
+		//Currently the profile registry does not mind if we try to delete a profile that doesn't exist, so
+		//the UI classes don't test for it.
 		try {
 			op.execute(getMonitor(), null);
 		} catch (ExecutionException e) {
 			//expected
 		}
 
-		//redo shouldn't recreate the profile since we never removed it
-		try {
-			op.undo(getMonitor(), null);
-		} catch (ExecutionException e) {
-			fail("1.99", e);
-		}
-
 		try {
 			profile = ProvisioningUtil.getProfile(profileId);
 		} catch (ProvisionException e) {
@@ -80,44 +68,4 @@ public class RemoveProfilesOperationTest extends AbstractProvisioningTest {
 		}
 		assertNull("1.0", profile);
 	}
-
-	public void testUndoRedo() {
-		String profileId = "testUndoRedo";
-		IProfile profile = createProfile(profileId);
-		RemoveProfilesOperation op = new RemoveProfilesOperation("label", new IProfile[] {profile});
-
-		try {
-			op.execute(getMonitor(), null);
-		} catch (ExecutionException e) {
-			fail("0.99", e);
-		}
-
-		//now undo
-		try {
-			op.undo(getMonitor(), null);
-		} catch (ExecutionException e1) {
-			fail("1.99", e1);
-		}
-
-		try {
-			profile = ProvisioningUtil.getProfile(profileId);
-		} catch (ProvisionException e) {
-			fail("2.99", e);
-		}
-		assertNotNull("2.0", profile);
-		assertEquals("2.1", profileId, profile.getProfileId());
-
-		try {
-			op.redo(getMonitor(), null);
-		} catch (ExecutionException e) {
-			fail("3.99", e);
-		}
-		try {
-			profile = ProvisioningUtil.getProfile(profileId);
-		} catch (ProvisionException e) {
-			fail("2.99", e);
-		}
-
-		assertNull("4.0", profile);
-	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index f22aa63..7c95e88 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -20,9 +20,9 @@ import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.ui.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.actions.UninstallAction;
 import org.eclipse.equinox.internal.provisional.p2.ui.actions.UpdateAction;
-import org.eclipse.equinox.internal.provisional.p2.ui.model.InstalledIUElement;
-import org.eclipse.equinox.internal.provisional.p2.ui.model.Profiles;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.model.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.RemoveProfilesOperation;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.ProfileChooser;
 import org.eclipse.equinox.internal.provisional.p2.ui.viewers.*;
 import org.eclipse.jface.action.*;
@@ -56,15 +56,13 @@ public class ProfilesView extends ProvView {
 		}
 
 		public void run() {
-			List list = getSelection().toList();
+			Object[] selections = getSelection().toArray();
 			List profilesOnly = new ArrayList();
-			for (int i = 0; i < list.size(); i++) {
-				IProfile profile = (IProfile) ProvUI.getAdapter(list.get(i), IProfile.class);
-				if (profile != null) {
-					profilesOnly.add(profile);
-				}
+			for (int i = 0; i < selections.length; i++) {
+				if (selections[i] instanceof ProfileElement)
+					profilesOnly.add(((ProfileElement) selections[i]).getProfileId());
 			}
-			ProfileOperation op = new RemoveProfilesOperation(ProvAdminUIMessages.Ops_RemoveProfileOperationLabel, (IProfile[]) profilesOnly.toArray(new IProfile[profilesOnly.size()]));
+			RemoveProfilesOperation op = new RemoveProfilesOperation(ProvAdminUIMessages.Ops_RemoveProfileOperationLabel, (String[]) profilesOnly.toArray(new String[profilesOnly.size()]));
 			ProvisioningOperationRunner.run(op, ProfilesView.this.getShell(), StatusManager.SHOW | StatusManager.LOG);
 		}
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
index f7e9fc5..7c1cb10 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
@@ -48,6 +48,10 @@ public class ProfileElement extends RemoteQueriedElement {
 		return profileId;
 	}
 
+	public String getProfileId() {
+		return profileId;
+	}
+
 	protected int getDefaultQueryType() {
 		return QueryProvider.INSTALLED_IUS;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
index 5e1de1e..0eaad0a 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddProfileOperation.java
@@ -13,58 +13,24 @@ package org.eclipse.equinox.internal.provisional.p2.ui.operations;
 import java.util.Map;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 
 /**
  * Operation that adds the given profile to the profile registry.
  * 
  * @since 3.4
  */
-public class AddProfileOperation extends ProfileOperation {
-	private boolean added = false;
+public class AddProfileOperation extends ProvisioningOperation {
 	private String profileId;
 	private Map profileProperties;
 
-	public AddProfileOperation(String label, IProfile profile) {
-		super(label, new IProfile[0]);
-		this.profileId = profile.getProfileId();
-		this.profileProperties = profile.getProperties();
-	}
-
 	public AddProfileOperation(String label, String profileId, Map profileProperties) {
-		super(label, new IProfile[0]);
+		super(label);
 		this.profileId = profileId;
 		this.profileProperties = profileProperties;
-
 	}
 
 	protected IStatus doExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
 		ProvisioningUtil.addProfile(profileId, profileProperties, monitor);
-		added = true;
-		return okStatus();
-	}
-
-	protected IStatus doUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
-		ProvisioningUtil.removeProfile(profileIds[0], monitor);
-		added = false;
 		return okStatus();
 	}
-
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.core.commands.operations.AbstractOperation#canExecute()
-	 */
-	public boolean canExecute() {
-		return super.canExecute() && !added;
-	}
-
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.core.commands.operations.AbstractOperation#canUndo()
-	 */
-	public boolean canUndo() {
-		return super.canUndo() && added;
-	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileOperation.java
deleted file mode 100644
index 78ac988..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileOperation.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.internal.provisional.p2.ui.operations;
-
-import org.eclipse.core.runtime.Assert;
-import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
-
-/**
- * Abstract class representing provisioning profile operations
- * 
- * @since 3.4
- */
-public abstract class ProfileOperation extends UndoableProvisioningOperation {
-
-	String[] profileIds;
-	// We cache profiles along with ids in case we have to recreate a deleted profile
-	IProfile[] cachedProfiles;
-
-	ProfileOperation(String label, String[] ids) {
-		super(label);
-		profileIds = ids;
-	}
-
-	ProfileOperation(String label, IProfile[] profiles) {
-		super(label);
-		Assert.isNotNull(profiles);
-		cachedProfiles = profiles;
-		profileIds = new String[profiles.length];
-		for (int i = 0; i < profiles.length; i++) {
-			profileIds[i] = profiles[i].getProfileId();
-		}
-	}
-
-	boolean isValid() {
-		return profileIds != null && profileIds.length > 0;
-	}
-
-	IProfile[] getProfiles() throws ProvisionException {
-		if (profileIds == null) {
-			return null;
-		}
-		if (cachedProfiles == null) {
-			cachedProfiles = new IProfile[profileIds.length];
-			for (int i = 0; i < profileIds.length; i++) {
-				cachedProfiles[i] = ProvisioningUtil.getProfile(profileIds[i]);
-			}
-		}
-		return cachedProfiles;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveProfilesOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveProfilesOperation.java
index c3a01cb..1342c3d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveProfilesOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveProfilesOperation.java
@@ -12,18 +12,18 @@ package org.eclipse.equinox.internal.provisional.p2.ui.operations;
 
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 
 /**
  * Operation that removes a profile
  * 
  * @since 3.4
  */
-public class RemoveProfilesOperation extends ProfileOperation {
-	private boolean removed = false;
+public class RemoveProfilesOperation extends ProvisioningOperation {
+	String[] profileIds;
 
-	public RemoveProfilesOperation(String label, IProfile[] profiles) {
-		super(label, profiles);
+	public RemoveProfilesOperation(String label, String[] profileIds) {
+		super(label);
+		this.profileIds = profileIds;
 	}
 
 	protected IStatus doExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
@@ -31,34 +31,6 @@ public class RemoveProfilesOperation extends ProfileOperation {
 			ProvisioningUtil.removeProfile(profileIds[i], monitor);
 		}
 		// assume the best if no exception
-		removed = true;
 		return okStatus();
 	}
-
-	protected IStatus doUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
-		for (int i = 0; i < cachedProfiles.length; i++) {
-			IProfile cachedProfile = cachedProfiles[i];
-			ProvisioningUtil.addProfile(cachedProfile.getProfileId(), cachedProfile.getLocalProperties(), monitor);
-		}
-		removed = false;
-		return okStatus();
-	}
-
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.core.commands.operations.AbstractOperation#canExecute()
-	 */
-	public boolean canExecute() {
-		return profileIds != null && !removed;
-	}
-
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.core.commands.operations.AbstractOperation#canUndo()
-	 */
-	public boolean canUndo() {
-		return cachedProfiles != null && removed;
-	}
 }
