commit 0b69717afea66f01101585ed9dbe76ea6b4457dd
Author: John Arthorne <johna>
Date:   Fri Sep 11 21:47:02 2009 +0000

     Bug 279309 -  [transport] Download progress is flickering too much

20	1	bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/FileReader.java
diff --git a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/FileReader.java b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/FileReader.java
index 5f3394b..7531104 100644
--- a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/FileReader.java
+++ b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/FileReader.java
@@ -29,6 +29,25 @@ import org.eclipse.osgi.util.NLS;
  * FileReader is an ECF FileTransferJob implementation.
  */
 public final class FileReader extends FileTransferJob implements IFileTransferListener {
+	/**
+	 * Class used to suppress warnings about a job being blocked by another job.
+	 * Since we are running a job that will always be blocked by another job that
+	 * is actually performing the transfer, these messages are unnecessary and ugly.
+	 */
+	static class SuppressBlockedMonitor extends SubProgressMonitor {
+		public SuppressBlockedMonitor(IProgressMonitor monitor, int ticks) {
+			super(monitor, ticks);
+		}
+
+		public void setBlocked(IStatus reason) {
+			//do nothing
+		}
+
+		public void clearBlocked() {
+			//do nothing
+		}
+	}
+
 	private static IFileReaderProbe testProbe;
 	private boolean closeStreamWhenFinished = false;
 	private Exception exception;
@@ -261,7 +280,7 @@ public final class FileReader extends FileTransferJob implements IFileTransferLi
 			monitor = new NullProgressMonitor();
 		try {
 			sendRetrieveRequest(uri, anOutputStream, (startPos != -1 ? new DownloadRange(startPos) : null), false, monitor);
-			Job.getJobManager().join(this, new SubProgressMonitor(monitor, 0));
+			Job.getJobManager().join(this, new SuppressBlockedMonitor(monitor, 0));
 			if (monitor.isCanceled() && connectEvent != null)
 				connectEvent.cancel();
 			// check and throw exception if received in callback
commit a13f60b15823dcccda73bdb70765f614e2101451
Author: John Arthorne <johna>
Date:   Tue Oct 20 18:23:25 2009 +0000

    Bug 279309 [transport] Download progress is flickering too much

3	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
5	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
11	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ResolutionResultsWizardPage.java
4	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
4	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
3	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
19	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileModificationOperation.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index db11729..f7f9ac8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -99,6 +99,7 @@ public class ProvUIMessages extends NLS {
 	public static String ProvisioningOperationRunner_ErrorExecutingOperation;
 	public static String InstalledSoftwarePage_NoProfile;
 	public static String InstallIUOperationLabel;
+	public static String InstallIUOperationTask;
 	public static String InstallIUCommandLabel;
 	public static String InstallIUCommandTooltip;
 	public static String InstallIUProgress;
@@ -108,12 +109,14 @@ public class ProvUIMessages extends NLS {
 	public static String PreselectedIUInstallWizard_Description;
 	public static String UninstallDialog_UninstallMessage;
 	public static String UninstallIUOperationLabel;
+	public static String UninstallIUOperationTask;
 	public static String UninstallIUCommandLabel;
 	public static String UninstallIUCommandTooltip;
 	public static String UninstallIUProgress;
 	public static String UninstallWizardPage_Description;
 	public static String UninstallWizardPage_Title;
 	public static String UpdateIUOperationLabel;
+	public static String UpdateIUOperationTask;
 	public static String UpdateIUCommandLabel;
 	public static String UpdateIUCommandTooltip;
 	public static String UpdateIUProgress;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
index 334b621..4607810 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
@@ -26,4 +26,9 @@ public class InstallWizardPage extends SizeComputingWizardPage {
 	protected String getOperationLabel() {
 		return ProvUIMessages.InstallIUOperationLabel;
 	}
+
+	protected String getOperationTaskName() {
+		return ProvUIMessages.InstallIUOperationTask;
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ResolutionResultsWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ResolutionResultsWizardPage.java
index 0d52058..7283048 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ResolutionResultsWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ResolutionResultsWizardPage.java
@@ -184,11 +184,21 @@ public abstract class ResolutionResultsWizardPage extends ResolutionStatusPage {
 	}
 
 	private ProfileModificationOperation createProfileModificationOperation(PlannerResolutionOperation op) {
-		return new ProfileModificationOperation(getOperationLabel(), profileId, op.getProvisioningPlan(), op.getProvisioningContext());
+		ProfileModificationOperation pmo = new ProfileModificationOperation(getOperationLabel(), profileId, op.getProvisioningPlan(), op.getProvisioningContext());
+		pmo.setTaskName(getOperationTaskName());
+		return pmo;
 	}
 
 	protected abstract String getOperationLabel();
 
+	/**
+	 * Returns the task name for this operation, or <code>null</code> to display
+	 * a generic task name.
+	 */
+	protected String getOperationTaskName() {
+		return null;
+	}
+
 	protected TreeViewer createTreeViewer(Composite parent) {
 		return new TreeViewer(parent, SWT.BORDER | SWT.MULTI | SWT.FULL_SELECTION);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
index 3bc176f..e43caae 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
@@ -29,6 +29,10 @@ public class UninstallWizardPage extends ResolutionResultsWizardPage {
 		return ProvUIMessages.UninstallIUOperationLabel;
 	}
 
+	protected String getOperationTaskName() {
+		return ProvUIMessages.UninstallIUOperationTask;
+	}
+
 	protected IQueryable getQueryable(ProvisioningPlan plan) {
 		return plan.getRemovals();
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 1c9a172..eafb86b 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -37,4 +37,8 @@ public class UpdateWizardPage extends SizeComputingWizardPage {
 	protected String getOperationLabel() {
 		return ProvUIMessages.UpdateIUOperationLabel;
 	}
+
+	protected String getOperationTaskName() {
+		return ProvUIMessages.UpdateIUOperationTask;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 97725d3..a34c3c8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -31,11 +31,13 @@ ProvisioningOperationRunner_CannotApplyChanges=The changes could not be applied
 ProvisioningOperationRunner_ErrorExecutingOperation=Unexpected error while trying to run {0}
 InstalledSoftwarePage_NoProfile=This installation has not been configured for showing the installed software.  See the error log for details.
 InstallIUOperationLabel=Install
+InstallIUOperationTask=Software installation in progress...
 InstallIUCommandLabel=&Install...
 InstallIUCommandTooltip=Install the selected items
 InstallIUProgress=Installing...
 UninstallDialog_UninstallMessage=Check the items that you wish to uninstall.
 UninstallIUOperationLabel=Uninstall
+UninstallIUOperationTask=Uninstall is in progress...
 UninstallIUCommandLabel=&Uninstall...
 UninstallIUCommandTooltip=Uninstall the selected items
 UninstallIUProgress=Uninstalling...
@@ -47,6 +49,7 @@ ServiceUI_unsigned_message=Warning: You are installing software that contains un
 ServiceUI_unsigned_title=Installing unsigned content
 ServiceUI_warning_title=Security Warning
 UpdateIUOperationLabel=Update
+UpdateIUOperationTask=Software update is in progress...
 UpdateIUCommandLabel=Up&date...
 UpdateIUCommandTooltip=See if updates are available for the selected items
 UpdateIUProgress=Updating...
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileModificationOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileModificationOperation.java
index c230242..2b8afb2 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileModificationOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProfileModificationOperation.java
@@ -10,8 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.operations;
 
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.*;
@@ -28,6 +27,7 @@ public class ProfileModificationOperation extends ProvisioningOperation {
 	PhaseSet phaseSet;
 	boolean isUser = true;
 	ProvisioningContext provisioningContext;
+	private String taskName;
 
 	public ProfileModificationOperation(String label, String profileId, ProvisioningPlan plan, ProvisioningContext context) {
 		this(label, profileId, plan, context, null, true);
@@ -58,13 +58,29 @@ public class ProfileModificationOperation extends ProvisioningOperation {
 	}
 
 	protected IStatus doExecute(IProgressMonitor monitor) throws ProvisionException {
-		return ProvisioningUtil.performProvisioningPlan(plan, phaseSet, provisioningContext, monitor);
+		String task = taskName;
+		if (task == null)
+			task = ""; //$NON-NLS-1$
+		monitor.beginTask(task, 1000);
+		try {
+			return ProvisioningUtil.performProvisioningPlan(plan, phaseSet, provisioningContext, new SubProgressMonitor(monitor, 1000));
+		} finally {
+			monitor.done();
+		}
 	}
 
 	public boolean runInBackground() {
 		return true;
 	}
 
+	/**
+	 * Sets the top level task name for progress when running this operation.
+	 * @param label
+	 */
+	public void setTaskName(String label) {
+		this.taskName = label;
+	}
+
 	public boolean isUser() {
 		return isUser;
 	}
