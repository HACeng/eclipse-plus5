commit a4f6c2bdd8c19fd79dd3685ee758e2358e0c1abf
Author: DJ Houghton <dj>
Date:   Wed Oct 8 20:15:26 2008 +0000

    Bug 232094 - Removing file from link folder doesn't uninstall bundles

1	0	bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
7	0	bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice.java
4	2	bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener.java
24	11	bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener.java
8	0	bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener.java
32	0	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/AbstractReconcilerTest.java
51	3	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/ConfigurationTests.java
1	1	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
3	1	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/PlatformConfigurationWrapper.java
2	1	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/actions/InstallFeatureAction.java
1	0	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/update/Site.java
diff --git a/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
index 88746d4..d0686ad 100644
--- a/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
@@ -7,6 +7,7 @@ Bundle-Localization: plugin
 Bundle-Version: 1.0.100.qualifier
 Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.p2.metadata,
+ org.eclipse.equinox.internal.p2.update,
  org.eclipse.equinox.internal.provisional.p2.artifact.repository,
  org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
diff --git a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice.java b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice.java
index 5bc1ab6..e455fb3 100644
--- a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice.java
+++ b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/EntryAdvice.java
@@ -14,6 +14,7 @@ import java.io.File;
 import java.net.URL;
 import java.util.Map;
 import java.util.Properties;
+import org.eclipse.equinox.internal.p2.update.Site;
 import org.eclipse.equinox.p2.publisher.eclipse.*;
 import org.osgi.framework.Version;
 
@@ -47,6 +48,10 @@ public class EntryAdvice implements IFeatureAdvice, IBundleAdvice {
 	}
 
 	void setProperties(File location, long timestamp, URL reference) {
+		setProperties(location, timestamp, reference, null);
+	}
+
+	void setProperties(File location, long timestamp, URL reference, String linkFile) {
 		if (reference == null)
 			artifactProps.remove(RepositoryListener.ARTIFACT_REFERENCE);
 		else
@@ -58,6 +63,8 @@ public class EntryAdvice implements IFeatureAdvice, IBundleAdvice {
 		artifactProps.setProperty(RepositoryListener.FILE_NAME, location.getAbsolutePath());
 		metadataProps.setProperty(RepositoryListener.FILE_NAME, location.getAbsolutePath());
 		metadataProps.setProperty(RepositoryListener.FILE_LAST_MODIFIED, Long.toString(timestamp));
+		if (linkFile != null)
+			metadataProps.setProperty(Site.PROP_LINK_FILE, linkFile);
 	}
 
 	public Map getInstructions(File location) {
diff --git a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener.java b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener.java
index cc9d31f..807c852 100644
--- a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener.java
+++ b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/RepositoryListener.java
@@ -16,6 +16,7 @@ import java.net.URL;
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.core.helpers.LogHelper;
+import org.eclipse.equinox.internal.p2.update.Site;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.core.repository.IRepository;
@@ -155,7 +156,7 @@ public class RepositoryListener extends DirectoryChangeListener {
 		if (bundleDescription == null)
 			return false;
 		try {
-			advice.setProperties(file, file.lastModified(), file.toURL());
+			advice.setProperties(file, file.lastModified(), file.toURL(), null);
 		} catch (MalformedURLException e) {
 			// should never happen
 		}
@@ -167,7 +168,8 @@ public class RepositoryListener extends DirectoryChangeListener {
 
 	private boolean processFeature(File file, boolean isAddition) {
 		try {
-			advice.setProperties(file, file.lastModified(), file.toURL());
+			String link = (String) metadataRepository.getProperties().get(Site.PROP_LINK_FILE);
+			advice.setProperties(file, file.lastModified(), file.toURL(), link);
 		} catch (MalformedURLException e) {
 			// should never happen
 		}
diff --git a/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener.java b/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener.java
index 4f2fba7..f21dc3d 100644
--- a/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener.java
+++ b/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/DropinsRepositoryListener.java
@@ -20,6 +20,7 @@ import org.eclipse.core.runtime.Status;
 import org.eclipse.equinox.internal.p2.core.helpers.LogHelper;
 import org.eclipse.equinox.internal.p2.extensionlocation.ExtensionLocationArtifactRepository;
 import org.eclipse.equinox.internal.p2.extensionlocation.ExtensionLocationMetadataRepository;
+import org.eclipse.equinox.internal.p2.update.Site;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepository;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -52,25 +53,33 @@ public class DropinsRepositoryListener extends RepositoryListener {
 	public boolean added(File file) {
 		if (super.added(file))
 			return true;
-
-		URL repositoryURL = createRepositoryURL(file);
-		if (repositoryURL != null) {
-			getMetadataRepository(repositoryURL);
-			getArtifactRepository(repositoryURL);
-		}
+		addRepository(file);
 		return true;
 	}
 
 	public boolean changed(File file) {
 		if (super.changed(file))
 			return true;
+		addRepository(file);
+		return true;
+	}
 
+	private void addRepository(File file) {
 		URL repositoryURL = createRepositoryURL(file);
+		Properties properties = new Properties();
+		try {
+			// if the file pointed to a link file, keep track of the attribute
+			// so we can add it to the repo later
+			URL linkURL = getLinkRepository(file, false);
+			if (linkURL != null)
+				properties.put(Site.PROP_LINK_FILE, file.getAbsolutePath());
+		} catch (IOException e) {
+			// ignore
+		}
 		if (repositoryURL != null) {
-			getMetadataRepository(repositoryURL);
-			getArtifactRepository(repositoryURL);
+			getMetadataRepository(repositoryURL, properties);
+			getArtifactRepository(repositoryURL, properties);
 		}
-		return true;
 	}
 
 	private String getLinkPath(File file) {
@@ -155,13 +164,15 @@ public class DropinsRepositoryListener extends RepositoryListener {
 		return canonicalFile.toURL();
 	}
 
-	public void getMetadataRepository(URL repoURL) {
+	public void getMetadataRepository(URL repoURL, Properties extraProperties) {
 		try {
 			IMetadataRepository repository = null;
 			try {
 				ExtensionLocationMetadataRepository.validate(repoURL, null);
 				Map properties = new HashMap();
 				properties.put(IRepository.PROP_SYSTEM, Boolean.TRUE.toString());
+				if (extraProperties != null)
+					properties.putAll(extraProperties);
 				repository = Activator.createExtensionLocationMetadataRepository(repoURL, "dropins metadata repo: " + repoURL.toExternalForm(), properties); //$NON-NLS-1$
 			} catch (ProvisionException e) {
 				repository = Activator.loadMetadataRepository(repoURL, null);
@@ -172,13 +183,15 @@ public class DropinsRepositoryListener extends RepositoryListener {
 		}
 	}
 
-	public void getArtifactRepository(URL repoURL) {
+	public void getArtifactRepository(URL repoURL, Properties extraProperties) {
 		try {
 			IArtifactRepository repository = null;
 			try {
 				ExtensionLocationArtifactRepository.validate(repoURL, null);
 				Map properties = new HashMap();
 				properties.put(IRepository.PROP_SYSTEM, Boolean.TRUE.toString());
+				if (extraProperties != null)
+					properties.putAll(extraProperties);
 				repository = Activator.createExtensionLocationArtifactRepository(repoURL, "dropins artifact repo: " + repoURL.toExternalForm(), properties); //$NON-NLS-1$
 				// fall through here and call the load which then adds the repo to the manager's list
 			} catch (ProvisionException ex) {
diff --git a/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener.java b/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener.java
index a13a970..d3e9b53 100644
--- a/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener.java
+++ b/bundles/org.eclipse.equinox.p2.reconciler.dropins/src/org/eclipse/equinox/internal/p2/reconciler/dropins/PlatformXmlListener.java
@@ -190,6 +190,14 @@ public class PlatformXmlListener extends DirectoryChangeListener {
 			IMetadataRepository match = getMatchingRepo(Activator.getRepositories(), siteURL);
 			if (match == null) {
 				try {
+					String linkFile = site.getLinkFile();
+					if (linkFile != null && linkFile.length() > 0) {
+						File link = new File(linkFile);
+						if (!link.exists()) {
+							toBeRemoved.add(site);
+							continue;
+						}
+					}
 					String eclipseExtensionURL = siteURL + Constants.EXTENSION_LOCATION;
 					URL location = new URL(eclipseExtensionURL);
 					Map properties = new HashMap();
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/AbstractReconcilerTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/AbstractReconcilerTest.java
index 1b299fc..f3e1687 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/AbstractReconcilerTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/AbstractReconcilerTest.java
@@ -168,6 +168,38 @@ public class AbstractReconcilerTest extends AbstractProvisioningTest {
 		copy(message, file, new File(destinationParent, file.getName()));
 	}
 
+	/*
+	 * Create a link file in the links folder. Point it to the given extension location.
+	 */
+	public void createLinkFile(String message, String filename, String extensionLocation) {
+		File file = new File(output, "eclipse/links/" + filename + ".link");
+		file.getParentFile().mkdirs();
+		Properties properties = new Properties();
+		properties.put("path", extensionLocation);
+		OutputStream stream = null;
+		try {
+			stream = new BufferedOutputStream(new FileOutputStream(file));
+			properties.store(stream, null);
+		} catch (IOException e) {
+			fail(message, e);
+		} finally {
+			try {
+				if (stream != null)
+					stream.close();
+			} catch (IOException e) {
+				// ignore
+			}
+		}
+	}
+
+	/*
+	 * Delete the link file with the given name from the links folder.
+	 */
+	public void removeLinkFile(String message, String filename) {
+		File file = new File(output, "eclipse/links/" + filename + ".link");
+		file.delete();
+	}
+
 	public void add(String message, String target, File[] files) {
 		assertNotNull(files);
 		for (int i = 0; i < files.length; i++)
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/ConfigurationTests.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/ConfigurationTests.java
index 5551de0..480b3ca 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/ConfigurationTests.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/reconciler/dropins/ConfigurationTests.java
@@ -39,11 +39,13 @@ public class ConfigurationTests extends AbstractReconcilerTest {
 	 */
 	public static Test suite() {
 		TestSuite suite = new ReconcilerTestSuite();
-		suite.addTest(new ConfigurationTests("testDiscoverOne"));
-		suite.addTest(new ConfigurationTests("test_247095"));
-		suite.addTest(new ConfigurationTests("test_247095b"));
+		// TODO these fail because of bug 249641
+		//		suite.addTest(new ConfigurationTests("testDiscoverOne"));
+		//		suite.addTest(new ConfigurationTests("test_247095"));
+		//		suite.addTest(new ConfigurationTests("test_247095b"));
 		suite.addTest(new ConfigurationTests("test_249607"));
 		suite.addTest(new ConfigurationTests("test_249898"));
+		suite.addTest(new ConfigurationTests("test_232094"));
 		return suite;
 	}
 
@@ -285,4 +287,50 @@ public class ConfigurationTests extends AbstractReconcilerTest {
 		assertDoesNotExistInBundlesInfo("10.3", "ccc", "1.0.0");
 		assertFalse("10.4", isInstalled("ccc", "1.0.0"));
 	}
+
+	/*
+	 * Test the case where we have a new site in the platform.xml file which was added
+	 * by the user putting a .link file in the links/ folder. Then they delete the link file
+	 * and the features and plug-ins should be uninstalled.
+	 */
+	public void test_232094() {
+		assertInitialized();
+
+		File temp = getTempFolder();
+		toRemove.add(temp);
+
+		// copy the data to an extension location
+		File source = getTestData("1.0", "testData/reconciler/247095");
+		copy("1.1", source, temp);
+
+		// create the file in the links/ folder
+		createLinkFile("2.0", "myLink", temp.getAbsolutePath());
+
+		// reconcile
+		reconcile("3.0");
+
+		// ensure everything was added ok
+		assertExistsInBundlesInfo("4.0", "bbb");
+		assertTrue("4.1", isInstalled("bbb", "1.0.0"));
+		assertExistsInBundlesInfo("4.2", "ccc");
+		assertTrue("4.3", isInstalled("ccc", "1.0.0"));
+		assertTrue("4.4", isInstalled("bbb.feature.feature.group", "1.0.0"));
+		assertFeatureExists("4.5", getConfiguration(), "bbb.feature", "1.0.0");
+
+		// delete the link file from the links/ folder
+		removeLinkFile("5.0", "myLink");
+
+		// reconcile
+		reconcile("6.0");
+
+		// ensure things were uninstalled
+		assertDoesNotExistInBundlesInfo("7.0", "bbb");
+		assertTrue("7.1", !isInstalled("bbb", "1.0.0"));
+		assertDoesNotExistInBundlesInfo("7.2", "ccc");
+		assertTrue("7.3", !isInstalled("ccc", "1.0.0"));
+		assertTrue("7.4", !isInstalled("bbb.feature.feature", "1.0.0"));
+		assertEquals("7.5", 1, getConfiguration().getSites().size());
+
+		// cleanup
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
index 00a219c..f7e5e18 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
@@ -33,7 +33,7 @@ Import-Package: javax.xml.parsers,
  org.xml.sax
 Export-Package: org.eclipse.equinox.internal.p2.touchpoint.eclipse;x-friends:="org.eclipse.equinox.p2.reconciler.dropins,org.eclipse.equinox.p2.extensionlocation",
  org.eclipse.equinox.internal.p2.touchpoint.eclipse.actions;x-internal:=true,
- org.eclipse.equinox.internal.p2.update;x-friends:="org.eclipse.equinox.p2.reconciler.dropins,org.eclipse.equinox.p2.extensionlocation"
+ org.eclipse.equinox.internal.p2.update;x-friends:="org.eclipse.equinox.p2.reconciler.dropins,org.eclipse.equinox.p2.extensionlocation,org.eclipse.equinox.p2.directorywatcher"
 Bundle-RequiredExecutionEnvironment: J2SE-1.4,
  CDC-1.1/Foundation-1.1
 Bundle-ActivationPolicy: lazy
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/PlatformConfigurationWrapper.java b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/PlatformConfigurationWrapper.java
index 67eae11..952eb63 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/PlatformConfigurationWrapper.java
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/PlatformConfigurationWrapper.java
@@ -159,7 +159,7 @@ public class PlatformConfigurationWrapper {
 	/*
 	 * @see org.eclipse.update.configurator.IPlatformConfiguration#createFeatureEntry(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.net.URL[])
 	 */
-	public IStatus addFeatureEntry(File file, String id, String version, String pluginIdentifier, String pluginVersion, boolean primary, String application, URL[] root) {
+	public IStatus addFeatureEntry(File file, String id, String version, String pluginIdentifier, String pluginVersion, boolean primary, String application, URL[] root, String linkFile) {
 		loadDelegate();
 		if (configuration == null)
 			return new Status(IStatus.WARNING, Activator.ID, Messages.platform_config_unavailable, null);
@@ -180,6 +180,8 @@ public class PlatformConfigurationWrapper {
 		Site site = getSite(fileURL);
 		if (site == null) {
 			site = createSite(fileURL, getDefaultPolicy());
+			if (linkFile != null)
+				site.setLinkFile(linkFile);
 			configuration.add(site);
 		} else {
 			// check to see if the feature already exists in this site
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/actions/InstallFeatureAction.java b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/actions/InstallFeatureAction.java
index 66021f2..f0575eb 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/actions/InstallFeatureAction.java
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/actions/InstallFeatureAction.java
@@ -12,6 +12,7 @@ import java.io.File;
 import java.util.Map;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.internal.p2.touchpoint.eclipse.*;
+import org.eclipse.equinox.internal.p2.update.Site;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningAction;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IArtifactKey;
@@ -73,6 +74,6 @@ public class InstallFeatureAction extends ProvisioningAction {
 		String application = iu.getProperty(UPDATE_FEATURE_APPLICATION_PROP);
 		// TODO this isn't right... but we will leave it for now because we don't actually use the value in the install
 		String pluginVersion = artifactKey.getVersion().toString();
-		return configuration.addFeatureEntry(file, featureId, featureVersion, pluginId, pluginVersion, isPrimary, application, /*root*/null);
+		return configuration.addFeatureEntry(file, featureId, featureVersion, pluginId, pluginVersion, isPrimary, application, /*root*/null, iu.getProperty(Site.PROP_LINK_FILE));
 	}
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/update/Site.java b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/update/Site.java
index 743a1a3..a03544b 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/update/Site.java
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/update/Site.java
@@ -20,6 +20,7 @@ public class Site {
 	public final static String POLICY_MANAGED_ONLY = "MANAGED-ONLY"; //$NON-NLS-1$
 	public final static String POLICY_USER_EXCLUDE = "USER-EXCLUDE"; //$NON-NLS-1$
 	public final static String POLICY_USER_INCLUDE = "USER-INCLUDE"; //$NON-NLS-1$
+	public final static String PROP_LINK_FILE = "org.eclipse.update.site.linkFile"; //$NON-NLS-1$
 
 	private String policy;
 	private boolean enabled = true;
