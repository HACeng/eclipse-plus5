commit 79199432dce93fe8046cc61a1a3ceaa87452735b
Author: Susan Franklin <sfranklin>
Date:   Mon Mar 23 18:25:04 2009 +0000

    Bug 269720 - [ui] UI repo strings should be unencoded unless otherwise necessary

2	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ArtifactRepositoryElement.java
3	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ElementUtils.java
4	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
3	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/MetadataRepositoryElementComparator.java
3	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/RepositoryDetailsLabelProvider.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/QueryableRepositoryManager.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/UpdateManagerCompatibility.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
6	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulationPage.java
5	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/ProvElementLabelProvider.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ArtifactRepositoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ArtifactRepositoryElement.java
index 66840e4..35eb6e8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ArtifactRepositoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ArtifactRepositoryElement.java
@@ -11,8 +11,7 @@
 package org.eclipse.equinox.internal.p2.ui.model;
 
 import java.net.URI;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.OperationCanceledException;
+import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.jobs.ISchedulingRule;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepository;
@@ -77,7 +76,7 @@ public class ArtifactRepositoryElement extends ProvElement implements IDeferredW
 		if (name != null && name.length() > 0) {
 			return name;
 		}
-		return getLocation().toString();
+		return URIUtil.toUnencodedString(getLocation());
 	}
 
 	public IRepository getRepository(IProgressMonitor monitor) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ElementUtils.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ElementUtils.java
index 3b870ee..bac78c6 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ElementUtils.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ElementUtils.java
@@ -68,15 +68,15 @@ public class ElementUtils {
 					// and remove any elements that weren't in the elements we were given
 					Set nowKnown = new HashSet();
 					for (int i = 0; i < elements.length; i++)
-						nowKnown.add(elements[i].getLocation().toString());
+						nowKnown.add(URIUtil.toUnencodedString(elements[i].getLocation()));
 					for (int i = 0; i < currentlyEnabled.length; i++) {
-						if (!nowKnown.contains(currentlyEnabled[i].toString())) {
+						if (!nowKnown.contains(URIUtil.toUnencodedString(currentlyEnabled[i]))) {
 							ProvisioningUtil.removeMetadataRepository(currentlyEnabled[i]);
 							ProvisioningUtil.removeArtifactRepository(currentlyEnabled[i]);
 						}
 					}
 					for (int i = 0; i < currentlyDisabled.length; i++) {
-						if (!nowKnown.contains(currentlyDisabled[i].toString())) {
+						if (!nowKnown.contains(URIUtil.toUnencodedString(currentlyDisabled[i]))) {
 							ProvisioningUtil.removeMetadataRepository(currentlyDisabled[i]);
 							ProvisioningUtil.removeArtifactRepository(currentlyDisabled[i]);
 						}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
index a2d1510..9dddf1d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
@@ -77,11 +77,11 @@ public class MetadataRepositoryElement extends RootElement implements IRepositor
 	}
 
 	public String getLabel(Object o) {
-		String name = getName();
-		if (name != null && name.length() > 0) {
-			return name;
+		String n = getName();
+		if (n != null && n.length() > 0) {
+			return n;
 		}
-		return getLocation().toString();
+		return URIUtil.toUnencodedString(getLocation());
 	}
 
 	/*
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/MetadataRepositoryElementComparator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/MetadataRepositoryElementComparator.java
index 7f19f40..c2e0707 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/MetadataRepositoryElementComparator.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/MetadataRepositoryElementComparator.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.viewers;
 
+import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.internal.p2.ui.model.MetadataRepositoryElement;
 import org.eclipse.jface.viewers.Viewer;
 import org.eclipse.jface.viewers.ViewerComparator;
@@ -55,8 +56,8 @@ public class MetadataRepositoryElementComparator extends ViewerComparator {
 			key1 = repo1.getName();
 			key2 = repo2.getName();
 		} else if (sortKey == RepositoryDetailsLabelProvider.COL_LOCATION) {
-			key1 = repo1.getLocation().toString();
-			key2 = repo2.getLocation().toString();
+			key1 = URIUtil.toUnencodedString(repo1.getLocation());
+			key2 = URIUtil.toUnencodedString(repo2.getLocation());
 		} else { // COL_ENABLEMENT
 			key1 = repo1.isEnabled() ? ENABLED : BLANK;
 			key2 = repo2.isEnabled() ? ENABLED : BLANK;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/RepositoryDetailsLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/RepositoryDetailsLabelProvider.java
index bdc72d4..786fad4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/RepositoryDetailsLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/RepositoryDetailsLabelProvider.java
@@ -11,6 +11,7 @@
 
 package org.eclipse.equinox.internal.p2.ui.viewers;
 
+import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.MetadataRepositoryElement;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
@@ -65,10 +66,10 @@ public class RepositoryDetailsLabelProvider extends LabelProvider implements ITa
 				return ""; //$NON-NLS-1$
 			case COL_LOCATION :
 				if (element instanceof IRepository) {
-					return ((IRepository) element).getLocation().toString();
+					return URIUtil.toUnencodedString(((IRepository) element).getLocation());
 				}
 				if (element instanceof IRepositoryElement) {
-					return ((IRepositoryElement) element).getLocation().toString();
+					return URIUtil.toUnencodedString(((IRepositoryElement) element).getLocation());
 				}
 				break;
 			case COL_ENABLEMENT :
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/QueryableRepositoryManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/QueryableRepositoryManager.java
index 0545a5a..2162597 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/QueryableRepositoryManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/QueryableRepositoryManager.java
@@ -191,7 +191,7 @@ public abstract class QueryableRepositoryManager implements IQueryable {
 	protected IRepository loadRepository(IRepositoryManager manager, URI location, IProgressMonitor monitor) throws ProvisionException {
 		Object repo = loaded.get(location);
 		if (repo == null) {
-			monitor.setTaskName(NLS.bind(ProvUIMessages.QueryableMetadataRepositoryManager_LoadRepositoryProgress, location.toString()));
+			monitor.setTaskName(NLS.bind(ProvUIMessages.QueryableMetadataRepositoryManager_LoadRepositoryProgress, URIUtil.toUnencodedString(location)));
 			repo = doLoadRepository(manager, location, monitor);
 			if (repo != null)
 				loaded.put(location, repo);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/UpdateManagerCompatibility.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/UpdateManagerCompatibility.java
index a88575b..dab90e9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/UpdateManagerCompatibility.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/UpdateManagerCompatibility.java
@@ -166,7 +166,7 @@ public class UpdateManagerCompatibility {
 			MetadataRepositoryElement element = (MetadataRepositoryElement) obj;
 			String sel = element.isEnabled() ? "true" : "false"; //$NON-NLS-1$ //$NON-NLS-2$
 			String name = element.getName();
-			writer.print(indent + "<site url=\"" + element.getLocation() + "\" selected=\"" + sel + "\" name=\"" + getWritableXMLString(name) + "\""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 
+			writer.print(indent + "<site url=\"" + URIUtil.toUnencodedString(element.getLocation()) + "\" selected=\"" + sel + "\" name=\"" + getWritableXMLString(name) + "\""); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ 
 			writer.println("/>"); //$NON-NLS-1$
 		}
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
index 3e208e8..1756586 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
@@ -311,7 +311,7 @@ public class AvailableIUGroup extends StructuredIUGroup {
 		// We don't know if loading will be a fast or slow operation.
 		// We do it in a job to be safe, and when it's done, we update
 		// the UI.
-		Job job = new Job(NLS.bind(ProvUIMessages.AvailableIUGroup_LoadingRepository, location.toString())) {
+		Job job = new Job(NLS.bind(ProvUIMessages.AvailableIUGroup_LoadingRepository, URIUtil.toUnencodedString(location))) {
 			protected IStatus run(IProgressMonitor monitor) {
 				try {
 					ProvisioningUtil.loadMetadataRepository(location, monitor);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
index 116b7b3..e53b5cf 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
@@ -11,6 +11,7 @@
 package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
 import java.net.MalformedURLException;
+import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.IUPropertyPage;
 import org.eclipse.equinox.internal.provisional.p2.metadata.ICopyright;
@@ -56,7 +57,7 @@ public class IUCopyrightPropertyPage extends IUPropertyPage {
 				label.setText(ProvUIMessages.IUCopyrightPropertyPage_ViewLinkLabel);
 				// Create a link to the copyright URL
 				Link link = new Link(composite, SWT.LEFT | SWT.WRAP);
-				link.setText(NLS.bind("<a>{0}</a>", copyright.getLocation().toString())); //$NON-NLS-1$
+				link.setText(NLS.bind("<a>{0}</a>", URIUtil.toUnencodedString(copyright.getLocation()))); //$NON-NLS-1$
 				gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
 				gd.widthHint = computeWidthLimit(link, 80);
 				link.setLayoutData(gd);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
index 162fcb4..8942dce 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
+import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.IUPropertyPage;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
@@ -55,7 +56,7 @@ public class IULicensePropertyPage extends IUPropertyPage {
 				label.setText(ProvUIMessages.IULicensePropertyPage_ViewLicenseLabel);
 				// Create a link to the license URL
 				Link link = new Link(composite, SWT.LEFT | SWT.WRAP);
-				link.setText(NLS.bind("<a>{0}</a>", license.getLocation().toString())); //$NON-NLS-1$
+				link.setText(NLS.bind("<a>{0}</a>", URIUtil.toUnencodedString(license.getLocation()))); //$NON-NLS-1$
 				gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
 				gd.widthHint = computeWidthLimit(link, 80);
 				link.setLayoutData(gd);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulationPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulationPage.java
index db466c0..ea66a0e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulationPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulationPage.java
@@ -125,7 +125,7 @@ public class RepositoryManipulationPage extends PreferencePage implements IWorkb
 				cachedElements = new Hashtable(children.length);
 				for (int i = 0; i < children.length; i++) {
 					if (children[i] instanceof MetadataRepositoryElement)
-						cachedElements.put(((MetadataRepositoryElement) children[i]).getLocation().toString(), children[i]);
+						cachedElements.put(URIUtil.toUnencodedString(((MetadataRepositoryElement) children[i]).getLocation()), children[i]);
 				}
 			}
 			return cachedElements.values().toArray();
@@ -249,7 +249,7 @@ public class RepositoryManipulationPage extends PreferencePage implements IWorkb
 			}
 
 			public void modify(Object element, String property, Object value) {
-				if (value != null && value.toString().length() > 0) {
+				if (value != null && value.toString().length() >= 0) {
 					MetadataRepositoryElement repo;
 					if (element instanceof Item) {
 						repo = (MetadataRepositoryElement) ((Item) element).getData();
@@ -598,7 +598,7 @@ public class RepositoryManipulationPage extends PreferencePage implements IWorkb
 					Hashtable repos = getInput().cachedElements;
 					changed = true;
 					for (int i = 0; i < imported.length; i++)
-						repos.put(imported[i].getLocation().toString(), imported[i]);
+						repos.put(URIUtil.toUnencodedString(imported[i].getLocation()), imported[i]);
 					asyncRefresh();
 				}
 			}
@@ -695,12 +695,12 @@ public class RepositoryManipulationPage extends PreferencePage implements IWorkb
 		if (selections.length > 0) {
 			String message = ProvUIMessages.RepositoryManipulationPage_RemoveConfirmMessage;
 			if (selections.length == 1)
-				message = NLS.bind(ProvUIMessages.RepositoryManipulationPage_RemoveConfirmSingleMessage, selections[0].getLocation().toString());
+				message = NLS.bind(ProvUIMessages.RepositoryManipulationPage_RemoveConfirmSingleMessage, URIUtil.toUnencodedString(selections[0].getLocation()));
 			if (MessageDialog.openQuestion(getShell(), ProvUIMessages.RepositoryManipulationPage_RemoveConfirmTitle, message)) {
 
 				changed = true;
 				for (int i = 0; i < selections.length; i++) {
-					getInput().cachedElements.remove(selections[i].getLocation().toString());
+					getInput().cachedElements.remove(URIUtil.toUnencodedString(selections[i].getLocation()));
 				}
 				asyncRefresh();
 			}
@@ -719,7 +719,7 @@ public class RepositoryManipulationPage extends PreferencePage implements IWorkb
 								MetadataRepositoryElement element = new MetadataRepositoryElement(getInput(), locations[i], true);
 								if (nicknames != null)
 									element.setNickname(nicknames[i]);
-								getInput().cachedElements.put(locations[i].toString(), element);
+								getInput().cachedElements.put(URIUtil.toUnencodedString(locations[i]), element);
 
 							}
 							changed = true;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/ProvElementLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/ProvElementLabelProvider.java
index 3264228..78893f4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/ProvElementLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/ProvElementLabelProvider.java
@@ -11,6 +11,7 @@
 
 package org.eclipse.equinox.internal.provisional.p2.ui.viewers;
 
+import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.internal.p2.ui.model.IIUElement;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepository;
@@ -54,14 +55,14 @@ public class ProvElementLabelProvider extends LabelProvider implements ITableLab
 			if (name != null && name.length() > 0) {
 				return name;
 			}
-			return ((IRepository) obj).getLocation().toString();
+			return URIUtil.toUnencodedString(((IRepository) obj).getLocation());
 		}
 		if (obj instanceof IRepositoryElement) {
 			String name = ((IRepositoryElement) obj).getName();
 			if (name != null && name.length() > 0) {
 				return name;
 			}
-			return ((IRepositoryElement) obj).getLocation().toString();
+			return URIUtil.toUnencodedString(((IRepositoryElement) obj).getLocation());
 		}
 		if (obj instanceof IArtifactKey) {
 			IArtifactKey key = (IArtifactKey) obj;
@@ -127,10 +128,10 @@ public class ProvElementLabelProvider extends LabelProvider implements ITableLab
 					return iu.getVersion().toString();
 				}
 				if (element instanceof IRepository) {
-					return ((IRepository) element).getLocation().toString();
+					return URIUtil.toUnencodedString(((IRepository) element).getLocation());
 				}
 				if (element instanceof IRepositoryElement) {
-					return ((IRepositoryElement) element).getLocation().toString();
+					return URIUtil.toUnencodedString(((IRepositoryElement) element).getLocation());
 				}
 				if (element instanceof IArtifactKey) {
 					IArtifactKey key = (IArtifactKey) element;
