commit 7b3153aabdcb293846df141a66843e5d52adba3d
Author: toberlies <>
Date:   Fri Jun 24 13:58:07 2011 +0000

    bug 325611: useFeatures attribute in .product file silently ignores included features/bundles depending on the attribute value
    
    Allow contributions to multi status returned by perform(...) in other methods

3	1	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
index 4e0061e..04d068d 100644
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
@@ -7,6 +7,7 @@
  * Contributors: 
  *   Code 9 - initial API and implementation
  *   IBM - ongoing development
+ *   SAP AG - ongoing development
  ******************************************************************************/
 package org.eclipse.equinox.p2.publisher.eclipse;
 
@@ -30,6 +31,7 @@ public class ProductAction extends AbstractPublisherAction {
 	protected File executablesFeatureLocation;
 	protected IProductDescriptor product;
 	protected IPublisherResult publisherResults;
+	protected MultiStatus finalStatus;
 
 	public ProductAction(String source, IProductDescriptor product, String flavor, File executablesFeatureLocation) {
 		super();
@@ -82,8 +84,8 @@ public class ProductAction extends AbstractPublisherAction {
 		monitor = SubMonitor.convert(monitor);
 		this.info = publisherInfo;
 		publisherResults = results;
+		finalStatus = new MultiStatus(EclipseInstallAction.class.getName(), 0, "publishing result", null); //$NON-NLS-1$
 		IPublisherAction[] actions = createActions(results);
-		MultiStatus finalStatus = new MultiStatus(EclipseInstallAction.class.getName(), 0, "publishing result", null); //$NON-NLS-1$
 		for (int i = 0; i < actions.length; i++) {
 			if (monitor.isCanceled())
 				return Status.CANCEL_STATUS;
commit efe861669515b887e58660a129680c4feb4f2998
Author: toberlies <>
Date:   Tue Jun 28 07:46:21 2011 +0000

    bug 325611: useFeatures attribute in .product file silently ignores included features/bundles depending on the attribute value

7	4	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/IProductDescriptor.java
35	0	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/Messages.java
0	1	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
23	0	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/messages.properties
15	3	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
2	0	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/messages.properties
0	32	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/Messages.java
0	22	bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/messages.properties
20	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/publisher/actions/ProductActionTest.java
22	0	bundles/org.eclipse.equinox.p2.tests/testData/ProductActionTest/mixedContentIgnored.product
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/IProductDescriptor.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/IProductDescriptor.java
index a51236d..e3bfbba 100644
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/IProductDescriptor.java
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/IProductDescriptor.java
@@ -31,19 +31,22 @@ public interface IProductDescriptor {
 	public String getLauncherName();
 
 	/**
-	 * Returns the list of all bundles in this product.
+	 * Returns the bundles listed in this product. Note: These bundles are only part of 
+	 * the product if {@link #useFeatures()} returns <code>false</code>.
 	 * @param includeFragments whether or not to include the fragments in the return value
-	 * @return the list of bundles in this product
+	 * @return the list of bundles in this product.
 	 */
 	public List<IVersionedId> getBundles(boolean includeFragments);
 
 	/**
-	 * Returns a list<VersionedName> of fragments that constitute this product.
+	 * Returns the fragments listed in the product.
+	 * @see #useFeatures()
 	 */
 	public List<IVersionedId> getFragments();
 
 	/**
-	 * Returns a List<VersionedName> of features that constitute this product.
+	 * Returns the features listed in the product. Note: These features are only part of 
+	 * the product if {@link #useFeatures()} returns <code>true</code>.
 	 */
 	public List<IVersionedId> getFeatures();
 
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/Messages.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/Messages.java
new file mode 100644
index 0000000..0acc6c2
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/Messages.java
@@ -0,0 +1,35 @@
+/*******************************************************************************
+ * Copyright (c) 2005, 2011 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *    IBM - Initial API and implementation
+ *    SAP AG - consolidation of publishers for PDE formats
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.publisher.eclipse;
+
+import org.eclipse.osgi.util.NLS;
+
+public class Messages extends NLS {
+	private static final String BUNDLE_NAME = "org.eclipse.equinox.internal.p2.publisher.eclipse.messages";//$NON-NLS-1$
+
+	// exception
+	public static String exception_missingElement;
+	public static String exception_featureParse;
+	public static String exception_productParse;
+
+	// feature parsing
+	public static String feature_parse_invalidIdOrVersion;
+	public static String feature_parse_emptyRequires;
+
+	public static String featuresInProductFileIgnored;
+	public static String bundlesInProductFileIgnored;
+
+	static {
+		// load message values from bundle file
+		NLS.initializeMessages(BUNDLE_NAME, Messages.class);
+	}
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
index d125381..51d8711 100644
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
@@ -44,7 +44,6 @@ import org.eclipse.equinox.p2.publisher.eclipse.FeatureEntry;
 import org.eclipse.osgi.service.datalocation.Location;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.internal.publishing.Activator;
-import org.eclipse.pde.internal.publishing.Messages;
 import org.xml.sax.Attributes;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/messages.properties b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/messages.properties
new file mode 100644
index 0000000..1b27f22
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/internal/p2/publisher/eclipse/messages.properties
@@ -0,0 +1,23 @@
+###############################################################################
+# Copyright (c) 2003, 2011 IBM Corporation and others.
+# All rights reserved. This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License v1.0
+# which accompanies this distribution, and is available at
+# http://www.eclipse.org/legal/epl-v10.html
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+#     SAP AG - consolidation of publishers for PDE formats
+###############################################################################
+
+### exception
+exception_missingElement = Unable to find element: {0}.
+exception_featureParse = Problems parsing the feature {0}.
+exception_productParse = Problems parsing the product file {0}.
+
+### feature parsing
+feature_parse_invalidIdOrVersion= Invalid ID \"{0}\" or version \"{1}\" encountered.
+feature_parse_emptyRequires = Error parsing feature: \"require\" must include at least one \"import\" element.
+
+featuresInProductFileIgnored=The product specifies features although useFeatures is false. These features are ignored.   
+bundlesInProductFileIgnored=The product specifies bundles although useFeatures is true. These bundles are ignored.
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
index 04d068d..35222d7 100644
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
@@ -15,9 +15,11 @@ import java.io.File;
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.publisher.eclipse.IProductDescriptor;
+import org.eclipse.equinox.internal.p2.publisher.eclipse.Messages;
 import org.eclipse.equinox.p2.metadata.*;
 import org.eclipse.equinox.p2.publisher.*;
 import org.eclipse.equinox.p2.publisher.actions.*;
+import org.eclipse.pde.internal.publishing.Activator;
 
 public class ProductAction extends AbstractPublisherAction {
 	protected String source;
@@ -80,6 +82,7 @@ public class ProductAction extends AbstractPublisherAction {
 		return new JREAction((String) null);
 	}
 
+	@Override
 	public IStatus perform(IPublisherInfo publisherInfo, IPublisherResult results, IProgressMonitor monitor) {
 		monitor = SubMonitor.convert(monitor);
 		this.info = publisherInfo;
@@ -120,12 +123,21 @@ public class ProductAction extends AbstractPublisherAction {
 
 	private void createRootAdvice() {
 		Collection<IVersionedId> list;
-		if (product.useFeatures())
+		if (product.useFeatures()) {
 			// TODO: We need a real namespace here
-			list = versionElements(listElements(product.getFeatures(), ".feature.group"), IInstallableUnit.NAMESPACE_IU_ID); //$NON-NLS-1$ 
-		else
+			list = versionElements(listElements(product.getFeatures(), ".feature.group"), IInstallableUnit.NAMESPACE_IU_ID); //$NON-NLS-1$
+
+			if (!product.getBundles(true).isEmpty()) {
+				finalStatus.add(new Status(IStatus.INFO, Activator.ID, Messages.bundlesInProductFileIgnored));
+			}
+		} else {
 			//TODO: We need a real namespace here
 			list = versionElements(listElements(product.getBundles(true), null), IInstallableUnit.NAMESPACE_IU_ID);
+
+			if (!product.getFeatures().isEmpty()) {
+				finalStatus.add(new Status(IStatus.INFO, Activator.ID, Messages.featuresInProductFileIgnored));
+			}
+		}
 		info.addAdvice(new RootIUAdvice(list));
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/messages.properties b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/messages.properties
new file mode 100644
index 0000000..e3c5bf7
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/equinox/p2/publisher/eclipse/messages.properties
@@ -0,0 +1,2 @@
+bundlesInProductFileIgnored=The value of "useFeatures" attribute in .product file is "true" so any bundles and fragments specified in your product are ignored.
+featuresInProductFileIgnored=The value of "useFeatures" attribute in .product file is either "false" or the attribute is missing so any features specified in your product are ignored.
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/Messages.java b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/Messages.java
deleted file mode 100644
index eb3d5ed..0000000
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/Messages.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2005, 2011 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *    IBM - Initial API and implementation
- *    SAP AG - consolidation of publishers for PDE formats
- *******************************************************************************/
-package org.eclipse.pde.internal.publishing;
-
-import org.eclipse.osgi.util.NLS;
-
-public class Messages extends NLS {
-	private static final String BUNDLE_NAME = "org.eclipse.equinox.internal.p2.publisher.eclipse.messages";//$NON-NLS-1$
-
-	// exception
-	public static String exception_missingElement;
-	public static String exception_featureParse;
-	public static String exception_productParse;
-
-	// feature parsing
-	public static String feature_parse_invalidIdOrVersion;
-	public static String feature_parse_emptyRequires;
-
-	static {
-		// load message values from bundle file
-		NLS.initializeMessages(BUNDLE_NAME, Messages.class);
-	}
-}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/messages.properties b/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/messages.properties
deleted file mode 100644
index f6c98ac..0000000
--- a/bundles/org.eclipse.equinox.p2.publisher.eclipse/src/org/eclipse/pde/internal/publishing/messages.properties
+++ /dev/null
@@ -1,22 +0,0 @@
-###############################################################################
-# Copyright (c) 2003, 2011 IBM Corporation and others.
-# All rights reserved. This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License v1.0
-# which accompanies this distribution, and is available at
-# http://www.eclipse.org/legal/epl-v10.html
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-#     SAP AG - consolidation of publishers for PDE formats
-###############################################################################
-### PDE Publishing plugin message catalog
-
-
-### exception
-exception_missingElement = Unable to find element: {0}.
-exception_featureParse = Problems parsing the feature {0}.
-exception_productParse = Problems parsing the product file {0}.
-
-### feature parsing
-feature_parse_invalidIdOrVersion= Invalid ID \"{0}\" or version \"{1}\" encountered.
-feature_parse_emptyRequires = Error parsing feature: \"require\" must include at least one \"import\" element.
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/publisher/actions/ProductActionTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/publisher/actions/ProductActionTest.java
index 6b792fa..ebfde78 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/publisher/actions/ProductActionTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/publisher/actions/ProductActionTest.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2008, 2010 Code 9 and others. All rights reserved. This
+ * Copyright (c) 2008, 2011 Code 9 and others. All rights reserved. This
  * program and the accompanying materials are made available under the terms of
  * the Eclipse Public License v1.0 which accompanies this distribution, and is
  * available at http://www.eclipse.org/legal/epl-v10.html
@@ -7,6 +7,7 @@
  * Contributors: 
  *   Code 9 - initial API and implementation
  *   IBM - ongoing development
+ *   SAP AG - ongoing development
  ******************************************************************************/
 package org.eclipse.equinox.p2.tests.publisher.actions;
 
@@ -18,7 +19,7 @@ import java.util.Collection;
 import java.util.Collections;
 import org.easymock.Capture;
 import org.easymock.EasyMock;
-import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.frameworkadmin.BundleInfo;
 import org.eclipse.equinox.internal.p2.metadata.RequiredCapability;
 import org.eclipse.equinox.internal.p2.publisher.eclipse.ProductFile;
@@ -397,4 +398,21 @@ public class ProductActionTest extends ActionTest {
 		queryResult = results.query(QueryUtil.createIUQuery(flavorArg + configSpecANY + "org.eclipse.core.commands"), new NullProgressMonitor());
 		assertEquals("2.0", 0, queryResultSize(queryResult));
 	}
+
+	public void testMessageForProductWithIgnoredContent() throws Exception {
+		ProductFile productFile = new ProductFile(TestData.getFile("ProductActionTest", "mixedContentIgnored.product").toString());
+		testAction = new ProductAction(source, productFile, flavorArg, executablesFeatureLocation);
+		IStatus status = testAction.perform(publisherInfo, publisherResult, null);
+
+		assertTrue(status instanceof MultiStatus);
+		IStatus[] children = ((MultiStatus) status).getChildren();
+		boolean messageFound = false;
+		for (IStatus child : children) {
+			// TODO the message should have a code identifying it
+			if (child.getMessage().contains("are ignored"))
+				messageFound = true;
+		}
+		// requested in bug 325611 
+		assertTrue("Expected a warning about redundant ignored content in product file", messageFound);
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/ProductActionTest/mixedContentIgnored.product b/bundles/org.eclipse.equinox.p2.tests/testData/ProductActionTest/mixedContentIgnored.product
new file mode 100644
index 0000000..192f355
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.tests/testData/ProductActionTest/mixedContentIgnored.product
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?pde version="3.5"?>
+
+<product uid="mixedContentIgnored" version="1.0.0.qualifier" useFeatures="false" includeLaunchers="true">
+
+   <configIni use="default">
+   </configIni>
+
+   <launcherArgs>
+      <vmArgsMac>-XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts</vmArgsMac>
+   </launcherArgs>
+
+   <plugins>
+      <plugin id="org.eclipse.osgi"/>
+   </plugins>
+
+   <features>
+      <feature id="org.eclipse.equinox.p2.core.feature" version="1.0.0.qualifier"/>
+   </features>
+
+
+</product>
commit e45af3d34527db9b4dc4d683da5ad5d515aea7b7
Author: Tobias Oberlies <tobias.oberlies@sap.com>
Date:   Mon Aug 1 16:57:08 2011 +0200

    325611 Publish correctly if action returns a warning
    
    - In case of a warning or info message, the publisher actions are
      expected to have performed their tasks correctly, and hence the
      published IUs can be stored in the metadata repository.
    - This change is a follow-up of bug 325611 and something that will be
      needed for enhancement 351056.

10	3	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
index 49eeb0c..76df608 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
@@ -229,7 +229,7 @@ public class Publisher {
 			IStatus finalStatus = null;
 			if (info.getArtifactRepository() != null) {
 				finalStatus = info.getArtifactRepository().executeBatch(artifactProcess, sub);
-				if (finalStatus.isOK())
+				if (!finalStatus.matches(IStatus.ERROR | IStatus.CANCEL))
 					// If the batch process didn't report any errors, then 
 					// Use the status from our actions
 					finalStatus = artifactProcess.getStatus();
@@ -240,17 +240,24 @@ public class Publisher {
 
 			if (Tracing.DEBUG_PUBLISHING)
 				Tracing.debug("Publishing complete. Result=" + finalStatus); //$NON-NLS-1$
+
+			// if there were no errors, publish all the ius.
+			if (finalStatus.isOK() || finalStatus.matches(IStatus.INFO | IStatus.WARNING))
+				savePublishedIUs();
+
 			if (!finalStatus.isOK())
 				return finalStatus;
+			return Status.OK_STATUS;
 		} finally {
 			sub.done();
 		}
-		// if there were no errors, publish all the ius.
+	}
+
+	protected void savePublishedIUs() {
 		IMetadataRepository metadataRepository = info.getMetadataRepository();
 		if (metadataRepository != null) {
 			Collection<IInstallableUnit> ius = results.getIUs(null, null);
 			metadataRepository.addInstallableUnits(ius);
 		}
-		return Status.OK_STATUS;
 	}
 }
