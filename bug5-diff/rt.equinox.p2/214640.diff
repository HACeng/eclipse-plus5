commit f9fbd07e3e01e248ff944835a0799f10659b2525
Author: Susan Franklin <sfranklin>
Date:   Wed Feb 13 19:07:48 2008 +0000

    Bug 214640 - [prov] [ui] ProvUI exception/status methods should take log hints

2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
3	2	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
3	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
3	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
3	3	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
2	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
3	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
4	3	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
3	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIActivator.java
6	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
12	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
7	13	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
11	15	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
19	8	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
4	10	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
5	11	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
7	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ProvElement.java
24	15	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvUI.java
13	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
3	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
9	13	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
3	9	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
6	10	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
11	15	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableArtifactRepositoryManager.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableMetadataRepositoryManager.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableProfileRegistry.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableUpdates.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index 892c093..f0af4e2 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -34,6 +34,7 @@ import org.eclipse.ui.ISharedImages;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.PropertyDialogAction;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * This view allows users to interact with installed profiles.
@@ -243,7 +244,7 @@ public class ProfilesView extends ProvView {
 				ids[i] = allProfiles[i].getProfileId();
 			return ids;
 		} catch (ProvisionException e) {
-			ProvUI.handleException(e, ProvAdminUIMessages.ProfilesView_0);
+			ProvUI.handleException(e, ProvAdminUIMessages.ProfilesView_ErrorRetrievingProfiles, StatusManager.LOG);
 			return new String[0];
 		}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
index 08326c3..fa05603 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
@@ -26,6 +26,7 @@ import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUti
 import org.eclipse.equinox.internal.provisional.p2.ui.query.*;
 import org.eclipse.equinox.internal.provisional.p2.updatechecker.UpdateEvent;
 import org.eclipse.jface.preference.IPreferenceStore;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Provides the queries appropriate for the SDK UI.
@@ -113,7 +114,7 @@ public class ProvAdminQueryProvider implements IQueryProvider {
 					try {
 						profile = ProvisioningUtil.getProfile(((UpdateEvent) element).getProfileId());
 					} catch (ProvisionException e) {
-						ProvUI.handleException(e, null);
+						ProvUI.handleException(e, ProvAdminUIMessages.ProvAdminQueryProvider_UpdateQueryError, StatusManager.LOG);
 						return null;
 					}
 					toUpdate = ((UpdateEvent) element).getIUs();
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
index 8bc5906..8236690 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
@@ -37,7 +37,7 @@ public class ProvAdminUIMessages extends NLS {
 	public static String ArtifactRepositoriesView_AddRepositoryLabel;
 	public static String ArtifactRepositoriesView_RemoveRepositoryTooltip;
 	public static String ArtifactRepositoriesView_RemoveRepositoryOperationLabel;
-	public static String ProfilesView_0;
+	public static String ProfilesView_ErrorRetrievingProfiles;
 	public static String ProfilesView_AddProfileTooltip;
 	public static String ProfilesView_AddProfileLabel;
 	public static String ProfilesView_RemoveProfileLabel;
@@ -45,6 +45,7 @@ public class ProvAdminUIMessages extends NLS {
 	public static String RepositoriesView_RemoveCommandLabel;
 	// Preferences
 	public static String InstalledIUPropertyPage_NoInfoAvailable;
+	public static String ProvAdminQueryProvider_UpdateQueryError;
 	public static String ProvisioningPrefPage_HideSystemRepos;
 	public static String ProvisioningPrefPage_ShowGroupsOnly;
 	public static String ProvisioningPrefPage_ShowInstallRootsOnly;
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
index 7c3203a..e71fd36 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
@@ -23,6 +23,7 @@ import org.eclipse.swt.events.ModifyListener;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An IUPropertiesGroup is a reusable UI component that displays and edits the 
@@ -82,7 +83,7 @@ public class IUProfilePropertiesGroup extends IUGroup {
 		try {
 			return ProvisioningUtil.getProfile(element.getProfileId());
 		} catch (ProvisionException e) {
-			ProvUI.handleException(e, NLS.bind(ProvAdminUIMessages.IUProfilePropertiesGroup_InvalidProfileID, element.getProfileId()));
+			ProvUI.handleException(e, NLS.bind(ProvAdminUIMessages.IUProfilePropertiesGroup_InvalidProfileID, element.getProfileId()), StatusManager.LOG);
 			return null;
 		}
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
index 3c7d818..55a954e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
@@ -9,6 +9,7 @@
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 
+ProvAdminQueryProvider_UpdateQueryError=Unexpected error while looking for updates
 ProvisioningPrefPage_Description=Provisioning
 ProvisioningPrefPage_ShowGroupsOnly=Show only &group IU's in profile or repository views
 ProvisioningPrefPage_ShowInstallRootsOnly=Show only the install &roots in a profile
@@ -31,7 +32,7 @@ ArtifactRepositoriesView_AddRepositoryLabel=Add repository...
 ArtifactRepositoriesView_AddRepositoryTooltip=Add a new artifact repository
 ArtifactRepositoriesView_RemoveRepositoryTooltip=Remove the selected artifact repositories
 ArtifactRepositoriesView_RemoveRepositoryOperationLabel=Remove Artifact Repositories
-ProfilesView_0=Error retrieving profiles
+ProfilesView_ErrorRetrievingProfiles=Error retrieving profiles
 ProfilesView_AddProfileTooltip=Add a new profile
 ProvView_RefreshCommandTooltip=Refresh the items in the view.
 ProfilesView_AddProfileLabel=Add profile...
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
index 141b358..b9a50c1 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
@@ -15,6 +15,7 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
+import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.updatechecker.IUpdateListener;
 import org.eclipse.equinox.internal.provisional.p2.updatechecker.UpdateChecker;
 import org.eclipse.ui.IStartup;
@@ -48,7 +49,7 @@ public class AutomaticUpdateScheduler implements IStartup {
 		if (checker == null) {
 			// Something did not initialize properly
 			IStatus status = new Status(IStatus.ERROR, ProvSDKUIActivator.PLUGIN_ID, ProvSDKMessages.AutomaticUpdateScheduler_UpdateNotInitialized);
-			StatusManager.getManager().handle(status, StatusManager.LOG);
+			ProvUI.reportStatus(status, StatusManager.LOG);
 			return;
 		}
 		try {
@@ -56,7 +57,7 @@ public class AutomaticUpdateScheduler implements IStartup {
 		} catch (ProvisionException e) {
 			profileId = null;
 			IStatus status = new Status(IStatus.ERROR, ProvSDKUIActivator.PLUGIN_ID, ProvSDKMessages.UpdateHandler_NoProfilesDefined, e);
-			StatusManager.getManager().handle(status, StatusManager.LOG);
+			ProvUI.reportStatus(status, StatusManager.LOG);
 			return;
 		}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index e121627..a5ac640 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -25,6 +25,7 @@ public class ProvSDKMessages extends NLS {
 		NLS.initializeMessages(BUNDLE_NAME, ProvSDKMessages.class);
 	}
 	public static String AddColocatedRepositoryDialog_InvalidURL;
+	public static String RepositoryManipulationDialog_ErrorRetrievingSites;
 	public static String RepositoryManipulationDialog_AddButton;
 	public static String RepositoryManipulationDialog_LocationColumnHeader;
 	public static String RepositoryManipulationDialog_NameColumnHeader;
@@ -87,6 +88,7 @@ public class ProvSDKMessages extends NLS {
 	public static String AutomaticUpdatesDialog_DownloadedNotification;
 	public static String AutomaticUpdatesDialog_UpdatesAvailableTitle;
 	public static String AutomaticUpdater_AutomaticDownloadOperationName;
+	public static String AutomaticUpdater_ErrorCheckingUpdates;
 	public static String AutomaticUpdatesDialog_UpdatesFoundNotification;
 	public static String AutomaticUpdatesPreferencePage_UpdateSchedule;
 	public static String AutomaticUpdatesPreferencePage_findOnStart;
@@ -108,6 +110,7 @@ public class ProvSDKMessages extends NLS {
 	public static String ProvisioningPreferencePage_enableGC;
 	public static String ProvisioningPreferencePage_gcImmediately;
 	public static String ProvisioningPreferencePage_gcRetentionTime;
+	public static String ProvSDKQueryProvider_ErrorRetrievingProfile;
 	public static String ProvSDKUIActivator_ErrorWritingLicenseRegistry;
 	public static String ProvSDKUIActivator_LicenseManagerReadError;
 	public static String ProvSDKUIActivator_NoSelfProfile;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
index 3195f46..c518e1e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
@@ -25,6 +25,8 @@ import org.eclipse.equinox.internal.provisional.p2.ui.model.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.internal.provisional.p2.ui.query.*;
 import org.eclipse.equinox.internal.provisional.p2.updatechecker.UpdateEvent;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Provides the queries appropriate for the SDK UI.
@@ -87,7 +89,7 @@ public class ProvSDKQueryProvider implements IQueryProvider {
 					try {
 						profile = ProvisioningUtil.getProfile(((UpdateEvent) element).getProfileId());
 					} catch (ProvisionException e) {
-						ProvUI.handleException(e, null);
+						ProvUI.handleException(e, NLS.bind(ProvSDKMessages.ProvSDKQueryProvider_ErrorRetrievingProfile, ((UpdateEvent) element).getProfileId()), StatusManager.LOG);
 						return null;
 					}
 					toUpdate = ((UpdateEvent) element).getIUs();
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
index 76a0735..aedd28c 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
@@ -93,7 +93,7 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 				getLicenseManager().read(stream);
 				stream.close();
 			} catch (IOException e) {
-				ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, ProvSDKMessages.ProvSDKUIActivator_LicenseManagerReadError, e));
+				ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, ProvSDKMessages.ProvSDKUIActivator_LicenseManagerReadError, e), StatusManager.LOG);
 			}
 		}
 	}
@@ -109,7 +109,7 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 			getLicenseManager().write(stream);
 			stream.close();
 		} catch (IOException e) {
-			ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, ProvSDKMessages.ProvSDKUIActivator_ErrorWritingLicenseRegistry, e));
+			ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, ProvSDKMessages.ProvSDKUIActivator_ErrorWritingLicenseRegistry, e), StatusManager.LOG);
 		}
 	}
 
@@ -157,7 +157,7 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 		// Get the profile of the running system.
 		IProfile profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
 		if (profile == null) {
-			StatusManager.getManager().handle(getNoSelfProfileStatus(), StatusManager.LOG);
+			ProvUI.reportStatus(getNoSelfProfileStatus(), StatusManager.LOG);
 			IProfile[] profiles = ProvisioningUtil.getProfiles();
 			if (profiles.length > 0)
 				return profiles[0].getProfileId();
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
index 436afc2..2d1a0d7 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
@@ -37,6 +37,7 @@ import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.dialogs.PropertyDialogAction;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Dialog that allows users to update, add, or remove repositories.
@@ -188,7 +189,7 @@ public class RepositoryManipulationDialog extends TrayDialog {
 				try {
 					new AddColocatedRepositoryDialog(getShell(), ProvisioningUtil.getMetadataRepositories(IMetadataRepositoryManager.REPOSITORIES_NON_SYSTEM)).open();
 				} catch (ProvisionException e) {
-					ProvUI.handleException(e, null);
+					ProvUI.handleException(e, ProvSDKMessages.RepositoryManipulationDialog_ErrorRetrievingSites, StatusManager.BLOCK | StatusManager.LOG);
 				}
 			}
 		});
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 328ab69..29162a4 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -19,6 +19,7 @@ UpdateAndInstallDialog_RevertActionLabel=&Revert configuration...
 UpdateHandler_SDKUpdateUIMessageTitle=Software Updates
 UpdateHandler_NoProfilesDefined=There are no profiles defined.  Cannot invoke the update UI.
 UpdateHandler_NoProfileInstanceDefined=The software configuration could not be found.  Cannot invoke the update UI.
+RepositoryManipulationDialog_ErrorRetrievingSites=Error trying to retrieve the list of sites.
 RepositoryManipulationDialog_AddButton=&Add...
 RepositoryManipulationDialog_LocationColumnHeader=Location
 RepositoryManipulationDialog_NameColumnHeader=Name
@@ -71,6 +72,7 @@ AutomaticUpdateScheduler_UpdateNotInitialized=The update checker service is not
 AutomaticUpdatesDialog_DownloadedNotification=Updates have been downloaded.  You may review and install them when you are ready.
 AutomaticUpdatesDialog_UpdatesAvailableTitle=Updates Available
 AutomaticUpdater_AutomaticDownloadOperationName=Automatic updates download
+AutomaticUpdater_ErrorCheckingUpdates=Unexpected error while checking the validity of updates.
 AutomaticUpdatesDialog_UpdatesFoundNotification=There are updates available for your software.  You may review and install them when you are ready.
 AutomaticUpdatesPreferencePage_UpdateSchedule=&Update schedule
 AutomaticUpdatesPreferencePage_findOnStart=Look for updates each time &platform is started
@@ -85,6 +87,7 @@ AutomaticUpdatesPreferencePage_RemindGroup=&When updates are found
 AutomaticUpdatesPreferencePage_RemindSchedule=&Remind me about updates every:
 AutomaticUpdatesPreferencePage_RemindOnce=Notify me &once about updates
 AutomaticUpdatesJob_Updates=Updates
+ProvSDKQueryProvider_ErrorRetrievingProfile=Error while retrieving profile {0}
 ProvSDKUIActivator_ErrorWritingLicenseRegistry=Error writing license registry.  Accepted licenses will not be remembered.
 ProvSDKUIActivator_LicenseManagerReadError=Error reading license registry.  Accepted licenses will not be remembered.
 ProvSDKUIActivator_NoSelfProfile=Could not locate the running profile instance
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
index e6afa3c..d970d3e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
@@ -41,6 +41,7 @@ import org.eclipse.swt.SWT;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.*;
 import org.eclipse.ui.progress.WorkbenchJob;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * @since 3.4
@@ -101,7 +102,7 @@ public class AutomaticUpdater implements IUpdateListener {
 									}
 								});
 							} else if (status.getSeverity() != IStatus.CANCEL) {
-								ProvUI.reportStatus(status);
+								ProvUI.reportStatus(status, StatusManager.LOG);
 							}
 						}
 					});
@@ -115,7 +116,7 @@ public class AutomaticUpdater implements IUpdateListener {
 			}
 
 		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
+			ProvUI.handleException(e, ProvSDKMessages.AutomaticUpdater_ErrorCheckingUpdates, StatusManager.LOG);
 		}
 
 	}
@@ -140,7 +141,7 @@ public class AutomaticUpdater implements IUpdateListener {
 								if (ProvisioningUtil.getPlanner().updatesFor(iu, new ProvisioningContext(), pm).length > 0)
 									result.accept(iusWithUpdates[i]);
 							} catch (ProvisionException e) {
-								ProvUI.handleException(e, null);
+								ProvUI.handleException(e, ProvSDKMessages.AutomaticUpdater_ErrorCheckingUpdates, StatusManager.LOG);
 								continue;
 							}
 						}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIActivator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIActivator.java
index b2ca759..a3f3d43 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIActivator.java
@@ -25,6 +25,7 @@ import org.eclipse.equinox.internal.provisional.p2.ui.viewers.StructuredViewerPr
 import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.eclipse.ui.statushandlers.StatusManager;
 import org.osgi.framework.*;
 import org.osgi.service.packageadmin.PackageAdmin;
 
@@ -126,7 +127,8 @@ public class ProvUIActivator extends AbstractUIPlugin {
 									});
 							}
 						} catch (ProvisionException e) {
-							ProvUI.handleException(e, null);
+							ProvUI.handleException(e, ProvUIMessages.ProvUIActivator_ExceptionDuringProfileChange, StatusManager.LOG);
+
 						}
 					}
 				}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 9c74405..ba8d864 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -56,6 +56,7 @@ public class ProvUIMessages extends NLS {
 	public static String IULicensePropertyPage_ViewLicenseLabel;
 	public static String ProfileElement_InvalidProfile;
 	public static String ProfileModificationAction_NullPlan;
+	public static String ProfileModificationAction_UnexpectedError;
 	public static String ProfileModificationWizardPage_DetailsLabel;
 	public static String ProfileModificationWizardPage_NothingSelected;
 	public static String ProfileModificationWizardPage_ProfileNotFound;
@@ -88,6 +89,7 @@ public class ProvUIMessages extends NLS {
 	public static String ProvisioningOperation_ExecuteErrorTitle;
 	public static String ProvisioningOperation_RedoErrorTitle;
 	public static String ProvisioningOperation_UndoErrorTitle;
+	public static String ProvisioningOperationRunner_ErrorExecutingOperation;
 	public static String InstallIUOperationLabel;
 	public static String InstallIUOperationLabelWithMnemonic;
 	public static String InstallIUCommandLabel;
@@ -141,11 +143,14 @@ public class ProvUIMessages extends NLS {
 	public static String UpdateAction_UpdatesAvailableTitle;
 	public static String PlatformUpdateTitle;
 	public static String PlatformRestartMessage;
+	public static String ProvUI_ErrorDuringApplyConfig;
 	public static String ProvUI_InformationTitle;
 	public static String ProvUI_NameColumnTitle;
 	public static String ProvUI_SizeColumnTitle;
 	public static String ProvUI_VersionColumnTitle;
 	public static String ProvUI_IDColumnTitle;
+	public static String ProvUI_WarningTitle;
+	public static String ProvUIActivator_ExceptionDuringProfileChange;
 	public static String ProvUILicenseManager_ParsingError;
 	public static String OptionalPlatformRestartMessage;
 	public static String QueryableArtifactRepositoryManager_RepositoryQueryProgress;
@@ -162,6 +167,7 @@ public class ProvUIMessages extends NLS {
 	public static String RevertDialog_RevertOperationLabel;
 	public static String RevertDialog_SelectMessage;
 	public static String RevertDialog_Title;
+	public static String RevertProfileWizardPage_ErrorRetrievingHistory;
 
 	// Operations
 	public static String UpdateAndInstallGroup_Properties;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
index 3f0a569..040f61c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
@@ -17,6 +17,7 @@ import java.util.List;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.*;
@@ -24,6 +25,7 @@ import org.eclipse.jface.dialogs.ProgressMonitorDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.ISelectionProvider;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 public abstract class ProfileModificationAction extends ProvisioningAction {
 
@@ -64,7 +66,11 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 		final String id = targetProfileId;
 		IRunnableWithProgress runnable = new IRunnableWithProgress() {
 			public void run(IProgressMonitor monitor) {
-				plan[0] = getProvisioningPlan(ius, id, monitor);
+				try {
+					plan[0] = getProvisioningPlan(ius, id, monitor);
+				} catch (ProvisionException e) {
+					ProvUI.handleException(e, ProvUIMessages.ProfileModificationAction_UnexpectedError, StatusManager.BLOCK | StatusManager.LOG);
+				}
 			}
 		};
 		try {
@@ -72,7 +78,7 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 		} catch (InterruptedException e) {
 			// don't report thread interruption
 		} catch (InvocationTargetException e) {
-			ProvUI.handleException(e.getCause(), null);
+			ProvUI.handleException(e.getCause(), ProvUIMessages.ProfileModificationAction_UnexpectedError, StatusManager.BLOCK | StatusManager.LOG);
 		}
 
 		if (validatePlan(plan[0]))
@@ -91,18 +97,19 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 		if (plan != null) {
 			if (plan.getStatus().isOK())
 				return true;
-			ProvUI.reportStatus(plan.getStatus());
+			// TODO give user option to continue anyway to wizard
+			ProvUI.reportStatus(plan.getStatus(), StatusManager.BLOCK | StatusManager.LOG);
 			return false;
 		}
 		// plan was null, no exception thrown.  
-		ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProfileModificationAction_NullPlan));
+		ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProfileModificationAction_NullPlan), StatusManager.BLOCK | StatusManager.LOG);
 		return false;
 	}
 
 	/*
 	 * Get a provisioning plan for this action.
 	 */
-	protected abstract ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor);
+	protected abstract ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException;
 
 	protected abstract void performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan);
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
index 85f874e..fd2cac0 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
@@ -24,6 +24,7 @@ import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.browser.IWebBrowser;
 import org.eclipse.ui.browser.IWorkbenchBrowserSupport;
 import org.eclipse.ui.dialogs.PropertyPage;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * PropertyPage that shows an IU's properties
@@ -62,7 +63,7 @@ public abstract class IUPropertyPage extends PropertyPage {
 			IWebBrowser browser = support.getExternalBrowser();
 			browser.openURL(url);
 		} catch (PartInitException e) {
-			ProvUI.handleException(e, ProvUIMessages.IUGeneralInfoPropertyPage_CouldNotOpenBrowser);
+			ProvUI.handleException(e, ProvUIMessages.IUGeneralInfoPropertyPage_CouldNotOpenBrowser, StatusManager.LOG | StatusManager.BLOCK);
 		}
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
index 2e4584f..0b83949 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
@@ -16,7 +16,6 @@ import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 
 public class InstallWizardPage extends UpdateOrInstallWizardPage {
@@ -31,18 +30,13 @@ public class InstallWizardPage extends UpdateOrInstallWizardPage {
 		return ProvUIMessages.InstallIUOperationLabel;
 	}
 
-	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) {
-		try {
-			IInstallableUnit[] selected = elementsToIUs(selectedElements);
-			ProfileChangeRequest changeRequest = ProfileChangeRequest.createByProfileId(getProfileId());
-			changeRequest.addInstallableUnits(selected);
-			for (int i = 0; i < selected.length; i++) {
-				changeRequest.setInstallableUnitProfileProperty(selected[i], IInstallableUnit.PROP_PROFILE_ROOT_IU, Boolean.toString(true));
-			}
-			return ProvisioningUtil.getProvisioningPlan(changeRequest, getProvisioningContext(), monitor);
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
+	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) throws ProvisionException {
+		IInstallableUnit[] selected = elementsToIUs(selectedElements);
+		ProfileChangeRequest changeRequest = ProfileChangeRequest.createByProfileId(getProfileId());
+		changeRequest.addInstallableUnits(selected);
+		for (int i = 0; i < selected.length; i++) {
+			changeRequest.setInstallableUnitProfileProperty(selected[i], IInstallableUnit.PROP_PROFILE_ROOT_IU, Boolean.toString(true));
 		}
-		return null;
+		return ProvisioningUtil.getProvisioningPlan(changeRequest, getProvisioningContext(), monitor);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index b904235..9d26e04 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -21,14 +21,12 @@ import org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider;
 import org.eclipse.equinox.internal.p2.ui.viewers.StaticContentProvider;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.internal.provisional.p2.ui.model.IUElement;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProfileModificationOperation;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.internal.provisional.p2.ui.viewers.*;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.IMessageProvider;
@@ -39,6 +37,7 @@ import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 public abstract class ProfileModificationWizardPage extends WizardPage {
 	private static final int DEFAULT_HEIGHT = 20;
@@ -176,15 +175,6 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return elementsToIUs(getCheckedElements());
 	}
 
-	protected IProfile getProfile() {
-		try {
-			return ProvisioningUtil.getProfile(profileId);
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, ProvUIMessages.ProfileModificationWizardPage_ProfileNotFound);
-		}
-		return null;
-	}
-
 	protected String getProfileId() {
 		return profileId;
 	}
@@ -210,14 +200,20 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 			} else
 				getContainer().run(true, true, new IRunnableWithProgress() {
 					public void run(IProgressMonitor monitor) {
-						currentPlan = computeProvisioningPlan(selections, monitor);
+						try {
+							currentPlan = computeProvisioningPlan(selections, monitor);
+						} catch (ProvisionException e) {
+							currentPlan = null;
+							ProvUI.handleException(e.getCause(), ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, StatusManager.LOG);
+							setMessage(ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, IMessageProvider.ERROR);
+						}
 					}
 				});
 		} catch (InterruptedException e) {
 			// Nothing to report if thread was interrupted
 		} catch (InvocationTargetException e) {
 			currentPlan = null;
-			ProvUI.handleException(e.getCause(), null);
+			ProvUI.handleException(e.getCause(), ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, StatusManager.LOG);
 			setMessage(ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, IMessageProvider.ERROR);
 		}
 		if (currentPlan != null)
@@ -234,7 +230,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 					messageType = IMessageProvider.WARNING;
 				setMessage(currentPlan.getStatus().getMessage(), messageType);
 				setPageComplete(false);
-				ProvUI.reportStatus(currentPlan.getStatus());
+				ProvUI.reportStatus(currentPlan.getStatus(), StatusManager.LOG);
 			}
 	}
 
@@ -242,7 +238,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return new ProfileModificationOperation(getOperationLabel(), profileId, plan);
 	}
 
-	protected abstract ProvisioningPlan computeProvisioningPlan(Object[] checkedElements, IProgressMonitor monitor);
+	protected abstract ProvisioningPlan computeProvisioningPlan(Object[] checkedElements, IProgressMonitor monitor) throws ProvisionException;
 
 	protected void setInitialCheckState() {
 		// The default is to check everything because 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
index 3eeee76..dcf9505 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
@@ -26,8 +26,8 @@ import org.eclipse.equinox.internal.provisional.p2.ui.model.RollbackRepositoryEl
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.query.IQueryProvider;
 import org.eclipse.equinox.internal.provisional.p2.ui.viewers.*;
+import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.wizard.WizardPage;
@@ -37,6 +37,7 @@ import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * @since 3.4
@@ -133,7 +134,7 @@ public class RevertProfileWizardPage extends WizardPage {
 			element.setQueryProvider(queryProvider);
 			return element;
 		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
+			ProvUI.handleException(e, ProvUIMessages.RevertProfileWizardPage_ErrorRetrievingHistory, StatusManager.BLOCK | StatusManager.LOG);
 			return null;
 		}
 	}
@@ -187,21 +188,31 @@ public class RevertProfileWizardPage extends WizardPage {
 				try {
 					plan[0] = ProvisioningUtil.getRevertPlan(iu, monitor);
 				} catch (ProvisionException e) {
-					ProvUI.handleException(e, ProvUIMessages.RevertDialog_RevertError);
+					plan[0] = null;
+					ProvUI.handleException(e.getCause(), ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, StatusManager.LOG);
+					setMessage(ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, IMessageProvider.ERROR);
 				}
 			}
 		};
 		try {
 			getContainer().run(true, true, runnable);
-			ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertDialog_RevertOperationLabel, profileId, plan[0]);
-			Job job = ProvisioningOperationRunner.schedule(op, getShell());
-			job.join();
+			if (plan[0] != null) {
+				if (plan[0].getStatus().isOK()) {
+					ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertDialog_RevertOperationLabel, profileId, plan[0]);
+					Job job = ProvisioningOperationRunner.schedule(op, getShell());
+					job.join();
+					return true;
+				}
+				ProvUI.reportStatus(plan[0].getStatus(), StatusManager.LOG);
+				setMessage(ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, IMessageProvider.ERROR);
+			}
 		} catch (InterruptedException e) {
 			// don't report thread interruption
 		} catch (InvocationTargetException e) {
-			ProvUI.handleException(e.getCause(), ProvUIMessages.RevertDialog_RevertError);
+			ProvUI.handleException(e.getCause(), ProvUIMessages.RevertDialog_RevertError, StatusManager.LOG);
+			setMessage(ProvUIMessages.RevertDialog_RevertError, IMessageProvider.ERROR);
 		}
-		return true;
+		return false;
 	}
 
 	public boolean isPageComplete() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
index 639f4bf..68acad3 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
@@ -16,7 +16,6 @@ import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 
 public class UninstallWizardPage extends ProfileModificationWizardPage {
@@ -27,15 +26,10 @@ public class UninstallWizardPage extends ProfileModificationWizardPage {
 		setDescription(ProvUIMessages.UninstallDialog_UninstallMessage);
 	}
 
-	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) {
-		try {
-			ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
-			request.removeInstallableUnits(elementsToIUs(selectedElements));
-			return ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
-		}
-		return null;
+	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) throws ProvisionException {
+		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
+		request.removeInstallableUnits(elementsToIUs(selectedElements));
+		return ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
 	}
 
 	protected String getOperationLabel() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 4844b9a..6c7c8a6 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -19,7 +19,6 @@ import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IUpdateDescriptor;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.swt.widgets.Text;
 
@@ -55,16 +54,11 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 		return ProvUIMessages.UpdateIUOperationLabel;
 	}
 
-	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) {
-		try {
-			ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
-			request.removeInstallableUnits(getIUsToReplace(selectedElements));
-			request.addInstallableUnits(elementsToIUs(selectedElements));
-			return ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
-		}
-		return null;
+	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) throws ProvisionException {
+		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
+		request.removeInstallableUnits(getIUsToReplace(selectedElements));
+		request.addInstallableUnits(elementsToIUs(selectedElements));
+		return ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
 	}
 
 	protected void setInitialCheckState() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 36bcba0..864dda4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -11,6 +11,7 @@
 
 ProfileElement_InvalidProfile=Invalid profile ID {0}
 ProfileModificationAction_NullPlan=Unexpected error while resolving.  Null provisioning plan encountered.
+ProfileModificationAction_UnexpectedError=Unexpected error encountered while preparing for the operation.
 ProfileModificationWizardPage_DetailsLabel=Details
 ProfileModificationWizardPage_NothingSelected=You must check some items in order to continue.
 ProfileModificationWizardPage_ProfileNotFound=Could not resolve profile ID.
@@ -35,6 +36,7 @@ ProvisioningUtil_RepositoriesSearched=The following repositories were searched:
 ProvisioningOperation_ExecuteErrorTitle=Error while executing the "{0}" operation
 ProvisioningOperation_RedoErrorTitle=Error while redoing the "{0}" operation
 ProvisioningOperation_UndoErrorTitle=Error while undoing the "{0}" operation
+ProvisioningOperationRunner_ErrorExecutingOperation=Unexpected error while trying to run {0}
 InstallIUOperationLabel=Install
 InstallIUOperationLabelWithMnemonic=&Install
 InstallIUCommandLabel=&Install...
@@ -120,11 +122,14 @@ InstallDialog_InstallSelectionMessage=Review and confirm that the checked items
 PlatformUpdateTitle = Software Updates
 PlatformRestartMessage = You will need to restart the system for the changes to take effect. \
 Would you like to restart now?
+ProvUI_ErrorDuringApplyConfig=Error while attempting to apply changes.  You must restart for changes to take effect.
 ProvUI_InformationTitle=Information
 ProvUI_NameColumnTitle=Name
 ProvUI_SizeColumnTitle=Size
 ProvUI_VersionColumnTitle=Version
 ProvUI_IDColumnTitle=Identifier
+ProvUI_WarningTitle=Warning
+ProvUIActivator_ExceptionDuringProfileChange=Exception while handling profile change event.
 ProvUILicenseManager_ParsingError=Error parsing the accepted license registry
 
 OptionalPlatformRestartMessage = It is recommended you restart the system for the changes to take effect, \
@@ -147,8 +152,9 @@ RevertDialog_ConfigsLabel=&Previous configurations:
 RevertDialog_ConfirmRestartMessage=This operation requires restarting the workbench.  Would you like to proceed?
 RevertDialog_Description=Choose a previously installed configuration to which you would like to revert.
 RevertDialog_PageTitle=Revert to a Previous Configuration
-RevertDialog_RevertError=Error while reverting configuration
+RevertDialog_RevertError=Unexpected error while reverting configuration.  The configuration was not reverted.
 RevertDialog_RevertOperationLabel=Revert configuration
 RevertDialog_SelectMessage=Select a configuration from the list on the left.  The contents of that configuration will be shown on the right.
 RevertDialog_Title=Revert Software Configuration
 
+RevertProfileWizardPage_ErrorRetrievingHistory=Unexpected error while getting the history list.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ProvElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ProvElement.java
index 00b17c5..ac84252 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ProvElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/ProvElement.java
@@ -12,6 +12,7 @@ package org.eclipse.equinox.internal.p2.ui.model;
 
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
+import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUIImages;
 import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.swt.graphics.Image;
@@ -84,7 +85,7 @@ public abstract class ProvElement implements IWorkbenchAdapter, IAdaptable {
 			message = e.getMessage();
 		}
 		IStatus status = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, 0, message, e);
-		StatusManager.getManager().handle(status, StatusManager.LOG);
+		ProvUI.reportStatus(status, StatusManager.LOG);
 	}
 
 	public boolean hasChildren(Object o) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvUI.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvUI.java
index fa55cf0..03d07b5 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvUI.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvUI.java
@@ -73,22 +73,31 @@ public class ProvUI {
 		return display.getActiveShell();
 	}
 
-	public static IStatus handleException(Throwable t, String message) {
+	public static IStatus handleException(Throwable t, String message, int style) {
 		if (message == null && t != null) {
 			message = t.getMessage();
 		}
 		IStatus status = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, 0, message, t);
-		StatusManager.getManager().handle(status, StatusManager.SHOW | StatusManager.LOG);
+		StatusManager.getManager().handle(status, style);
 		return status;
 	}
 
-	public static void reportStatus(IStatus status) {
-		// TODO investigate why platform status manager is so ugly with INFO status
-		if (status.getSeverity() == IStatus.INFO) {
-			MessageDialog.openInformation(null, ProvUIMessages.ProvUI_InformationTitle, status.getMessage());
-			return;
+	public static void reportStatus(IStatus status, int style) {
+		// workaround for
+		// https://bugs.eclipse.org/bugs/show_bug.cgi?id=211933
+		if ((style & StatusManager.BLOCK) == StatusManager.BLOCK) {
+			if (status.getSeverity() == IStatus.INFO) {
+				MessageDialog.openInformation(null, ProvUIMessages.ProvUI_InformationTitle, status.getMessage());
+				// unset the block bit
+				style = style & ~StatusManager.BLOCK;
+			} else if (status.getSeverity() == IStatus.WARNING) {
+				MessageDialog.openWarning(null, ProvUIMessages.ProvUI_WarningTitle, status.getMessage());
+				// unset the block bit
+				style = style & ~StatusManager.BLOCK;
+			}
 		}
-		StatusManager.getManager().handle(status, StatusManager.SHOW | StatusManager.LOG);
+		if (style != 0)
+			StatusManager.getManager().handle(status, style);
 	}
 
 	public static IUColumnConfig[] getIUColumnConfig() {
@@ -106,7 +115,7 @@ public class ProvUI {
 			try {
 				configurator.applyConfiguration();
 			} catch (IOException e) {
-				ProvUI.handleException(e, null);
+				ProvUI.handleException(e, ProvUIMessages.ProvUI_ErrorDuringApplyConfig, StatusManager.LOG | StatusManager.BLOCK);
 			}
 		} else if (retCode == ApplyProfileChangesDialog.PROFILE_RESTART) {
 			PlatformUI.getWorkbench().restart();
@@ -143,11 +152,11 @@ public class ProvUI {
 							try {
 								status[0] = ((IAdvancedUndoableOperation) operation).computeUndoableStatus(monitor);
 								if (!status[0].isOK()) {
-									StatusManager.getManager().handle(status[0], StatusManager.SHOW);
+									ProvUI.reportStatus(status[0], StatusManager.SHOW | StatusManager.LOG);
 								}
 							} catch (ExecutionException e) {
 								status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, e.getMessage(), e);
-								ProvUI.handleException(e.getCause(), null);
+								ProvUI.handleException(e.getCause(), null, StatusManager.SHOW | StatusManager.LOG);
 							}
 						}
 					};
@@ -159,7 +168,7 @@ public class ProvUI {
 								// don't report thread interruption
 							} catch (InvocationTargetException e) {
 								status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, e.getMessage(), e);
-								ProvUI.handleException(e.getCause(), null);
+								ProvUI.handleException(e.getCause(), null, StatusManager.SHOW | StatusManager.LOG);
 							}
 						}
 					});
@@ -177,11 +186,11 @@ public class ProvUI {
 							try {
 								status[0] = ((IAdvancedUndoableOperation) operation).computeRedoableStatus(monitor);
 								if (!status[0].isOK()) {
-									StatusManager.getManager().handle(status[0], StatusManager.SHOW);
+									ProvUI.reportStatus(status[0], StatusManager.SHOW);
 								}
 							} catch (ExecutionException e) {
 								status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, e.getMessage(), e);
-								ProvUI.handleException(e.getCause(), null);
+								ProvUI.handleException(e.getCause(), null, StatusManager.SHOW | StatusManager.LOG);
 							}
 						}
 					};
@@ -193,7 +202,7 @@ public class ProvUI {
 								// don't report thread interruption
 							} catch (InvocationTargetException e) {
 								status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, e.getMessage(), e);
-								ProvUI.handleException(e.getCause(), null);
+								ProvUI.handleException(e.getCause(), null, StatusManager.SHOW | StatusManager.LOG);
 							}
 						}
 					});
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
index 0e21734..fb27b86 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
@@ -16,10 +16,13 @@ import org.eclipse.core.commands.operations.IUndoableOperation;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
+import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.progress.WorkbenchJob;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Utility methods for running provisioning operations. All operations are
@@ -52,8 +55,15 @@ public class ProvisioningOperationRunner {
 							status = op.execute(monitor, ProvUI.getUIInfoAdapter(shell));
 						}
 						return status;
-					} catch (ExecutionException e) {
-						return ProvUI.handleException(e.getCause(), null);
+					} catch (final ExecutionException e) {
+						final IStatus[] status = new IStatus[1];
+						shell.getDisplay().asyncExec(new Runnable() {
+							public void run() {
+								status[0] = ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), StatusManager.SHOW | StatusManager.LOG);
+
+							}
+						});
+						return status[0];
 					}
 				}
 			};
@@ -71,7 +81,7 @@ public class ProvisioningOperationRunner {
 						}
 						return status;
 					} catch (ExecutionException e) {
-						return ProvUI.handleException(e.getCause(), null);
+						return ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), StatusManager.SHOW | StatusManager.LOG);
 					}
 				}
 			};
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
index d9498a2..c0c8f25 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
@@ -18,6 +18,7 @@ import javax.xml.parsers.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.metadata.License;
+import org.eclipse.ui.statushandlers.StatusManager;
 import org.w3c.dom.*;
 import org.xml.sax.SAXException;
 
@@ -65,9 +66,9 @@ public class SimpleLicenseManager extends LicenseManager {
 			Node root = doc.getDocumentElement();
 			processRoot(root, accepted);
 		} catch (ParserConfigurationException e) {
-			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError);
+			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError, StatusManager.LOG);
 		} catch (SAXException e) {
-			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError);
+			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError, StatusManager.LOG);
 		}
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
index cbcdcf2..1552764 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
@@ -15,7 +15,8 @@ import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.director.*;
+import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.*;
@@ -66,18 +67,13 @@ public class InstallAction extends ProfileModificationAction {
 		dialog.open();
 	}
 
-	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
-		try {
-			ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
-			request.addInstallableUnits(ius);
-			for (int i = 0; i < ius.length; i++) {
-				request.setInstallableUnitProfileProperty(ius[i], IInstallableUnit.PROP_PROFILE_ROOT_IU, Boolean.toString(true));
-			}
-			ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
-			return plan;
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
-			return null;
+	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
+		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
+		request.addInstallableUnits(ius);
+		for (int i = 0; i < ius.length; i++) {
+			request.setInstallableUnitProfileProperty(ius[i], IInstallableUnit.PROP_PROFILE_ROOT_IU, Boolean.toString(true));
 		}
+		ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
+		return plan;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
index e35bfb7..01a3df0 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
@@ -30,15 +30,9 @@ public class RevertAction extends ProfileModificationAction {
 		setToolTipText(ProvUI.REVERT_COMMAND_TOOLTIP);
 	}
 
-	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] toRevert, String targetProfileId, IProgressMonitor monitor) {
-		if (toRevert.length == 1) {
-			try {
-				return ProvisioningUtil.getRevertPlan(toRevert[0], monitor);
-			} catch (ProvisionException e) {
-				ProvUI.handleException(e, null);
-				return null;
-			}
-		}
+	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] toRevert, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
+		if (toRevert.length == 1)
+			return ProvisioningUtil.getRevertPlan(toRevert[0], monitor);
 		// should never happen
 		return null;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
index 0899247..88aebca 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
@@ -15,7 +15,8 @@ import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.director.*;
+import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.IProfileChooser;
@@ -75,15 +76,10 @@ public class UninstallAction extends ProfileModificationAction {
 		dialog.open();
 	}
 
-	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
-		try {
-			ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
-			request.removeInstallableUnits(ius);
-			return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
-			return null;
-		}
+	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
+		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
+		request.removeInstallableUnits(ius);
+		return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
 	}
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
index 7849b7c..5bf7f0e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
@@ -57,7 +57,7 @@ public class UpdateAction extends ProfileModificationAction {
 		dialog.open();
 	}
 
-	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
+	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
 		// Here we create a provisioning plan by finding the latest version available for any replacement.
 		// TODO to be smarter, we could check older versions if a new version made a plan invalid.
 		ArrayList toBeUpdated = new ArrayList();
@@ -89,20 +89,16 @@ public class UpdateAction extends ProfileModificationAction {
 		if (toBeUpdated.size() <= 0) {
 			return new ProvisioningPlan(new Status(IStatus.INFO, ProvUIActivator.PLUGIN_ID, ProvUIMessages.UpdateOperation_NothingToUpdate));
 		}
-		try {
-			ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
-			Iterator iter = toBeUpdated.iterator();
-			while (iter.hasNext())
-				request.removeInstallableUnits(new IInstallableUnit[] {(IInstallableUnit) iter.next()});
-			iter = latestReplacements.values().iterator();
-			while (iter.hasNext())
-				request.addInstallableUnits(new IInstallableUnit[] {((AvailableUpdateElement) iter.next()).getIU()});
-			ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
-			return plan;
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, null);
-			return null;
-		}
+
+		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(targetProfileId);
+		Iterator iter = toBeUpdated.iterator();
+		while (iter.hasNext())
+			request.removeInstallableUnits(new IInstallableUnit[] {(IInstallableUnit) iter.next()});
+		iter = latestReplacements.values().iterator();
+		while (iter.hasNext())
+			request.addInstallableUnits(new IInstallableUnit[] {((AvailableUpdateElement) iter.next()).getIU()});
+		ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
+		return plan;
 	}
 
 	/*
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableArtifactRepositoryManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableArtifactRepositoryManager.java
index cccc9ea..3904e13 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableArtifactRepositoryManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableArtifactRepositoryManager.java
@@ -19,6 +19,7 @@ import org.eclipse.equinox.internal.p2.ui.model.ArtifactRepositoryElement;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.query.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An object that adds queryable support to an artifact repository 
@@ -31,7 +32,7 @@ public class QueryableArtifactRepositoryManager implements IQueryable {
 	public Collector query(Query query, Collector result, IProgressMonitor monitor) {
 		IArtifactRepositoryManager manager = (IArtifactRepositoryManager) ServiceHelper.getService(ProvUIActivator.getContext(), IArtifactRepositoryManager.class.getName());
 		if (manager == null) {
-			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoRepositoryManager));
+			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoRepositoryManager), StatusManager.SHOW | StatusManager.LOG);
 			return result;
 		}
 		int flags = IArtifactRepositoryManager.REPOSITORIES_ALL;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableMetadataRepositoryManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableMetadataRepositoryManager.java
index bf859c2..1dfcf10 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableMetadataRepositoryManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableMetadataRepositoryManager.java
@@ -20,6 +20,7 @@ import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadata
 import org.eclipse.equinox.internal.provisional.p2.query.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.model.MetadataRepositoryElement;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An object that adds queryable support to a metadata repository 
@@ -47,7 +48,7 @@ public class QueryableMetadataRepositoryManager implements IQueryable {
 		} else {
 			IMetadataRepositoryManager manager = (IMetadataRepositoryManager) ServiceHelper.getService(ProvUIActivator.getContext(), IMetadataRepositoryManager.class.getName());
 			if (manager == null) {
-				ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoRepositoryManager));
+				ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoRepositoryManager), StatusManager.SHOW | StatusManager.LOG);
 				return result;
 			}
 			int flags = IArtifactRepositoryManager.REPOSITORIES_ALL;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableProfileRegistry.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableProfileRegistry.java
index bb619b6..837dee7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableProfileRegistry.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableProfileRegistry.java
@@ -18,6 +18,7 @@ import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
 import org.eclipse.equinox.internal.provisional.p2.query.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An object that adds queryable support to the profile registry.
@@ -27,7 +28,7 @@ public class QueryableProfileRegistry implements IQueryable {
 	public Collector query(Query query, Collector result, IProgressMonitor monitor) {
 		IProfileRegistry profileRegistry = (IProfileRegistry) ServiceHelper.getService(ProvUIActivator.getContext(), IProfileRegistry.class.getName());
 		if (profileRegistry == null) {
-			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoProfileRegistryFound));
+			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoProfileRegistryFound), StatusManager.SHOW | StatusManager.LOG);
 			return result;
 		}
 		IProfile[] profiles = profileRegistry.getProfiles();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableUpdates.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableUpdates.java
index 1e58f50..86c6bfd 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableUpdates.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/QueryableUpdates.java
@@ -20,6 +20,7 @@ import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.query.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An object that adds queryable support to the profile registry.
@@ -39,7 +40,7 @@ public class QueryableUpdates implements IQueryable {
 		monitor.beginTask(ProvUIMessages.QueryableUpdates_UpdateListProgress, totalWork);
 		IPlanner planner = (IPlanner) ServiceHelper.getService(ProvUIActivator.getContext(), IPlanner.class.getName());
 		if (planner == null) {
-			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoPlannerFound));
+			ProvUI.reportStatus(new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.ProvisioningUtil_NoPlannerFound), StatusManager.SHOW | StatusManager.LOG);
 			return result;
 		}
 		ArrayList allUpdates = new ArrayList();
