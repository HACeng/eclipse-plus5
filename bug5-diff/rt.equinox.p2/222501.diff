commit 307967611a20aba8daffd139b6cc247621a81006
Author: Susan Franklin <sfranklin>
Date:   Wed Apr 16 18:56:52 2008 +0000

    Bug 222501 - [ui] Background download should not cause errors to be presented to the user

2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
1	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryAction.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
3	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RemoveColocatedRepositoryAction.java
14	9	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
2	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
1	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
25	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
7	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RefreshAction.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
index 6f5da93..927c25e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
@@ -20,6 +20,7 @@ import org.eclipse.equinox.internal.provisional.p2.ui.model.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.viewers.StructuredViewerProvisioningListener;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * This view allows users to interact with artifact repositories
@@ -89,7 +90,7 @@ public class ArtifactRepositoriesView extends RepositoriesView {
 	 * @see org.eclipse.equinox.internal.p2.ui.admin.ProvView#refreshUnderlyingModel()
 	 */
 	protected void refreshUnderlyingModel() {
-		ProvisioningOperationRunner.schedule(new RefreshArtifactRepositoriesOperation(ProvAdminUIMessages.ProvView_RefreshCommandLabel, getRepoFlags()), getShell());
+		ProvisioningOperationRunner.schedule(new RefreshArtifactRepositoriesOperation(ProvAdminUIMessages.ProvView_RefreshCommandLabel, getRepoFlags()), getShell(), StatusManager.SHOW | StatusManager.LOG);
 	}
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
index 51100d1..ef567b1 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
@@ -34,6 +34,7 @@ import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.dialogs.ListDialog;
 import org.eclipse.ui.part.PluginTransfer;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * This view allows users to interact with metadata repositories
@@ -169,6 +170,6 @@ public class MetadataRepositoriesView extends RepositoriesView {
 	 * @see org.eclipse.equinox.internal.p2.ui.admin.ProvView#refreshUnderlyingModel()
 	 */
 	protected void refreshUnderlyingModel() {
-		ProvisioningOperationRunner.schedule(new RefreshMetadataRepositoriesOperation(ProvAdminUIMessages.ProvView_RefreshCommandLabel, getRepoFlags()), getShell());
+		ProvisioningOperationRunner.schedule(new RefreshMetadataRepositoriesOperation(ProvAdminUIMessages.ProvView_RefreshCommandLabel, getRepoFlags()), getShell(), StatusManager.SHOW | StatusManager.LOG);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index a88a312..7828e56 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -64,7 +64,7 @@ public class ProfilesView extends ProvView {
 				}
 			}
 			ProfileOperation op = new RemoveProfilesOperation(ProvAdminUIMessages.Ops_RemoveProfileOperationLabel, (IProfile[]) profilesOnly.toArray(new IProfile[profilesOnly.size()]));
-			ProvisioningOperationRunner.run(op, ProfilesView.this.getShell());
+			ProvisioningOperationRunner.run(op, ProfilesView.this.getShell(), StatusManager.SHOW | StatusManager.LOG);
 		}
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
index 59858b9..e3348e2 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
@@ -26,6 +26,7 @@ import org.eclipse.ui.ISharedImages;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.PropertyDialogAction;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * This class supports the common characteristics for views that manipulate
@@ -45,7 +46,7 @@ abstract class RepositoriesView extends ProvView {
 		}
 
 		public void run() {
-			ProvisioningOperationRunner.run(getRemoveOperation(getSelection().toArray()), getShell());
+			ProvisioningOperationRunner.run(getRemoveOperation(getSelection().toArray()), getShell(), StatusManager.SHOW | StatusManager.LOG);
 		}
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
index 808516b..28cdaa8 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
@@ -23,6 +23,7 @@ import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.swt.events.ModifyEvent;
 import org.eclipse.swt.events.ModifyListener;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Dialog that allows a profile to be defined and added.
@@ -77,7 +78,7 @@ public class AddProfileDialog extends StatusDialog {
 		}
 		addedProfileId = profileGroup.getProfileId();
 		Map profileProperties = profileGroup.getProfileProperties();
-		ProvisioningOperationRunner.run(new AddProfileOperation(ProvAdminUIMessages.AddProfileDialog_OperationLabel, addedProfileId, profileProperties), getShell());
+		ProvisioningOperationRunner.run(new AddProfileOperation(ProvAdminUIMessages.AddProfileDialog_OperationLabel, addedProfileId, profileProperties), getShell(), StatusManager.SHOW | StatusManager.LOG);
 	}
 
 	void verifyComplete() {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryAction.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryAction.java
index 6145919..275637e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryAction.java
@@ -21,6 +21,7 @@ public class AddColocatedRepositoryAction extends ProvisioningAction {
 	public AddColocatedRepositoryAction(ISelectionProvider selectionProvider, Shell shell) {
 		super(ProvSDKMessages.AddColocatedRepositoryAction_Label, selectionProvider, shell);
 		setToolTipText(ProvSDKMessages.AddColocatedRepositoryAction_ToolTip);
+		init();
 	}
 
 	public void run() {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index 237caec..f964d8d 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -56,6 +56,7 @@ public class ProvSDKMessages extends NLS {
 	public static String UpdateAndInstallDialog_AvailableSoftware;
 	public static String UpdateAndInstallDialog_InstalledSoftware;
 	public static String UpdateAndInstallDialog_ManageSites;
+	public static String UpdateAndInstallDialog_NamedOperationInProgress;
 	public static String UpdateAndInstallDialog_OperationInProgress;
 	public static String UpdateAndInstallDialog_PrefLink;
 	public static String UpdateAndInstallDialog_RemoveSiteButtonText;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RemoveColocatedRepositoryAction.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RemoveColocatedRepositoryAction.java
index 41f1721..0463a90 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RemoveColocatedRepositoryAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RemoveColocatedRepositoryAction.java
@@ -20,17 +20,19 @@ import org.eclipse.equinox.internal.provisional.p2.ui.model.MetadataRepositoryEl
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.RemoveColocatedRepositoryOperation;
 import org.eclipse.jface.viewers.ISelectionProvider;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 public class RemoveColocatedRepositoryAction extends ProvisioningAction {
 
 	public RemoveColocatedRepositoryAction(ISelectionProvider selectionProvider, Shell shell) {
 		super(ProvSDKMessages.RemoveColocatedRepositoryAction_Label, selectionProvider, shell);
 		setToolTipText(ProvSDKMessages.RemoveColocatedRepositoryAction_Tooltip);
+		init();
 	}
 
 	public void run() {
 		RemoveColocatedRepositoryOperation op = new RemoveColocatedRepositoryOperation(ProvSDKMessages.RepositoryManipulationDialog_RemoveOperationLabel, getSelectedURLs(getStructuredSelection().toArray()));
-		ProvisioningOperationRunner.run(op, getShell());
+		ProvisioningOperationRunner.run(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
 	}
 
 	private URL[] getSelectedURLs(Object[] selectionArray) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index ea72b7e..b067547 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -71,7 +71,7 @@ public class UpdateAndInstallDialog extends TrayDialog implements IViewMenuProvi
 	InstalledIUGroup installedIUGroup;
 	IRepositoryManipulator repositoryManipulator;
 	ChangeViewAction viewByRepo, viewFlat, viewCategory;
-	Button installedPropButton, availablePropButton, installButton, uninstallButton, updateButton, manipulateRepoButton, addRepoButton, removeRepoButton;
+	Button installedPropButton, availablePropButton, installButton, uninstallButton, updateButton, revertButton, manipulateRepoButton, addRepoButton, removeRepoButton;
 	ProgressIndicator progressIndicator;
 	Label progressLabel;
 	IPropertyChangeListener preferenceListener;
@@ -228,14 +228,16 @@ public class UpdateAndInstallDialog extends TrayDialog implements IViewMenuProvi
 	void checkProgressIndicator(String jobName) {
 		if (progressIndicator.isDisposed())
 			return;
-		if (ProvisioningOperationRunner.hasScheduledOperations())
+		if (ProvisioningOperationRunner.hasScheduledOperations()) {
 			progressIndicator.beginAnimatedTask();
-		else
+			if (jobName == null)
+				progressLabel.setText(ProvSDKMessages.UpdateAndInstallDialog_OperationInProgress);
+			else
+				progressLabel.setText(NLS.bind(ProvSDKMessages.UpdateAndInstallDialog_NamedOperationInProgress, jobName));
+		} else {
 			progressIndicator.done();
-		if (jobName == null)
 			progressLabel.setText(""); //$NON-NLS-1$
-		else
-			progressLabel.setText(NLS.bind(ProvSDKMessages.UpdateAndInstallDialog_OperationInProgress, jobName));
+		}
 		progressLabel.getParent().layout(true);
 		// These may have changed because the status of scheduled provisioning jobs changed
 		validateAvailableIUButtons();
@@ -498,9 +500,9 @@ public class UpdateAndInstallDialog extends TrayDialog implements IViewMenuProvi
 		IAction propertiesAction = new PropertyDialogAction(new SameShellProvider(parent.getShell()), installedIUGroup.getStructuredViewer());
 		installedPropButton.setData(BUTTONACTION, propertiesAction);
 
-		Button revert = createVerticalButton(composite, ProvSDKMessages.UpdateAndInstallDialog_RevertActionLabel, false);
-		revert.setData(BUTTONACTION, new Action() {
-			public void runWithEvent(Event event) {
+		revertButton = createVerticalButton(composite, ProvSDKMessages.UpdateAndInstallDialog_RevertActionLabel, false);
+		revertButton.setData(BUTTONACTION, new Action() {
+			public void run() {
 				RevertWizard wizard = new RevertWizard(profileId, ProvSDKUIActivator.getDefault().getQueryProvider());
 				WizardDialog dialog = new WizardDialog(getShell(), wizard);
 				dialog.create();
@@ -529,6 +531,9 @@ public class UpdateAndInstallDialog extends TrayDialog implements IViewMenuProvi
 		updateEnablement(installedPropButton);
 		updateEnablement(uninstallButton);
 		updateEnablement(updateButton);
+		// special case because revert isn't a standard action
+		revertButton.setEnabled(!ProvisioningOperationRunner.hasScheduledOperationsFor(profileId));
+
 	}
 
 	private void updateEnablement(Button button) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 4822746..3754457 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -33,7 +33,8 @@ UpdateAndInstallDialog_AvailableSoftware=A&vailable Software
 UpdateAndInstallDialog_PrefLink=Set an automatic update schedule and other <a>Update Preferences</a>
 UpdateAndInstallDialog_Title=Software Updates and Add-ons
 UpdateAndInstallDialog_ManageSites=&Manage sites...
-UpdateAndInstallDialog_OperationInProgress={0} in progress:
+UpdateAndInstallDialog_NamedOperationInProgress={0} in progress:
+UpdateAndInstallDialog_OperationInProgress=Operation in progress
 UpdateAndInstallDialog_RemoveSiteButtonText=&Remove Site...
 UpdateAndInstallDialog_RemoveSiteOperationLabel=Remove Site
 UpdateAndInstallDialog_RevertActionLabel=&Revert configuration...
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
index d3275c6..f0ee0c5 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
@@ -117,7 +117,7 @@ public class AutomaticUpdater implements IUpdateListener {
 					request.removeInstallableUnits(iusWithUpdates);
 					request.addInstallableUnits(replacements);
 					final ProvisioningPlan plan = ProvisioningUtil.getPlanner().getProvisioningPlan(request, new ProvisioningContext(), null);
-					Job job = ProvisioningOperationRunner.schedule(new ProfileModificationOperation(ProvSDKMessages.AutomaticUpdater_AutomaticDownloadOperationName, event.getProfileId(), plan, new DownloadPhaseSet(), false), null);
+					Job job = ProvisioningOperationRunner.schedule(new ProfileModificationOperation(ProvSDKMessages.AutomaticUpdater_AutomaticDownloadOperationName, event.getProfileId(), plan, new DownloadPhaseSet(), false), null, StatusManager.LOG);
 					job.addJobChangeListener(new JobChangeAdapter() {
 						public void done(IJobChangeEvent jobEvent) {
 							alreadyDownloaded = true;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index f47cbeb..c2290cd 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -158,7 +158,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 	public boolean performFinish() {
 		if (currentPlan != null && currentPlan.getStatus().isOK()) {
 			ProfileModificationOperation op = createProfileModificationOperation(currentPlan);
-			ProvisioningOperationRunner.schedule(op, getShell());
+			ProvisioningOperationRunner.schedule(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
 			return true;
 		}
 		return false;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
index 55181c7..b8e96f8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
@@ -209,7 +209,7 @@ public class RevertProfileWizardPage extends WizardPage {
 			if (plan[0] != null) {
 				if (plan[0].getStatus().isOK()) {
 					ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertDialog_RevertOperationLabel, profileId, plan[0]);
-					ProvisioningOperationRunner.run(op, getShell());
+					ProvisioningOperationRunner.run(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
 					return true;
 				}
 				ProvUI.reportStatus(plan[0].getStatus(), StatusManager.LOG);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
index d1a978f..7962ac8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/ProvisioningOperationRunner.java
@@ -55,8 +55,9 @@ public class ProvisioningOperationRunner {
 	 * @param op The operation to execute
 	 * @param shell provided by the caller in order to supply UI information for prompting the
 	 *            user if necessary. May be <code>null</code>.
+	 * @param errorStyle the flags passed to the StatusManager for error reporting
 	 */
-	public static void run(ProvisioningOperation op, Shell shell) {
+	public static void run(ProvisioningOperation op, Shell shell, int errorStyle) {
 		try {
 			if (op instanceof IUndoableOperation) {
 				PlatformUI.getWorkbench().getOperationSupport().getOperationHistory().execute((IUndoableOperation) op, null, ProvUI.getUIInfoAdapter(shell));
@@ -64,7 +65,7 @@ public class ProvisioningOperationRunner {
 				op.execute(null, ProvUI.getUIInfoAdapter(shell));
 			}
 		} catch (ExecutionException e) {
-			ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), StatusManager.SHOW | StatusManager.LOG);
+			ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), errorStyle);
 		}
 
 	}
@@ -76,13 +77,16 @@ public class ProvisioningOperationRunner {
 	 * @param op The operation to execute
 	 * @param shell provided by the caller in order to supply UI information for prompting the
 	 *            user if necessary. May be <code>null</code>.
+	 * @param errorStyle the flags passed to the StatusManager for error reporting
 	 */
-	public static Job schedule(final ProvisioningOperation op, final Shell shell) {
+	public static Job schedule(final ProvisioningOperation op, final Shell shell, final int errorStyle) {
 		Job job;
+		final boolean noPrompt = (errorStyle & (StatusManager.BLOCK | StatusManager.SHOW)) == 0;
 
 		if (op.runInBackground()) {
 			job = new Job(op.getLabel()) {
 				protected IStatus run(IProgressMonitor monitor) {
+					final Job thisJob = this;
 					try {
 						IStatus status;
 						if (op instanceof IUndoableOperation) {
@@ -90,13 +94,20 @@ public class ProvisioningOperationRunner {
 						} else {
 							status = op.execute(monitor, ProvUI.getUIInfoAdapter(shell));
 						}
+						if (status != Status.OK_STATUS && noPrompt) {
+							this.setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE);
+							this.setProperty(IProgressConstants.NO_IMMEDIATE_ERROR_PROMPT_PROPERTY, Boolean.TRUE);
+						}
 						return status;
 					} catch (final ExecutionException e) {
 						final IStatus[] status = new IStatus[1];
 						shell.getDisplay().asyncExec(new Runnable() {
 							public void run() {
-								status[0] = ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), StatusManager.SHOW | StatusManager.LOG);
-
+								status[0] = ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), errorStyle);
+								if (noPrompt) {
+									thisJob.setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE);
+									thisJob.setProperty(IProgressConstants.NO_IMMEDIATE_ERROR_PROMPT_PROPERTY, Boolean.TRUE);
+								}
 							}
 						});
 						return status[0];
@@ -106,7 +117,6 @@ public class ProvisioningOperationRunner {
 			job.setPriority(Job.LONG);
 		} else {
 			job = new WorkbenchJob(op.getLabel()) {
-
 				public IStatus runInUIThread(IProgressMonitor monitor) {
 					try {
 						IStatus status;
@@ -115,9 +125,17 @@ public class ProvisioningOperationRunner {
 						} else {
 							status = op.execute(monitor, ProvUI.getUIInfoAdapter(shell));
 						}
+						if (status != Status.OK_STATUS && noPrompt) {
+							this.setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE);
+							this.setProperty(IProgressConstants.NO_IMMEDIATE_ERROR_PROMPT_PROPERTY, Boolean.TRUE);
+						}
 						return status;
 					} catch (ExecutionException e) {
-						return ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), StatusManager.SHOW | StatusManager.LOG);
+						if (noPrompt) {
+							this.setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE);
+							this.setProperty(IProgressConstants.NO_IMMEDIATE_ERROR_PROMPT_PROPERTY, Boolean.TRUE);
+						}
+						return ProvUI.handleException(e.getCause(), NLS.bind(ProvUIMessages.ProvisioningOperationRunner_ErrorExecutingOperation, op.getLabel()), errorStyle);
 					}
 				}
 			};
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
index 31ae3e9..e704c04 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
@@ -37,6 +37,7 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 		this.profileId = profileId;
 		this.profileChooser = profileChooser;
 		this.policies = policies;
+		init();
 	}
 
 	protected ProvisioningPlan getProvisioningPlan() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
index 66158d7..04d7036 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
@@ -23,8 +23,14 @@ public abstract class ProvisioningAction extends SelectionProviderAction {
 	protected ProvisioningAction(String text, ISelectionProvider selectionProvider, Shell shell) {
 		super(selectionProvider, text);
 		this.shell = shell;
+	}
+
+	/*
+	 * perform initialization that should be done after creation.
+	 */
+	protected void init() {
 		// prime the selection validation
-		ISelection selection = selectionProvider.getSelection();
+		ISelection selection = getSelection();
 		if (selection instanceof IStructuredSelection) {
 			selectionChanged((IStructuredSelection) selection);
 		} else {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RefreshAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RefreshAction.java
index 829ed8c..e058fe9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RefreshAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RefreshAction.java
@@ -30,6 +30,7 @@ public abstract class RefreshAction extends ProvisioningAction {
 		super(ProvUIMessages.RefreshAction_Label, selectionProvider, control.getShell());
 		setToolTipText(ProvUIMessages.RefreshAction_Tooltip);
 		hookKeyListener(control);
+		init();
 	}
 
 	private void hookKeyListener(Control control) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
index ed358ec..222273e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
@@ -23,6 +23,7 @@ import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policies;
 import org.eclipse.jface.viewers.ISelectionProvider;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 public class RevertAction extends ProfileModificationAction {
 
@@ -40,7 +41,7 @@ public class RevertAction extends ProfileModificationAction {
 
 	protected void performOperation(IInstallableUnit[] toBecome, String targetProfileId, ProvisioningPlan plan) {
 		ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertIUOperationLabel, targetProfileId, plan);
-		ProvisioningOperationRunner.schedule(op, getShell());
+		ProvisioningOperationRunner.schedule(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
 	}
 
 	/*
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
index 2f8749f..3e25e4b 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
@@ -27,6 +27,7 @@ import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Abstract dialog class for adding repositories of different types. This class
@@ -168,7 +169,7 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 	protected IStatus addRepository() {
 		IStatus status = validateRepositoryURL(false);
 		if (status.isOK()) {
-			ProvisioningOperationRunner.schedule(getOperation(getUserURL()), getShell());
+			ProvisioningOperationRunner.schedule(getOperation(getUserURL()), getShell(), StatusManager.SHOW | StatusManager.LOG);
 		}
 		return status;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
index cc6fd0f..1488dcd 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
@@ -34,6 +34,7 @@ import org.eclipse.swt.events.DisposeEvent;
 import org.eclipse.swt.events.DisposeListener;
 import org.eclipse.swt.graphics.Font;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * An AvailableIUGroup is a reusable UI component that displays the
@@ -230,7 +231,7 @@ public class AvailableIUGroup extends StructuredIUGroup {
 			op = new RefreshMetadataRepositoriesOperation(ProvUIMessages.AvailableIUGroup_RefreshOperationLabel, refreshRepoFlags);
 		else
 			op = new RefreshMetadataRepositoriesOperation(ProvUIMessages.AvailableIUGroup_RefreshOperationLabel, urls);
-		ProvisioningOperationRunner.schedule(op, getShell());
+		ProvisioningOperationRunner.schedule(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
 		// Calling this will create a new input and refresh the viewer
 		setQueryContext(queryContext);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
index 602407d..0249bbb 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
@@ -53,7 +53,7 @@ public class RepositoryManipulatorDropTarget extends URLDropAdapter {
 				IStatus status = manipulator.getURLValidator(control.getShell()).validateRepositoryURL(url[0], true, monitor);
 				if (status.isOK()) {
 					ProvisioningOperation addOperation = manipulator.getAddOperation(url[0]);
-					ProvisioningOperationRunner.run(addOperation, control.getShell());
+					ProvisioningOperationRunner.schedule(addOperation, control.getShell(), StatusManager.SHOW | StatusManager.LOG);
 					event.detail = DND.DROP_LINK;
 				} else if (status.getCode() == URLValidator.REPO_AUTO_GENERATED || status.getCode() == URLValidator.ALTERNATE_ACTION_TAKEN) {
 					event.detail = DND.DROP_COPY;
