commit 6bd48dbc11834858db4b8d3be03214e275eb6519
Author: DJ Houghton <dj>
Date:   Fri Oct 10 18:24:56 2008 +0000

    Bug 250452 - Update applications to handle URIs

6	7	bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/Application.java
22	30	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/p2/metadata/generator/EclipseGeneratorApplication.java
4	5	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/EclipseInstallGeneratorInfoProvider.java
7	6	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
2	2	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/IGeneratorInfo.java
12	2	bundles/org.eclipse.equinox.p2.metadata.generator/src_ant/org/eclipse/equinox/internal/p2/metadata/generator/ant/GeneratorTask.java
10	4	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/mirror/MirrorApplication.java
3	3	bundles/org.eclipse.equinox.p2.tests/All p2 Tests.launch
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
3	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactMirrorApplicationTest.java
8	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactRepositoryCleanupTest.java
3	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java
8	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataRepositoryCleanupTest.java
28	0	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/artifacts.xml
331	0	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/content.xml
0	28	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/artifacts.xml
0	331	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/content.xml
0	4	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/site.xml
22	15	bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/MirrorApplication.java
diff --git a/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/Application.java b/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/Application.java
index 56c641f..a2d2090 100644
--- a/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/Application.java
+++ b/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/Application.java
@@ -19,8 +19,7 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.console.ProvisioningHelper;
-import org.eclipse.equinox.internal.p2.core.helpers.LogHelper;
-import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.*;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.*;
@@ -307,10 +306,10 @@ public class Application implements IApplication {
 				bundlePool = new Path(arg).toOSString();
 
 			if (opt.equalsIgnoreCase("-metadataRepository") || opt.equalsIgnoreCase("-metadataRepositories") || opt.equalsIgnoreCase("-mr")) //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
-				metadataRepositoryLocations = getURLs(arg);
+				metadataRepositoryLocations = getURIs(arg);
 
 			if (opt.equalsIgnoreCase("-artifactRepository") || opt.equalsIgnoreCase("-artifactRepositories") || opt.equalsIgnoreCase("-ar")) //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
-				artifactRepositoryLocations = getURLs(arg);
+				artifactRepositoryLocations = getURIs(arg);
 
 			if (opt.equalsIgnoreCase("-flavor")) //$NON-NLS-1$
 				flavor = arg;
@@ -499,16 +498,16 @@ public class Application implements IApplication {
 		return engine.perform(profile, new DefaultPhaseSet(), result.getOperands(), new ProvisioningContext(), new NullProgressMonitor());
 	}
 
-	private static URI[] getURLs(String spec) {
+	private static URI[] getURIs(String spec) {
 		if (spec == null)
 			return null;
 		String[] urlSpecs = getArrayFromString(spec, ","); //$NON-NLS-1$
 		ArrayList result = new ArrayList(urlSpecs.length);
 		for (int i = 0; i < urlSpecs.length; i++) {
 			try {
-				result.add(new URI(urlSpecs[i]));
+				result.add(URIUtil.fromString(urlSpecs[i]));
 			} catch (URISyntaxException e) {
-				NLS.bind(Messages.Ignored_repo, urlSpecs[i]);
+				LogHelper.log(new Status(IStatus.WARNING, Activator.ID, NLS.bind(Messages.Ignored_repo, urlSpecs[i])));
 			}
 		}
 		return (URI[]) result.toArray(new URI[result.size()]);
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/p2/metadata/generator/EclipseGeneratorApplication.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/p2/metadata/generator/EclipseGeneratorApplication.java
index 60ba86b..959a427 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/p2/metadata/generator/EclipseGeneratorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/p2/metadata/generator/EclipseGeneratorApplication.java
@@ -11,7 +11,8 @@
 package org.eclipse.equinox.internal.p2.metadata.generator;
 
 import java.io.File;
-import java.net.*;
+import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.HashMap;
 import java.util.Map;
 import org.eclipse.core.runtime.IStatus;
@@ -55,9 +56,9 @@ public class EclipseGeneratorApplication implements IApplication {
 	private ServiceRegistration registrationBus;
 	private Generator.GeneratorResult incrementalResult = null;
 	private boolean generateRootIU = true;
-	private String metadataLocation;
+	private URI metadataLocation;
 	private String metadataRepoName;
-	private String artifactLocation;
+	private URI artifactLocation;
 	private String artifactRepoName;
 	private String operation;
 	private String argument;
@@ -105,12 +106,7 @@ public class EclipseGeneratorApplication implements IApplication {
 		if (artifactLocation == null)
 			return;
 		IArtifactRepositoryManager manager = (IArtifactRepositoryManager) ServiceHelper.getService(Activator.context, IArtifactRepositoryManager.class.getName());
-		URI location;
-		try {
-			location = new URI(artifactLocation);
-		} catch (URISyntaxException e) {
-			throw new IllegalArgumentException(NLS.bind(Messages.exception_artifactRepoLocationURL, artifactLocation));
-		}
+		URI location = artifactLocation;
 
 		String repositoryName = (artifactRepoName != null && artifactRepoName.length() > 0) ? artifactRepoName : artifactLocation + " - artifacts"; //$NON-NLS-1$
 		Map properties = new HashMap(1);
@@ -152,12 +148,8 @@ public class EclipseGeneratorApplication implements IApplication {
 		File location = provider.getBaseLocation();
 		if (location == null)
 			location = provider.getBundleLocations()[0];
-		try {
-			metadataLocation = location.toURL().toExternalForm();
-			artifactLocation = location.toURL().toExternalForm();
-		} catch (MalformedURLException e) {
-			// ought not happen...
-		}
+		metadataLocation = location.toURI();
+		artifactLocation = location.toURI();
 		provider.setPublishArtifactRepository(true);
 		provider.setPublishArtifacts(false);
 		provider.setAppend(true);
@@ -167,12 +159,7 @@ public class EclipseGeneratorApplication implements IApplication {
 	private void initializeMetadataRepository(EclipseInstallGeneratorInfoProvider provider) throws ProvisionException {
 		if (metadataLocation == null)
 			return;
-		URI location;
-		try {
-			location = new URI(metadataLocation);
-		} catch (URISyntaxException e) {
-			throw new IllegalArgumentException(NLS.bind(Messages.exception_metadataRepoLocationURL, metadataLocation));
-		}
+		URI location = metadataLocation;
 
 		// 	First try to create a simple repo, this will fail if one already exists
 		//  We try creating a repo first instead of just loading what is there because we don't want a repo based
@@ -271,14 +258,21 @@ public class EclipseGeneratorApplication implements IApplication {
 			if (args[i - 1].equalsIgnoreCase("-launcherConfig")) //$NON-NLS-1$
 				provider.setLauncherConfig(arg);
 
-			if (args[i - 1].equalsIgnoreCase("-metadataRepository") || args[i - 1].equalsIgnoreCase("-mr")) //$NON-NLS-1$ //$NON-NLS-2$
-				metadataLocation = arg;
-
 			if (args[i - 1].equalsIgnoreCase("-metadataRepositoryName")) //$NON-NLS-1$
 				metadataRepoName = arg;
 
-			if (args[i - 1].equalsIgnoreCase("-artifactRepository") | args[i - 1].equalsIgnoreCase("-ar")) //$NON-NLS-1$ //$NON-NLS-2$
-				artifactLocation = arg;
+			try {
+				if (args[i - 1].equalsIgnoreCase("-metadataRepository") || args[i - 1].equalsIgnoreCase("-mr")) //$NON-NLS-1$ //$NON-NLS-2$
+					metadataLocation = URIUtil.fromString(arg);
+
+				if (args[i - 1].equalsIgnoreCase("-artifactRepository") | args[i - 1].equalsIgnoreCase("-ar")) //$NON-NLS-1$ //$NON-NLS-2$
+					artifactLocation = URIUtil.fromString(arg);
+
+				if (args[i - 1].equalsIgnoreCase("-site")) //$NON-NLS-1$
+					provider.setSiteLocation(URIUtil.fromString(arg));
+			} catch (URISyntaxException e) {
+				throw new IllegalArgumentException("Repository location (" + arg + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
+			}
 
 			if (args[i - 1].equalsIgnoreCase("-artifactRepositoryName")) //$NON-NLS-1$
 				artifactRepoName = arg;
@@ -307,8 +301,6 @@ public class EclipseGeneratorApplication implements IApplication {
 			if (args[i - 1].equalsIgnoreCase("-p2.os")) //$NON-NLS-1$
 				provider.setOS(arg);
 
-			if (args[i - 1].equalsIgnoreCase("-site")) //$NON-NLS-1$
-				provider.setSiteLocation(new URL(arg));
 		}
 	}
 
@@ -412,7 +404,7 @@ public class EclipseGeneratorApplication implements IApplication {
 		this.base = base;
 	}
 
-	public void setArtifactLocation(String location) {
+	public void setArtifactLocation(URI location) {
 		this.artifactLocation = location;
 	}
 
@@ -429,7 +421,7 @@ public class EclipseGeneratorApplication implements IApplication {
 		this.features = features;
 	}
 
-	public void setMetadataLocation(String location) {
+	public void setMetadataLocation(URI location) {
 		this.metadataLocation = location;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/EclipseInstallGeneratorInfoProvider.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/EclipseInstallGeneratorInfoProvider.java
index a58a8de..c8aec27 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/EclipseInstallGeneratorInfoProvider.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/EclipseInstallGeneratorInfoProvider.java
@@ -11,8 +11,7 @@
 package org.eclipse.equinox.internal.provisional.p2.metadata.generator;
 
 import java.io.*;
-import java.net.MalformedURLException;
-import java.net.URL;
+import java.net.*;
 import java.util.*;
 import org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxFwConfigFileParser;
 import org.eclipse.equinox.internal.frameworkadmin.equinox.EquinoxManipulatorImpl;
@@ -104,7 +103,7 @@ public class EclipseInstallGeneratorInfoProvider implements IGeneratorInfo {
 	private String launcherConfig;
 	private String versionAdvice;
 
-	private URL siteLocation;
+	private URI siteLocation;
 
 	private boolean reuseExistingPack200Files = false;
 
@@ -499,7 +498,7 @@ public class EclipseInstallGeneratorInfoProvider implements IGeneratorInfo {
 		return productFile;
 	}
 
-	public URL getSiteLocation() {
+	public URI getSiteLocation() {
 		return siteLocation;
 	}
 
@@ -631,7 +630,7 @@ public class EclipseInstallGeneratorInfoProvider implements IGeneratorInfo {
 	/**
 	 * Sets the location of site.xml if applicable.
 	 */
-	public void setSiteLocation(URL location) {
+	public void setSiteLocation(URI location) {
 		this.siteLocation = location;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
index ec8e24f..0ff9b6d 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
@@ -9,7 +9,8 @@
 package org.eclipse.equinox.internal.provisional.p2.metadata.generator;
 
 import java.io.*;
-import java.net.*;
+import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.*;
 import java.util.Map.Entry;
 import org.eclipse.core.runtime.*;
@@ -1101,7 +1102,7 @@ public class Generator {
 	private void generateSiteReference(String location, String featureId, boolean isEnabled) {
 		IMetadataRepository metadataRepo = info.getMetadataRepository();
 		try {
-			URI associateLocation = new URI(location);
+			URI associateLocation = URIUtil.fromString(location);
 			int flags = isEnabled ? IRepository.ENABLED : IRepository.NONE;
 			metadataRepo.addReference(associateLocation, IRepository.TYPE_METADATA, flags);
 			metadataRepo.addReference(associateLocation, IRepository.TYPE_ARTIFACT, flags);
@@ -1201,13 +1202,13 @@ public class Generator {
 	 */
 	protected Map getFeatureToCategoryMappings() {
 		HashMap mappings = new HashMap();
-		URL siteLocation = info.getSiteLocation();
+		URI siteLocation = info.getSiteLocation();
 		if (siteLocation == null)
 			return mappings;
 		InputStream input;
 		SiteModel site = null;
 		try {
-			input = new BufferedInputStream(siteLocation.openStream());
+			input = new BufferedInputStream(URIUtil.toURL(siteLocation).openStream());
 			site = new DefaultSiteParser().parse(input);
 		} catch (FileNotFoundException e) {
 			//don't complain if the update site is not present
@@ -1234,8 +1235,8 @@ public class Generator {
 			for (int i = 0; i < associatedSites.length; i++)
 				generateSiteReference(associatedSites[i].getURL(), null, true);
 
-		if (PROTOCOL_FILE.equals(siteLocation.getProtocol())) {
-			File siteFile = new File(siteLocation.getFile());
+		if (PROTOCOL_FILE.equals(siteLocation.getScheme())) {
+			File siteFile = URIUtil.toFile(siteLocation);
 			if (siteFile.exists()) {
 				File siteParent = siteFile.getParentFile();
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/IGeneratorInfo.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/IGeneratorInfo.java
index 0a4f2ac..8e750b8 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/IGeneratorInfo.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/IGeneratorInfo.java
@@ -11,7 +11,7 @@
 package org.eclipse.equinox.internal.provisional.p2.metadata.generator;
 
 import java.io.File;
-import java.net.URL;
+import java.net.URI;
 import java.util.*;
 import org.eclipse.equinox.internal.provisional.frameworkadmin.ConfigData;
 import org.eclipse.equinox.internal.provisional.frameworkadmin.LauncherData;
@@ -95,7 +95,7 @@ public interface IGeneratorInfo {
 	 * generating for an update site.
 	 * @return The location of site.xml, or <code>null</code>
 	 */
-	public URL getSiteLocation();
+	public URI getSiteLocation();
 
 	public boolean publishArtifactRepository();
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src_ant/org/eclipse/equinox/internal/p2/metadata/generator/ant/GeneratorTask.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src_ant/org/eclipse/equinox/internal/p2/metadata/generator/ant/GeneratorTask.java
index 571c1a5..d4deb5a 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src_ant/org/eclipse/equinox/internal/p2/metadata/generator/ant/GeneratorTask.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src_ant/org/eclipse/equinox/internal/p2/metadata/generator/ant/GeneratorTask.java
@@ -10,8 +10,10 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.metadata.generator.ant;
 
+import java.net.URISyntaxException;
 import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.Task;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.metadata.generator.EclipseGeneratorApplication;
 import org.eclipse.equinox.internal.provisional.p2.metadata.generator.EclipseInstallGeneratorInfoProvider;
 import org.eclipse.equinox.internal.provisional.p2.metadata.generator.IncrementalGenerator;
@@ -55,7 +57,11 @@ public class GeneratorTask extends Task {
 	public void setArtifactRepository(String location) {
 		if (generator == null)
 			generator = new EclipseGeneratorApplication();
-		generator.setArtifactLocation(location);
+		try {
+			generator.setArtifactLocation(URIUtil.fromString(location));
+		} catch (URISyntaxException e) {
+			throw new IllegalArgumentException("Specified artifact repository location (" + location + ") is not a valid URI. ");
+		}
 	}
 
 	public void setArtifactRepositoryName(String name) {
@@ -133,7 +139,11 @@ public class GeneratorTask extends Task {
 	public void setMetadataRepository(String location) {
 		if (generator == null)
 			generator = new EclipseGeneratorApplication();
-		generator.setMetadataLocation(location);
+		try {
+			generator.setMetadataLocation(URIUtil.fromString(location));
+		} catch (URISyntaxException e) {
+			throw new IllegalArgumentException("Specified metadata repository location (" + location + ") is not a valid URI. ");
+		}
 	}
 
 	public void setMetadataRepositoryName(String name) {
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/mirror/MirrorApplication.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/mirror/MirrorApplication.java
index b4ea8b3..5f0ed46 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/mirror/MirrorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/mirror/MirrorApplication.java
@@ -11,10 +11,12 @@
 package org.eclipse.equinox.internal.p2.metadata.mirror;
 
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.*;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.metadata.repository.Activator;
 import org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -145,10 +147,14 @@ public class MirrorApplication implements IApplication {
 				continue;
 			String arg = args[++i];
 
-			if (args[i - 1].equalsIgnoreCase("-source")) //$NON-NLS-1$
-				sourceLocation = new URI(arg);
-			if (args[i - 1].equalsIgnoreCase("-destination")) //$NON-NLS-1$
-				destinationLocation = new URI(arg);
+			try {
+				if (args[i - 1].equalsIgnoreCase("-source")) //$NON-NLS-1$
+					sourceLocation = URIUtil.fromString(arg);
+				if (args[i - 1].equalsIgnoreCase("-destination")) //$NON-NLS-1$
+					destinationLocation = URIUtil.fromString(arg);
+			} catch (URISyntaxException e) {
+				throw new IllegalArgumentException("Repository location (" + arg + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
+			}
 			if (args[i - 1].equalsIgnoreCase("-roots")) //$NON-NLS-1$
 				rootSpecs = getArrayArgsFromString(arg, ","); //$NON-NLS-1$
 			if (args[i - 1].equalsIgnoreCase("-transitive")) //$NON-NLS-1$
diff --git a/bundles/org.eclipse.equinox.p2.tests/All p2 Tests.launch b/bundles/org.eclipse.equinox.p2.tests/All p2 Tests.launch
index 6ad2fe9..d7fd5be 100644
--- a/bundles/org.eclipse.equinox.p2.tests/All p2 Tests.launch	
+++ b/bundles/org.eclipse.equinox.p2.tests/All p2 Tests.launch	
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<launchConfiguration type="org.eclipse.pde.ui.JunitLaunchConfig">
+<?xml version="1.0" encoding="UTF-8"?><launchConfiguration type="org.eclipse.pde.ui.JunitLaunchConfig">
 <booleanAttribute key="append.args" value="true"/>
 <stringAttribute key="application" value="org.eclipse.pde.junit.runtime.coretestapplication"/>
 <booleanAttribute key="askclear" value="false"/>
@@ -53,6 +52,7 @@
 <booleanAttribute key="org.eclipse.jdt.junit.KEEPRUNNING_ATTR" value="false"/>
 <stringAttribute key="org.eclipse.jdt.junit.TESTNAME" value=""/>
 <stringAttribute key="org.eclipse.jdt.junit.TEST_KIND" value="org.eclipse.jdt.junit.loader.junit3"/>
+<stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/ibm60"/>
 <stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="org.eclipse.equinox.p2.tests.AutomatedTests"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl} -consolelog"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.eclipse.equinox.p2.tests"/>
@@ -66,4 +66,4 @@
 <booleanAttribute key="useDefaultConfig" value="true"/>
 <booleanAttribute key="useDefaultConfigArea" value="false"/>
 <booleanAttribute key="useProduct" value="false"/>
-</launchConfiguration>
+</launchConfiguration>
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
index 09c353d..9a090ec 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
@@ -38,8 +38,8 @@ public class AutomatedTests extends TestCase {
 		suite.addTest(org.eclipse.equinox.p2.tests.simpleconfigurator.SimpleConfiguratorTests.suite());
 		suite.addTest(org.eclipse.equinox.p2.tests.updatesite.AllTests.suite());
 		suite.addTest(org.eclipse.equinox.p2.tests.touchpoint.eclipse.AllTests.suite());
-		suite.addTest(org.eclipse.equinox.p2.tests.reconciler.dropins.AllTests.suite());
-		suite.addTest(org.eclipse.equinox.p2.tests.full.AllTests.suite());
+		//		suite.addTest(org.eclipse.equinox.p2.tests.reconciler.dropins.AllTests.suite());
+		//		suite.addTest(org.eclipse.equinox.p2.tests.full.AllTests.suite());
 		return suite;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactMirrorApplicationTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactMirrorApplicationTest.java
index 2b15515..da79192 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactMirrorApplicationTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactMirrorApplicationTest.java
@@ -18,6 +18,7 @@ import java.util.Map;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.artifact.mirror.MirrorApplication;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepository;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -45,7 +46,7 @@ public class ArtifactMirrorApplicationTest extends AbstractProvisioningTest {
 	protected void setUp() throws Exception {
 		super.setUp();
 		//load all the repositories
-		sourceRepoLocation = getTestData("0.0", "/testData/mirror/mirrorSourceRepo1");
+		sourceRepoLocation = getTestData("0.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		sourceRepo2Location = getTestData("0.1", "/testData/mirror/mirrorSourceRepo2");
 		sourceRepo3Location = getTestData("0.2", "/testData/mirror/mirrorSourceRepo3");
 		sourceRepo4Location = getTestData("0.3", "/testData/mirror/mirrorSourceRepo4");
@@ -120,7 +121,7 @@ public class ArtifactMirrorApplicationTest extends AbstractProvisioningTest {
 	 */
 	private void basicRunMirrorApplication(String message, URI source, URI destination, boolean append) throws Exception {
 		//set the default arguments
-		String[] args = new String[] {"-source", source.toString(), "-destination", destination.toString(), append ? "-append" : ""};
+		String[] args = new String[] {"-source", URIUtil.toURL(source).toExternalForm(), "-destination", URIUtil.toURL(destination).toExternalForm(), append ? "-append" : ""};
 		//run the mirror application
 		runMirrorApplication(message, args);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactRepositoryCleanupTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactRepositoryCleanupTest.java
index 42149bb..7a4432c 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactRepositoryCleanupTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/ArtifactRepositoryCleanupTest.java
@@ -11,6 +11,7 @@
 package org.eclipse.equinox.p2.tests.mirror;
 
 import java.io.File;
+import java.net.MalformedURLException;
 import java.net.URI;
 import java.util.HashMap;
 import java.util.Map;
@@ -38,7 +39,7 @@ public class ArtifactRepositoryCleanupTest extends AbstractProvisioningTest {
 	protected void setUp() throws Exception {
 		super.setUp();
 		//load all the repositories
-		sourceRepoLocation = getTestData("1.0", "/testData/mirror/mirrorSourceRepo1");
+		sourceRepoLocation = getTestData("1.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		bystanderRepoLocation = getTestData("2.0", "/testData/mirror/mirrorSourceRepo2");
 
 		//create destination location
@@ -78,7 +79,12 @@ public class ArtifactRepositoryCleanupTest extends AbstractProvisioningTest {
 			public Map getArguments() {
 				Map arguments = new HashMap();
 
-				arguments.put(IApplicationContext.APPLICATION_ARGS, new String[] {"-source", source.toURI().toString(), "-destination", destination.toURI().toString(), append ? "-append" : ""});
+				try {
+					arguments.put(IApplicationContext.APPLICATION_ARGS, new String[] {"-source", source.toURL().toExternalForm(), "-destination", destination.toURL().toExternalForm(), append ? "-append" : ""});
+				} catch (MalformedURLException e) {
+					// shouldn't happen
+					throw new IllegalArgumentException(e);
+				}
 
 				return arguments;
 			}
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java
index 7962011..fb2d4da 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java
@@ -17,6 +17,7 @@ import java.util.HashMap;
 import java.util.Map;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.metadata.mirror.MirrorApplication;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
@@ -48,7 +49,7 @@ public class MetadataMirrorApplicationTest extends AbstractProvisioningTest {
 	protected void setUp() throws Exception {
 		super.setUp();
 		//load all the repositories
-		sourceRepoLocation = getTestData("0.0", "/testData/mirror/mirrorSourceRepo1");
+		sourceRepoLocation = getTestData("0.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		sourceRepo2Location = getTestData("0.1", "/testData/mirror/mirrorSourceRepo2");
 		sourceRepo3Location = getTestData("0.2", "/testData/mirror/mirrorSourceRepo3");
 		sourceRepo4Location = getTestData("0.3", "/testData/mirror/mirrorSourceRepo4");
@@ -123,7 +124,7 @@ public class MetadataMirrorApplicationTest extends AbstractProvisioningTest {
 	 */
 	private void basicRunMirrorApplication(String message, URI source, URI destination, boolean append) throws Exception {
 		//set the default arguments
-		String[] args = new String[] {"-source", source.toString(), "-destination", destination.toString(), append ? "-append" : ""};
+		String[] args = new String[] {"-source", URIUtil.toURL(source).toExternalForm(), "-destination", URIUtil.toURL(destination).toExternalForm(), append ? "-append" : ""};
 		//run the mirror application
 		runMirrorApplication(message, args);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataRepositoryCleanupTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataRepositoryCleanupTest.java
index eba88d6..0715dae 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataRepositoryCleanupTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataRepositoryCleanupTest.java
@@ -11,6 +11,7 @@
 package org.eclipse.equinox.p2.tests.mirror;
 
 import java.io.File;
+import java.net.MalformedURLException;
 import java.net.URI;
 import java.util.HashMap;
 import java.util.Map;
@@ -40,7 +41,7 @@ public class MetadataRepositoryCleanupTest extends AbstractProvisioningTest {
 	protected void setUp() throws Exception {
 		super.setUp();
 		//load all the repositories
-		sourceRepoLocation = getTestData("1.0", "/testData/mirror/mirrorSourceRepo1");
+		sourceRepoLocation = getTestData("1.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		bystanderRepoLocation = getTestData("2.0", "/testData/mirror/mirrorSourceRepo2");
 
 		//create destination location
@@ -72,7 +73,12 @@ public class MetadataRepositoryCleanupTest extends AbstractProvisioningTest {
 
 			public Map getArguments() {
 				Map arguments = new HashMap();
-				arguments.put(IApplicationContext.APPLICATION_ARGS, new String[] {"-source", source.toURI().toString(), "-destination", destination.toURI().toString(), append ? "-append" : ""});
+				try {
+					arguments.put(IApplicationContext.APPLICATION_ARGS, new String[] {"-source", source.toURL().toExternalForm(), "-destination", destination.toURL().toExternalForm(), append ? "-append" : ""});
+				} catch (MalformedURLException e) {
+					// shouldn't happen
+					throw new IllegalArgumentException(e);
+				}
 				return arguments;
 			}
 
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/artifacts.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/artifacts.xml
new file mode 100644
index 0000000..d5112bd
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/artifacts.xml	
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<?artifactRepository class='org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository' version='1.0.0'?>
+<repository name='file:/C:/Program Files/eclipse/workspace/site/ - artifacts' type='org.eclipse.equinox.p2.artifact.repository.simpleRepository' version='1'>
+  <properties size='2'>
+    <property name='p2.compressed' value='false'/>
+    <property name='p2.timestamp' value='1221488783484'/>
+  </properties>
+  <mappings size='3'>
+    <rule filter='(&amp; (classifier=osgi.bundle))' output='${repoUrl}/plugins/${id}_${version}.jar'/>
+    <rule filter='(&amp; (classifier=binary))' output='${repoUrl}/binary/${id}_${version}'/>
+    <rule filter='(&amp; (classifier=org.eclipse.update.feature))' output='${repoUrl}/features/${id}_${version}.jar'/>
+  </mappings>
+  <artifacts size='2'>
+    <artifact classifier='osgi.bundle' id='helloworld' version='1.0.0'>
+      <properties size='3'>
+        <property name='artifact.size' value='3379'/>
+        <property name='download.size' value='3379'/>
+        <property name='download.contentType' value='application/zip'/>
+      </properties>
+    </artifact>
+    <artifact classifier='org.eclipse.update.feature' id='helloworldfeature' version='1.0.0'>
+      <properties size='2'>
+        <property name='artifact.size' value='670'/>
+        <property name='download.size' value='670'/>
+      </properties>
+    </artifact>
+  </artifacts>
+</repository>
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/content.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/content.xml
new file mode 100644
index 0000000..303f31b
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/content.xml	
@@ -0,0 +1,331 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<?metadataRepository class='org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository' version='1.0.0'?>
+<repository name='file:/C:/Program Files/eclipse/workspace/site/ - metadata' type='org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository' version='1'>
+  <properties size='2'>
+    <property name='p2.compressed' value='false'/>
+    <property name='p2.timestamp' value='1221488783484'/>
+  </properties>
+  <units size='8'>
+    <unit id='a.jre' version='1.6.0' singleton='false'>
+      <provides size='117'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='a.jre' version='1.6.0'/>
+        <provided namespace='java.package' name='javax.accessibility' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.activity' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.crypto' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.crypto.interfaces' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.crypto.spec' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.event' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.metadata' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.plugins.bmp' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.plugins.jpeg' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.imageio.stream' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.loading' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.modelmbean' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.monitor' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.openmbean' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.relation' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.remote' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.remote.rmi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.management.timer' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.naming' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.naming.directory' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.naming.event' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.naming.ldap' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.naming.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.net' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.net.ssl' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.print' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.print.attribute' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.print.attribute.standard' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.print.event' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.rmi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.rmi.CORBA' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.rmi.ssl' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth.callback' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth.kerberos' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth.login' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.auth.x500' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.cert' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.security.sasl' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sound.midi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sound.midi.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sound.sampled' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sound.sampled.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sql' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sql.rowset' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sql.rowset.serial' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.sql.rowset.spi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.border' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.colorchooser' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.event' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.filechooser' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.plaf' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.plaf.basic' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.plaf.metal' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.plaf.multi' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.plaf.synth' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.table' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.text' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.text.html' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.text.html.parser' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.text.rtf' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.tree' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.swing.undo' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.transaction' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.transaction.xa' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.datatype' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.namespace' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.parsers' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.transform' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.transform.dom' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.transform.sax' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.transform.stream' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.validation' version='0.0.0'/>
+        <provided namespace='java.package' name='javax.xml.xpath' version='0.0.0'/>
+        <provided namespace='java.package' name='org.ietf.jgss' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA_2_3' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA_2_3.portable' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA.DynAnyPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA.ORBPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA.portable' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CORBA.TypeCodePackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CosNaming' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CosNaming.NamingContextExtPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.CosNaming.NamingContextPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.Dynamic' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.DynamicAny' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.DynamicAny.DynAnyFactoryPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.DynamicAny.DynAnyPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.IOP' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.IOP.CodecFactoryPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.IOP.CodecPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.Messaging' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableInterceptor' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableInterceptor.ORBInitInfoPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer.CurrentPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer.POAManagerPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer.POAPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer.portable' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.PortableServer.ServantLocatorPackage' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.SendingContext' version='0.0.0'/>
+        <provided namespace='java.package' name='org.omg.stub.java.rmi' version='0.0.0'/>
+        <provided namespace='java.package' name='org.w3c.dom' version='0.0.0'/>
+        <provided namespace='java.package' name='org.w3c.dom.bootstrap' version='0.0.0'/>
+        <provided namespace='java.package' name='org.w3c.dom.events' version='0.0.0'/>
+        <provided namespace='java.package' name='org.w3c.dom.ls' version='0.0.0'/>
+        <provided namespace='java.package' name='org.xml.sax' version='0.0.0'/>
+        <provided namespace='java.package' name='org.xml.sax.ext' version='0.0.0'/>
+        <provided namespace='java.package' name='org.xml.sax.helpers' version='0.0.0'/>
+      </provides>
+      <touchpoint id='org.eclipse.equinox.p2.native' version='1.0.0'/>
+    </unit>
+    <unit id='config.a.jre' version='1.6.0' singleton='false'>
+      <hostRequirements size='1'>
+        <required namespace='org.eclipse.equinox.p2.iu' name='a.jre' range='1.6.0'/>
+      </hostRequirements>
+      <properties size='1'>
+        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
+      </properties>
+      <provides size='1'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='config.a.jre' version='1.6.0'/>
+      </provides>
+      <requires size='1'>
+        <required namespace='org.eclipse.equinox.p2.iu' name='a.jre' range='1.6.0'/>
+      </requires>
+      <touchpoint id='org.eclipse.equinox.p2.native' version='1.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='1'>
+          <instruction key='install'>
+
+          </instruction>
+        </instructions>
+      </touchpointData>
+    </unit>
+    <unit id='helloworldfeature.feature.jar' version='1.0.0'>
+      <update id='helloworldfeature.feature.jar' range='[0.0.0,1.0.0)' severity='0'/>
+      <properties size='3'>
+        <property name='org.eclipse.equinox.p2.name' value='Helloworldfeature Feature'/>
+        <property name='org.eclipse.equinox.p2.description' value='[Enter Feature Description here.]'/>
+        <property name='org.eclipse.equinox.p2.description.url' value='http://www.example.com/description'/>
+      </properties>
+      <provides size='3'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.jar' version='1.0.0'/>
+        <provided namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' version='1.0.0'/>
+        <provided namespace='org.eclipse.update.feature' name='helloworldfeature' version='1.0.0'/>
+      </provides>
+      <filter>
+        (org.eclipse.update.install.features=true)
+      </filter>
+      <artifacts size='1'>
+        <artifact classifier='org.eclipse.update.feature' id='helloworldfeature' version='1.0.0'/>
+      </artifacts>
+      <touchpoint id='org.eclipse.equinox.p2.osgi' version='1.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='1'>
+          <instruction key='zipped'>
+            true
+          </instruction>
+        </instructions>
+      </touchpointData>
+      <licenses size='1'>
+        <license url='http://www.example.com/license'>
+          [Enter License Description here.]
+        </license>
+      </licenses>
+      <copyright url='http://www.example.com/copyright'>
+        [Enter Copyright Description here.]
+      </copyright>
+    </unit>
+    <unit id='tooling.org.eclipse.update.feature.default' version='1.0.0' singleton='false'>
+      <hostRequirements size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' range='0.0.0' optional='true' multiple='true' greedy='false'/>
+      </hostRequirements>
+      <properties size='1'>
+        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
+      </properties>
+      <provides size='2'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.org.eclipse.update.feature.default' version='1.0.0'/>
+        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
+      </provides>
+      <requires size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' range='0.0.0' optional='true' multiple='true' greedy='false'/>
+      </requires>
+      <filter>
+        (org.eclipse.update.install.features=true)
+      </filter>
+      <touchpoint id='null' version='0.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='2'>
+          <instruction key='uninstall'>
+            uninstallFeature(feature:${artifact},featureId:default,featureVersion:default)
+          </instruction>
+          <instruction key='install'>
+            installFeature(feature:${artifact},featureId:default,featureVersion:default)
+          </instruction>
+        </instructions>
+      </touchpointData>
+    </unit>
+    <unit id='helloworldfeature.feature.group' version='1.0.0' singleton='false'>
+      <update id='helloworldfeature.feature.group' range='[0.0.0,1.0.0)' severity='0'/>
+      <properties size='4'>
+        <property name='org.eclipse.equinox.p2.name' value='Helloworldfeature Feature'/>
+        <property name='org.eclipse.equinox.p2.description' value='[Enter Feature Description here.]'/>
+        <property name='org.eclipse.equinox.p2.description.url' value='http://www.example.com/description'/>
+        <property name='org.eclipse.equinox.p2.type.group' value='true'/>
+      </properties>
+      <provides size='1'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.group' version='1.0.0'/>
+      </provides>
+      <requires size='2'>
+        <required namespace='org.eclipse.equinox.p2.iu' name='helloworld' range='[1.0.0,1.0.0]'/>
+        <required namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.jar' range='[1.0.0,1.0.0]'>
+          <filter>
+            (org.eclipse.update.install.features=true)
+          </filter>
+        </required>
+      </requires>
+      <touchpoint id='null' version='0.0.0'/>
+      <licenses size='1'>
+        <license url='http://www.example.com/license'>
+          [Enter License Description here.]
+        </license>
+      </licenses>
+      <copyright url='http://www.example.com/copyright'>
+        [Enter Copyright Description here.]
+      </copyright>
+    </unit>
+    <unit id='tooling.osgi.bundle.default' version='1.0.0' singleton='false'>
+      <hostRequirements size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' range='0.0.0' multiple='true' greedy='false'/>
+      </hostRequirements>
+      <properties size='1'>
+        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
+      </properties>
+      <provides size='2'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.osgi.bundle.default' version='1.0.0'/>
+        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
+      </provides>
+      <requires size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' range='0.0.0' multiple='true' greedy='false'/>
+      </requires>
+      <touchpoint id='null' version='0.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='4'>
+          <instruction key='configure'>
+            setStartLevel(startLevel:4);
+          </instruction>
+          <instruction key='unconfigure'>
+
+          </instruction>
+          <instruction key='uninstall'>
+            uninstallBundle(bundle:${artifact})
+          </instruction>
+          <instruction key='install'>
+            installBundle(bundle:${artifact})
+          </instruction>
+        </instructions>
+      </touchpointData>
+    </unit>
+    <unit id='tooling.source.default' version='1.0.0' singleton='false'>
+      <hostRequirements size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='source' range='0.0.0' optional='true' multiple='true' greedy='false'/>
+      </hostRequirements>
+      <properties size='1'>
+        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
+      </properties>
+      <provides size='2'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.source.default' version='1.0.0'/>
+        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
+      </provides>
+      <requires size='1'>
+        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='source' range='0.0.0' optional='true' multiple='true' greedy='false'/>
+      </requires>
+      <touchpoint id='null' version='0.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='2'>
+          <instruction key='uninstall'>
+            removeSourceBundle(bundle:${artifact})
+          </instruction>
+          <instruction key='install'>
+            addSourceBundle(bundle:${artifact})
+          </instruction>
+        </instructions>
+      </touchpointData>
+    </unit>
+    <unit id='helloworld' version='1.0.0'>
+      <update id='helloworld' range='[0.0.0,1.0.0)' severity='0'/>
+      <properties size='1'>
+        <property name='org.eclipse.equinox.p2.name' value='Helloworld Plug-in'/>
+      </properties>
+      <provides size='3'>
+        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworld' version='1.0.0'/>
+        <provided namespace='osgi.bundle' name='helloworld' version='1.0.0'/>
+        <provided namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' version='1.0.0'/>
+      </provides>
+      <requires size='2'>
+        <required namespace='osgi.bundle' name='org.eclipse.ui' range='0.0.0'/>
+        <required namespace='osgi.bundle' name='org.eclipse.core.runtime' range='0.0.0'/>
+      </requires>
+      <artifacts size='1'>
+        <artifact classifier='osgi.bundle' id='helloworld' version='1.0.0'/>
+      </artifacts>
+      <touchpoint id='org.eclipse.equinox.p2.osgi' version='1.0.0'/>
+      <touchpointData size='1'>
+        <instructions size='1'>
+          <instruction key='manifest'>
+            Bundle-Activator: helloworld.Activator&#xA;Require-Bundle: org.eclipse.ui,org.eclipse.core.runtime&#xA;Manifest-Version: 1.0&#xA;Bundle-RequiredExecutionEnvironment: J2SE-1.5&#xA;Bundle-Name: Helloworld Plug-in&#xA;Bundle-Version: 1.0.0&#xA;Bundle-ManifestVersion: 2&#xA;Bundle-ActivationPolicy: lazy&#xA;Bundle-SymbolicName: helloworld; singleton:=true&#xA;
+          </instruction>
+        </instructions>
+      </touchpointData>
+    </unit>
+  </units>
+</repository>
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/artifacts.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/artifacts.xml
deleted file mode 100644
index d5112bd..0000000
--- a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/artifacts.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='UTF-8'?>
-<?artifactRepository class='org.eclipse.equinox.internal.p2.artifact.repository.simple.SimpleArtifactRepository' version='1.0.0'?>
-<repository name='file:/C:/Program Files/eclipse/workspace/site/ - artifacts' type='org.eclipse.equinox.p2.artifact.repository.simpleRepository' version='1'>
-  <properties size='2'>
-    <property name='p2.compressed' value='false'/>
-    <property name='p2.timestamp' value='1221488783484'/>
-  </properties>
-  <mappings size='3'>
-    <rule filter='(&amp; (classifier=osgi.bundle))' output='${repoUrl}/plugins/${id}_${version}.jar'/>
-    <rule filter='(&amp; (classifier=binary))' output='${repoUrl}/binary/${id}_${version}'/>
-    <rule filter='(&amp; (classifier=org.eclipse.update.feature))' output='${repoUrl}/features/${id}_${version}.jar'/>
-  </mappings>
-  <artifacts size='2'>
-    <artifact classifier='osgi.bundle' id='helloworld' version='1.0.0'>
-      <properties size='3'>
-        <property name='artifact.size' value='3379'/>
-        <property name='download.size' value='3379'/>
-        <property name='download.contentType' value='application/zip'/>
-      </properties>
-    </artifact>
-    <artifact classifier='org.eclipse.update.feature' id='helloworldfeature' version='1.0.0'>
-      <properties size='2'>
-        <property name='artifact.size' value='670'/>
-        <property name='download.size' value='670'/>
-      </properties>
-    </artifact>
-  </artifacts>
-</repository>
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/content.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/content.xml
deleted file mode 100644
index 303f31b..0000000
--- a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/content.xml
+++ /dev/null
@@ -1,331 +0,0 @@
-<?xml version='1.0' encoding='UTF-8'?>
-<?metadataRepository class='org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository' version='1.0.0'?>
-<repository name='file:/C:/Program Files/eclipse/workspace/site/ - metadata' type='org.eclipse.equinox.internal.p2.metadata.repository.LocalMetadataRepository' version='1'>
-  <properties size='2'>
-    <property name='p2.compressed' value='false'/>
-    <property name='p2.timestamp' value='1221488783484'/>
-  </properties>
-  <units size='8'>
-    <unit id='a.jre' version='1.6.0' singleton='false'>
-      <provides size='117'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='a.jre' version='1.6.0'/>
-        <provided namespace='java.package' name='javax.accessibility' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.activity' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.crypto' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.crypto.interfaces' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.crypto.spec' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.event' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.metadata' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.plugins.bmp' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.plugins.jpeg' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.imageio.stream' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.loading' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.modelmbean' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.monitor' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.openmbean' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.relation' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.remote' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.remote.rmi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.management.timer' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.naming' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.naming.directory' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.naming.event' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.naming.ldap' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.naming.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.net' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.net.ssl' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.print' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.print.attribute' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.print.attribute.standard' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.print.event' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.rmi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.rmi.CORBA' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.rmi.ssl' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth.callback' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth.kerberos' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth.login' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.auth.x500' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.cert' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.security.sasl' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sound.midi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sound.midi.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sound.sampled' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sound.sampled.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sql' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sql.rowset' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sql.rowset.serial' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.sql.rowset.spi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.border' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.colorchooser' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.event' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.filechooser' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.plaf' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.plaf.basic' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.plaf.metal' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.plaf.multi' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.plaf.synth' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.table' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.text' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.text.html' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.text.html.parser' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.text.rtf' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.tree' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.swing.undo' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.transaction' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.transaction.xa' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.datatype' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.namespace' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.parsers' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.transform' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.transform.dom' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.transform.sax' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.transform.stream' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.validation' version='0.0.0'/>
-        <provided namespace='java.package' name='javax.xml.xpath' version='0.0.0'/>
-        <provided namespace='java.package' name='org.ietf.jgss' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA_2_3' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA_2_3.portable' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA.DynAnyPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA.ORBPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA.portable' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CORBA.TypeCodePackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CosNaming' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CosNaming.NamingContextExtPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.CosNaming.NamingContextPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.Dynamic' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.DynamicAny' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.DynamicAny.DynAnyFactoryPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.DynamicAny.DynAnyPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.IOP' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.IOP.CodecFactoryPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.IOP.CodecPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.Messaging' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableInterceptor' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableInterceptor.ORBInitInfoPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer.CurrentPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer.POAManagerPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer.POAPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer.portable' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.PortableServer.ServantLocatorPackage' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.SendingContext' version='0.0.0'/>
-        <provided namespace='java.package' name='org.omg.stub.java.rmi' version='0.0.0'/>
-        <provided namespace='java.package' name='org.w3c.dom' version='0.0.0'/>
-        <provided namespace='java.package' name='org.w3c.dom.bootstrap' version='0.0.0'/>
-        <provided namespace='java.package' name='org.w3c.dom.events' version='0.0.0'/>
-        <provided namespace='java.package' name='org.w3c.dom.ls' version='0.0.0'/>
-        <provided namespace='java.package' name='org.xml.sax' version='0.0.0'/>
-        <provided namespace='java.package' name='org.xml.sax.ext' version='0.0.0'/>
-        <provided namespace='java.package' name='org.xml.sax.helpers' version='0.0.0'/>
-      </provides>
-      <touchpoint id='org.eclipse.equinox.p2.native' version='1.0.0'/>
-    </unit>
-    <unit id='config.a.jre' version='1.6.0' singleton='false'>
-      <hostRequirements size='1'>
-        <required namespace='org.eclipse.equinox.p2.iu' name='a.jre' range='1.6.0'/>
-      </hostRequirements>
-      <properties size='1'>
-        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
-      </properties>
-      <provides size='1'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='config.a.jre' version='1.6.0'/>
-      </provides>
-      <requires size='1'>
-        <required namespace='org.eclipse.equinox.p2.iu' name='a.jre' range='1.6.0'/>
-      </requires>
-      <touchpoint id='org.eclipse.equinox.p2.native' version='1.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='1'>
-          <instruction key='install'>
-
-          </instruction>
-        </instructions>
-      </touchpointData>
-    </unit>
-    <unit id='helloworldfeature.feature.jar' version='1.0.0'>
-      <update id='helloworldfeature.feature.jar' range='[0.0.0,1.0.0)' severity='0'/>
-      <properties size='3'>
-        <property name='org.eclipse.equinox.p2.name' value='Helloworldfeature Feature'/>
-        <property name='org.eclipse.equinox.p2.description' value='[Enter Feature Description here.]'/>
-        <property name='org.eclipse.equinox.p2.description.url' value='http://www.example.com/description'/>
-      </properties>
-      <provides size='3'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.jar' version='1.0.0'/>
-        <provided namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' version='1.0.0'/>
-        <provided namespace='org.eclipse.update.feature' name='helloworldfeature' version='1.0.0'/>
-      </provides>
-      <filter>
-        (org.eclipse.update.install.features=true)
-      </filter>
-      <artifacts size='1'>
-        <artifact classifier='org.eclipse.update.feature' id='helloworldfeature' version='1.0.0'/>
-      </artifacts>
-      <touchpoint id='org.eclipse.equinox.p2.osgi' version='1.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='1'>
-          <instruction key='zipped'>
-            true
-          </instruction>
-        </instructions>
-      </touchpointData>
-      <licenses size='1'>
-        <license url='http://www.example.com/license'>
-          [Enter License Description here.]
-        </license>
-      </licenses>
-      <copyright url='http://www.example.com/copyright'>
-        [Enter Copyright Description here.]
-      </copyright>
-    </unit>
-    <unit id='tooling.org.eclipse.update.feature.default' version='1.0.0' singleton='false'>
-      <hostRequirements size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' range='0.0.0' optional='true' multiple='true' greedy='false'/>
-      </hostRequirements>
-      <properties size='1'>
-        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
-      </properties>
-      <provides size='2'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.org.eclipse.update.feature.default' version='1.0.0'/>
-        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
-      </provides>
-      <requires size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='feature' range='0.0.0' optional='true' multiple='true' greedy='false'/>
-      </requires>
-      <filter>
-        (org.eclipse.update.install.features=true)
-      </filter>
-      <touchpoint id='null' version='0.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='2'>
-          <instruction key='uninstall'>
-            uninstallFeature(feature:${artifact},featureId:default,featureVersion:default)
-          </instruction>
-          <instruction key='install'>
-            installFeature(feature:${artifact},featureId:default,featureVersion:default)
-          </instruction>
-        </instructions>
-      </touchpointData>
-    </unit>
-    <unit id='helloworldfeature.feature.group' version='1.0.0' singleton='false'>
-      <update id='helloworldfeature.feature.group' range='[0.0.0,1.0.0)' severity='0'/>
-      <properties size='4'>
-        <property name='org.eclipse.equinox.p2.name' value='Helloworldfeature Feature'/>
-        <property name='org.eclipse.equinox.p2.description' value='[Enter Feature Description here.]'/>
-        <property name='org.eclipse.equinox.p2.description.url' value='http://www.example.com/description'/>
-        <property name='org.eclipse.equinox.p2.type.group' value='true'/>
-      </properties>
-      <provides size='1'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.group' version='1.0.0'/>
-      </provides>
-      <requires size='2'>
-        <required namespace='org.eclipse.equinox.p2.iu' name='helloworld' range='[1.0.0,1.0.0]'/>
-        <required namespace='org.eclipse.equinox.p2.iu' name='helloworldfeature.feature.jar' range='[1.0.0,1.0.0]'>
-          <filter>
-            (org.eclipse.update.install.features=true)
-          </filter>
-        </required>
-      </requires>
-      <touchpoint id='null' version='0.0.0'/>
-      <licenses size='1'>
-        <license url='http://www.example.com/license'>
-          [Enter License Description here.]
-        </license>
-      </licenses>
-      <copyright url='http://www.example.com/copyright'>
-        [Enter Copyright Description here.]
-      </copyright>
-    </unit>
-    <unit id='tooling.osgi.bundle.default' version='1.0.0' singleton='false'>
-      <hostRequirements size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' range='0.0.0' multiple='true' greedy='false'/>
-      </hostRequirements>
-      <properties size='1'>
-        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
-      </properties>
-      <provides size='2'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.osgi.bundle.default' version='1.0.0'/>
-        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
-      </provides>
-      <requires size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' range='0.0.0' multiple='true' greedy='false'/>
-      </requires>
-      <touchpoint id='null' version='0.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='4'>
-          <instruction key='configure'>
-            setStartLevel(startLevel:4);
-          </instruction>
-          <instruction key='unconfigure'>
-
-          </instruction>
-          <instruction key='uninstall'>
-            uninstallBundle(bundle:${artifact})
-          </instruction>
-          <instruction key='install'>
-            installBundle(bundle:${artifact})
-          </instruction>
-        </instructions>
-      </touchpointData>
-    </unit>
-    <unit id='tooling.source.default' version='1.0.0' singleton='false'>
-      <hostRequirements size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='source' range='0.0.0' optional='true' multiple='true' greedy='false'/>
-      </hostRequirements>
-      <properties size='1'>
-        <property name='org.eclipse.equinox.p2.type.fragment' value='true'/>
-      </properties>
-      <provides size='2'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='tooling.source.default' version='1.0.0'/>
-        <provided namespace='org.eclipse.equinox.p2.flavor' name='tooling' version='1.0.0'/>
-      </provides>
-      <requires size='1'>
-        <required namespace='org.eclipse.equinox.p2.eclipse.type' name='source' range='0.0.0' optional='true' multiple='true' greedy='false'/>
-      </requires>
-      <touchpoint id='null' version='0.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='2'>
-          <instruction key='uninstall'>
-            removeSourceBundle(bundle:${artifact})
-          </instruction>
-          <instruction key='install'>
-            addSourceBundle(bundle:${artifact})
-          </instruction>
-        </instructions>
-      </touchpointData>
-    </unit>
-    <unit id='helloworld' version='1.0.0'>
-      <update id='helloworld' range='[0.0.0,1.0.0)' severity='0'/>
-      <properties size='1'>
-        <property name='org.eclipse.equinox.p2.name' value='Helloworld Plug-in'/>
-      </properties>
-      <provides size='3'>
-        <provided namespace='org.eclipse.equinox.p2.iu' name='helloworld' version='1.0.0'/>
-        <provided namespace='osgi.bundle' name='helloworld' version='1.0.0'/>
-        <provided namespace='org.eclipse.equinox.p2.eclipse.type' name='bundle' version='1.0.0'/>
-      </provides>
-      <requires size='2'>
-        <required namespace='osgi.bundle' name='org.eclipse.ui' range='0.0.0'/>
-        <required namespace='osgi.bundle' name='org.eclipse.core.runtime' range='0.0.0'/>
-      </requires>
-      <artifacts size='1'>
-        <artifact classifier='osgi.bundle' id='helloworld' version='1.0.0'/>
-      </artifacts>
-      <touchpoint id='org.eclipse.equinox.p2.osgi' version='1.0.0'/>
-      <touchpointData size='1'>
-        <instructions size='1'>
-          <instruction key='manifest'>
-            Bundle-Activator: helloworld.Activator&#xA;Require-Bundle: org.eclipse.ui,org.eclipse.core.runtime&#xA;Manifest-Version: 1.0&#xA;Bundle-RequiredExecutionEnvironment: J2SE-1.5&#xA;Bundle-Name: Helloworld Plug-in&#xA;Bundle-Version: 1.0.0&#xA;Bundle-ManifestVersion: 2&#xA;Bundle-ActivationPolicy: lazy&#xA;Bundle-SymbolicName: helloworld; singleton:=true&#xA;
-          </instruction>
-        </instructions>
-      </touchpointData>
-    </unit>
-  </units>
-</repository>
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/site.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/site.xml
deleted file mode 100644
index 268bd81..0000000
--- a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/site.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<site>
-   <feature url="features/helloworldfeature_1.0.0.jar" id="helloworldfeature" version="1.0.0"/>
-</site>
diff --git a/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/MirrorApplication.java b/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/MirrorApplication.java
index 749507c..b53b2e8 100644
--- a/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/MirrorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/MirrorApplication.java
@@ -11,9 +11,11 @@
 package org.eclipse.equinox.internal.p2.tools.mirror;
 
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.*;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.app.IApplicationContext;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 
 /**
  * An application that performs mirroring of artifacts between repositories.
@@ -111,22 +113,27 @@ public class MirrorApplication implements IApplication {
 				continue;
 			String arg = args[++i];
 
-			if (args[i - 1].equalsIgnoreCase("-source")) { //$NON-NLS-1$
-				metadataSourceLocation = new URI(arg);
-				artifactSourceLocation = new URI(arg);
+			try {
+				if (args[i - 1].equalsIgnoreCase("-source")) { //$NON-NLS-1$
+					metadataSourceLocation = URIUtil.fromString(arg);
+					artifactSourceLocation = URIUtil.fromString(arg);
+				}
+				if (args[i - 1].equalsIgnoreCase("-destination")) { //$NON-NLS-1$
+					metadataDestinationLocation = URIUtil.fromString(arg);
+					artifactDestinationLocation = URIUtil.fromString(arg);
+				}
+				if (args[i - 1].equalsIgnoreCase("-metadatadestination")) //$NON-NLS-1$
+					metadataDestinationLocation = URIUtil.fromString(arg);
+				if (args[i - 1].equalsIgnoreCase("-metadatasource")) //$NON-NLS-1$
+					metadataSourceLocation = URIUtil.fromString(arg);
+				if (args[i - 1].equalsIgnoreCase("-artifactdestination")) //$NON-NLS-1$
+					artifactDestinationLocation = URIUtil.fromString(arg);
+				if (args[i - 1].equalsIgnoreCase("-artifactsource")) //$NON-NLS-1$
+					artifactSourceLocation = URIUtil.fromString(arg);
+			} catch (URISyntaxException e) {
+				throw new IllegalArgumentException("Repository location (" + arg + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
 			}
-			if (args[i - 1].equalsIgnoreCase("-destination")) { //$NON-NLS-1$
-				metadataDestinationLocation = new URI(arg);
-				artifactDestinationLocation = new URI(arg);
-			}
-			if (args[i - 1].equalsIgnoreCase("-metadatadestination")) //$NON-NLS-1$
-				metadataDestinationLocation = new URI(arg);
-			if (args[i - 1].equalsIgnoreCase("-metadatasource")) //$NON-NLS-1$
-				metadataSourceLocation = new URI(arg);
-			if (args[i - 1].equalsIgnoreCase("-artifactdestination")) //$NON-NLS-1$
-				artifactDestinationLocation = new URI(arg);
-			if (args[i - 1].equalsIgnoreCase("-artifactsource")) //$NON-NLS-1$
-				artifactSourceLocation = new URI(arg);
+
 			if (args[i - 1].equalsIgnoreCase("-ius")) //$NON-NLS-1$
 				if (arg.equalsIgnoreCase("all")) //$NON-NLS-1$ 
 					iuSpecs = new String[0];
commit 2351ff74f14e9da7fe365e351b0b7c4737254e51
Author: DJ Houghton <dj>
Date:   Fri Oct 10 18:25:36 2008 +0000

    Bug 250452 - Update applications to handle URIs

11	5	bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/MirrorApplication.java
21	19	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/AbstractPublisherApplication.java
14	27	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
2	1	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAndBundlesPublisherApplication.java
2	1	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
2	2	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductPublisherApplication.java
9	13	bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
14	14	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/director/DirectorAppTest.java
1	1	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/GeneratorTests.java
4	4	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/TestGeneratorInfo.java
7	1	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/touchpoint/eclipse/UtilTest.java
-	-	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/features/helloworldfeature_1.0.0.jar
-	-	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/plugins/helloworld_1.0.0.jar
-	-	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/features/helloworldfeature_1.0.0.jar
-	-	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/plugins/helloworld_1.0.0.jar
0	4	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo2/site.xml
0	5	bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo3/site.xml
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/MirrorApplication.java b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/MirrorApplication.java
index 11f6de4..2f7ccbf 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/MirrorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/MirrorApplication.java
@@ -11,12 +11,14 @@
 package org.eclipse.equinox.internal.p2.artifact.mirror;
 
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.util.Map;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.artifact.repository.Activator;
 import org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepository;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -84,7 +86,7 @@ public class MirrorApplication implements IApplication {
 
 		//must execute before initializeDestination is called
 		source = getManager().loadRepository(sourceLocation, null);
-			destination = initializeDestination();
+		destination = initializeDestination();
 	}
 
 	private IArtifactRepository initializeDestination() throws ProvisionException {
@@ -128,10 +130,14 @@ public class MirrorApplication implements IApplication {
 				continue;
 			String arg = args[++i];
 
-			if (args[i - 1].equalsIgnoreCase("-source")) //$NON-NLS-1$
-				sourceLocation = new URI(arg);
-			if (args[i - 1].equalsIgnoreCase("-destination")) //$NON-NLS-1$
-				destinationLocation = new URI(arg);
+			try {
+				if (args[i - 1].equalsIgnoreCase("-source")) //$NON-NLS-1$
+					sourceLocation = URIUtil.fromString(arg);
+				if (args[i - 1].equalsIgnoreCase("-destination")) //$NON-NLS-1$
+					destinationLocation = URIUtil.fromString(arg);
+			} catch (URISyntaxException e) {
+				throw new IllegalArgumentException("Repository location (" + arg + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
+			}
 		}
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/AbstractPublisherApplication.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/AbstractPublisherApplication.java
index 53353cf..435e7fb 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/AbstractPublisherApplication.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/AbstractPublisherApplication.java
@@ -11,7 +11,8 @@
 package org.eclipse.equinox.p2.publisher;
 
 import java.io.File;
-import java.net.MalformedURLException;
+import java.net.URI;
+import java.net.URISyntaxException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.equinox.app.IApplication;
@@ -19,6 +20,7 @@ import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.artifact.repository.ArtifactRepositoryManager;
 import org.eclipse.equinox.internal.p2.core.ProvisioningEventBus;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.metadata.repository.MetadataRepositoryManager;
 import org.eclipse.equinox.internal.p2.publisher.Activator;
 import org.eclipse.equinox.internal.p2.publisher.Messages;
@@ -50,9 +52,9 @@ public abstract class AbstractPublisherApplication implements IApplication {
 	private ServiceRegistration registrationBus;
 	protected PublisherInfo info;
 	protected String source;
-	protected String metadataLocation;
+	protected URI metadataLocation;
 	protected String metadataRepoName;
-	protected String artifactLocation;
+	protected URI artifactLocation;
 	protected String artifactRepoName;
 	//whether repository xml files should be compressed
 	protected boolean compress = false;
@@ -64,14 +66,10 @@ public abstract class AbstractPublisherApplication implements IApplication {
 	protected void initialize(PublisherInfo info) throws ProvisionException {
 		if (inplace) {
 			File location = new File(source);
-			try {
-				if (metadataLocation == null)
-					metadataLocation = location.toURL().toExternalForm();
-				if (artifactLocation == null)
-					artifactLocation = location.toURL().toExternalForm();
-			} catch (MalformedURLException e) {
-				// ought not happen...
-			}
+			if (metadataLocation == null)
+				metadataLocation = location.toURI();
+			if (artifactLocation == null)
+				artifactLocation = location.toURI();
 			info.setArtifactOptions(info.getArtifactOptions() | IPublisherInfo.A_INDEX | IPublisherInfo.A_PUBLISH);
 		} else
 			info.setArtifactOptions(info.getArtifactOptions() | IPublisherInfo.A_INDEX | IPublisherInfo.A_PUBLISH | IPublisherInfo.A_OVERWRITE);
@@ -98,9 +96,16 @@ public abstract class AbstractPublisherApplication implements IApplication {
 		}
 	}
 
-	protected void processParameter(String arg, String parameter, PublisherInfo info) {
-		if (arg.equalsIgnoreCase("-metadataRepository") || arg.equalsIgnoreCase("-mr")) //$NON-NLS-1$ //$NON-NLS-2$
-			metadataLocation = parameter;
+	protected void processParameter(String arg, String parameter, PublisherInfo info) throws URISyntaxException {
+		try {
+			if (arg.equalsIgnoreCase("-metadataRepository") || arg.equalsIgnoreCase("-mr")) //$NON-NLS-1$ //$NON-NLS-2$
+				metadataLocation = URIUtil.fromString(parameter);
+
+			if (arg.equalsIgnoreCase("-artifactRepository") | arg.equalsIgnoreCase("-ar")) //$NON-NLS-1$ //$NON-NLS-2$
+				artifactLocation = URIUtil.fromString(parameter);
+		} catch (URISyntaxException e) {
+			throw new IllegalArgumentException("Repository location (" + parameter + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
+		}
 
 		if (arg.equalsIgnoreCase("-metadataRepositoryName")) //$NON-NLS-1$
 			metadataRepoName = parameter;
@@ -108,9 +113,6 @@ public abstract class AbstractPublisherApplication implements IApplication {
 		if (arg.equalsIgnoreCase("-source")) //$NON-NLS-1$
 			source = parameter;
 
-		if (arg.equalsIgnoreCase("-artifactRepository") | arg.equalsIgnoreCase("-ar")) //$NON-NLS-1$ //$NON-NLS-2$
-			artifactLocation = parameter;
-
 		if (arg.equalsIgnoreCase("-artifactRepositoryName")) //$NON-NLS-1$
 			artifactRepoName = parameter;
 
@@ -230,11 +232,11 @@ public abstract class AbstractPublisherApplication implements IApplication {
 		}
 	}
 
-	public void setArtifactLocation(String location) {
+	public void setArtifactLocation(URI location) {
 		this.artifactLocation = location;
 	}
 
-	public void setMetadataLocation(String location) {
+	public void setMetadataLocation(URI location) {
 		this.metadataLocation = location;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
index 06c760a..cbdccb9 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/Publisher.java
@@ -11,7 +11,6 @@
 package org.eclipse.equinox.p2.publisher;
 
 import java.net.URI;
-import java.net.URISyntaxException;
 import java.util.Collection;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
@@ -43,20 +42,14 @@ public class Publisher {
 	 * @return the discovered or created repository
 	 * @throws ProvisionException
 	 */
-	public static IMetadataRepository createMetadataRepository(String location, String name, boolean append, boolean compress) throws ProvisionException {
-		URI url;
-		try {
-			url = new URI(location);
-		} catch (URISyntaxException e) {
-			throw new IllegalArgumentException(NLS.bind(Messages.exception_metadataRepoLocationURL, location));
-		}
+	public static IMetadataRepository createMetadataRepository(URI location, String name, boolean append, boolean compress) throws ProvisionException {
 		IMetadataRepositoryManager manager = (IMetadataRepositoryManager) ServiceHelper.getService(Activator.context, IMetadataRepositoryManager.class.getName());
 		try {
-			IMetadataRepository result = manager.loadRepository(url, null);
+			IMetadataRepository result = manager.loadRepository(location, null);
 			if (result != null) {
 				result.setProperty(IRepository.PROP_COMPRESSED, compress ? "true" : "false"); //$NON-NLS-1$//$NON-NLS-2$
 				if (!result.isModifiable())
-					throw new IllegalArgumentException(NLS.bind(Messages.exception_metadataRepoNotWritable, url));
+					throw new IllegalArgumentException(NLS.bind(Messages.exception_metadataRepoNotWritable, location));
 				if (!append)
 					result.removeAll();
 				return result;
@@ -68,7 +61,7 @@ public class Publisher {
 		// 	the given repo location is not an existing repo so we have to create something
 		// TODO for now create a random repo by default.
 		String repositoryName = name == null ? location + " - metadata" : name; //$NON-NLS-1$
-		IMetadataRepository result = manager.createRepository(url, repositoryName, IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
+		IMetadataRepository result = manager.createRepository(location, repositoryName, IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
 		manager.addRepository(result.getLocation());
 		if (result != null)
 			result.setProperty(IRepository.PROP_COMPRESSED, compress ? "true" : "false"); //$NON-NLS-1$//$NON-NLS-2$
@@ -87,18 +80,12 @@ public class Publisher {
 	 * @return the discovered or created repository
 	 * @throws ProvisionException
 	 */
-	public static IArtifactRepository createArtifactRepository(String location, String name, boolean append, boolean compress, boolean reusePackedFiles) throws ProvisionException {
+	public static IArtifactRepository createArtifactRepository(URI location, String name, boolean append, boolean compress, boolean reusePackedFiles) throws ProvisionException {
 		IArtifactRepositoryManager manager = (IArtifactRepositoryManager) ServiceHelper.getService(Activator.context, IArtifactRepositoryManager.class.getName());
-		URI url;
-		try {
-			url = new URI(location);
-		} catch (URISyntaxException e) {
-			throw new IllegalArgumentException(NLS.bind(Messages.exception_artifactRepoLocationURL, location));
-		}
 		try {
-			IArtifactRepository result = manager.loadRepository(url, null);
+			IArtifactRepository result = manager.loadRepository(location, null);
 			if (!result.isModifiable())
-				throw new IllegalArgumentException(NLS.bind(Messages.exception_artifactRepoNotWritable, url));
+				throw new IllegalArgumentException(NLS.bind(Messages.exception_artifactRepoNotWritable, location));
 			result.setProperty(IRepository.PROP_COMPRESSED, compress ? "true" : "false"); //$NON-NLS-1$//$NON-NLS-2$
 			if (reusePackedFiles)
 				result.setProperty(PUBLISH_PACK_FILES_AS_SIBLINGS, "true"); //$NON-NLS-1$
@@ -112,7 +99,7 @@ public class Publisher {
 		// 	the given repo location is not an existing repo so we have to create something
 		// TODO for now create a Simple repo by default.
 		String repositoryName = name != null ? name : location + " - artifacts"; //$NON-NLS-1$
-		IArtifactRepository result = manager.createRepository(url, repositoryName, IArtifactRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
+		IArtifactRepository result = manager.createRepository(location, repositoryName, IArtifactRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
 		manager.addRepository(result.getLocation());
 		// TODO there must be something we have to do to set up the mapping rules here...
 		//		if (inplace) {
@@ -139,17 +126,17 @@ public class Publisher {
 
 		SubMonitor sub = SubMonitor.convert(monitor, actions.length);
 		try {
-		// run all the actions
+			// run all the actions
 			MultiStatus finalStatus = new MultiStatus("this", 0, "publishing result", null); //$NON-NLS-1$//$NON-NLS-2$
-		for (int i = 0; i < actions.length; i++) {
+			for (int i = 0; i < actions.length; i++) {
 				if (sub.isCanceled())
 					return Status.CANCEL_STATUS;
 				IStatus status = actions[i].perform(info, results, monitor);
-			finalStatus.merge(status);
+				finalStatus.merge(status);
 				sub.worked(1);
-		}
-		if (!finalStatus.isOK())
-			return finalStatus;
+			}
+			if (!finalStatus.isOK())
+				return finalStatus;
 		} finally {
 			sub.done();
 		}
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAndBundlesPublisherApplication.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAndBundlesPublisherApplication.java
index 2467774..a58f5f0 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAndBundlesPublisherApplication.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAndBundlesPublisherApplication.java
@@ -10,6 +10,7 @@
 package org.eclipse.equinox.p2.publisher.eclipse;
 
 import java.io.File;
+import java.net.URISyntaxException;
 import java.util.ArrayList;
 import org.eclipse.equinox.p2.publisher.*;
 
@@ -32,7 +33,7 @@ public class FeaturesAndBundlesPublisherApplication extends AbstractPublisherApp
 		// nothing to do
 	}
 
-	protected void processParameter(String arg, String parameter, PublisherInfo pinfo) {
+	protected void processParameter(String arg, String parameter, PublisherInfo pinfo) throws URISyntaxException {
 		super.processParameter(arg, parameter, pinfo);
 
 		if (arg.equalsIgnoreCase("-features")) //$NON-NLS-1$
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
index 6d13cbc..4f51dbe 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
@@ -9,6 +9,7 @@
  ******************************************************************************/
 package org.eclipse.equinox.p2.publisher.eclipse;
 
+import java.net.URISyntaxException;
 import java.util.ArrayList;
 import org.eclipse.equinox.p2.publisher.*;
 import org.osgi.framework.Version;
@@ -34,7 +35,7 @@ public class InstallPublisherApplication extends AbstractPublisherApplication {
 			start = true;
 	}
 
-	protected void processParameter(String arg, String parameter, PublisherInfo info) {
+	protected void processParameter(String arg, String parameter, PublisherInfo info) throws URISyntaxException {
 		super.processParameter(arg, parameter, info);
 
 		if (arg.equalsIgnoreCase("-id")) //$NON-NLS-1$
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductPublisherApplication.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductPublisherApplication.java
index cb9e158..2d43614 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductPublisherApplication.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductPublisherApplication.java
@@ -9,8 +9,8 @@
  ******************************************************************************/
 package org.eclipse.equinox.p2.publisher.eclipse;
 
-
 import java.io.File;
+import java.net.URISyntaxException;
 import java.util.ArrayList;
 import org.eclipse.equinox.p2.publisher.*;
 
@@ -33,7 +33,7 @@ public class ProductPublisherApplication extends AbstractPublisherApplication {
 		return new ProductAction(source, product, flavor, new File(executables));
 	}
 
-	protected void processParameter(String arg, String parameter, PublisherInfo info) {
+	protected void processParameter(String arg, String parameter, PublisherInfo info) throws URISyntaxException {
 		super.processParameter(arg, parameter, info);
 
 		if (arg.equalsIgnoreCase("-productFile")) //$NON-NLS-1$
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java b/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
index a78a15c..6a753f2 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
@@ -11,7 +11,7 @@
 package org.eclipse.equinox.internal.p2.publisher.ant;
 
 import java.io.File;
-import java.net.MalformedURLException;
+import java.net.URI;
 import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.Task;
 import org.eclipse.core.runtime.IStatus;
@@ -31,9 +31,9 @@ public class PublisherTask extends Task {
 	protected PublisherInfo provider = null;
 
 	protected String source;
-	protected String metadataLocation;
+	protected URI metadataLocation;
 	protected String metadataRepoName;
-	protected String artifactLocation;
+	protected URI artifactLocation;
 	protected String artifactRepoName;
 	protected boolean compress = false;
 	protected boolean inplace = false;
@@ -123,14 +123,10 @@ public class PublisherTask extends Task {
 	protected void initialize(PublisherInfo info) throws ProvisionException {
 		if (inplace) {
 			File location = new File(source);
-			try {
-				if (metadataLocation == null)
-					metadataLocation = location.toURL().toExternalForm();
-				if (artifactLocation == null)
-					artifactLocation = location.toURL().toExternalForm();
-			} catch (MalformedURLException e) {
-				// ought not happen...
-			}
+			if (metadataLocation == null)
+				metadataLocation = location.toURI();
+			if (artifactLocation == null)
+				artifactLocation = location.toURI();
 			info.setArtifactOptions(info.getArtifactOptions() | IPublisherInfo.A_INDEX | IPublisherInfo.A_PUBLISH);
 		} else
 			info.setArtifactOptions(info.getArtifactOptions() | IPublisherInfo.A_INDEX | IPublisherInfo.A_PUBLISH | IPublisherInfo.A_OVERWRITE);
@@ -152,7 +148,7 @@ public class PublisherTask extends Task {
 		append = Boolean.valueOf(value).booleanValue();
 	}
 
-	public void setArtifactRepository(String location) {
+	public void setArtifactRepository(URI location) {
 		artifactLocation = location;
 	}
 
@@ -213,7 +209,7 @@ public class PublisherTask extends Task {
 	public void setLauncherConfig(String value) {
 	}
 
-	public void setMetadataRepository(String location) {
+	public void setMetadataRepository(URI location) {
 		metadataLocation = location;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
index 9a090ec..09c353d 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AutomatedTests.java
@@ -38,8 +38,8 @@ public class AutomatedTests extends TestCase {
 		suite.addTest(org.eclipse.equinox.p2.tests.simpleconfigurator.SimpleConfiguratorTests.suite());
 		suite.addTest(org.eclipse.equinox.p2.tests.updatesite.AllTests.suite());
 		suite.addTest(org.eclipse.equinox.p2.tests.touchpoint.eclipse.AllTests.suite());
-		//		suite.addTest(org.eclipse.equinox.p2.tests.reconciler.dropins.AllTests.suite());
-		//		suite.addTest(org.eclipse.equinox.p2.tests.full.AllTests.suite());
+		suite.addTest(org.eclipse.equinox.p2.tests.reconciler.dropins.AllTests.suite());
+		suite.addTest(org.eclipse.equinox.p2.tests.full.AllTests.suite());
 		return suite;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/director/DirectorAppTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/director/DirectorAppTest.java
index f51a8ac..b1945ac 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/director/DirectorAppTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/director/DirectorAppTest.java
@@ -137,7 +137,7 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		//Setup: create repos
 		File metadataRepo = new File(getTempFolder(), "DirectorApp Metadata");
 		//Valid repository
-		File artifactRepo = getTestData("2.0", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo = getTestData("2.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
 
@@ -172,7 +172,7 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 	public void testSingleRepoCreationArtifactInvalid() {
 		//Setup: create repos
 		//Valid repository
-		File metadataRepo = getTestData("3.0", "/testData/mirror/mirrorSourceRepo1");
+		File metadataRepo = getTestData("3.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		File artifactRepo = new File(getTempFolder(), "DirectorApp Artifact");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
@@ -255,7 +255,7 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		File metadataRepo1 = new File(getTempFolder(), "DirectorApp Metadata1");
 		File metadataRepo2 = new File(getTempFolder(), "DirectorApp Metadata2");
 		//Valid repositories
-		File artifactRepo1 = getTestData("5.0", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo1 = getTestData("5.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		File artifactRepo2 = getTestData("5.1", "/testData/mirror/mirrorSourceRepo2");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
@@ -297,8 +297,8 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		//Setup: Create the folders
 		File metadataRepo1 = new File(getTempFolder(), "DirectorApp Metadata1");
 		//Valid repositories
-		File metadataRepo2 = getTestData("6.0", "/testData/mirror/mirrorSourceRepo1");
-		File artifactRepo1 = getTestData("6.1", "/testData/mirror/mirrorSourceRepo1");
+		File metadataRepo2 = getTestData("6.0", "/testData/mirror/mirrorSourceRepo1 with space");
+		File artifactRepo1 = getTestData("6.1", "/testData/mirror/mirrorSourceRepo1 with space");
 		File artifactRepo2 = getTestData("6.2", "/testData/mirror/mirrorSourceRepo2");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
@@ -338,7 +338,7 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		File artifactRepo1 = new File(getTempFolder(), "DirectorApp Artifact1");
 		File artifactRepo2 = new File(getTempFolder(), "DirectorApp Artifact2");
 		//Valid repositories
-		File metadataRepo1 = getTestData("7.0", "/testData/mirror/mirrorSourceRepo1");
+		File metadataRepo1 = getTestData("7.0", "/testData/mirror/mirrorSourceRepo1 with space");
 		File metadataRepo2 = getTestData("7.1", "/testData/mirror/mirrorSourceRepo2");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
@@ -380,8 +380,8 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		//Setup: Create the folders
 		File artifactRepo1 = new File(getTempFolder(), "DirectorApp Artifact1");
 		//Valid repositories
-		File artifactRepo2 = getTestData("8.0", "/testData/mirror/mirrorSourceRepo1");
-		File metadataRepo1 = getTestData("8.1", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo2 = getTestData("8.0", "/testData/mirror/mirrorSourceRepo1 with space");
+		File metadataRepo1 = getTestData("8.1", "/testData/mirror/mirrorSourceRepo1 with space");
 		File metadataRepo2 = getTestData("8.2", "/testData/mirror/mirrorSourceRepo2");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
@@ -422,8 +422,8 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 		File artifactRepo1 = new File(getTempFolder(), "DirectorApp Artifact1");
 		File metadataRepo1 = new File(getTempFolder(), "DirectorApp Metadata1");
 		//Valid repositories
-		File artifactRepo2 = getTestData("9.0", "/testData/mirror/mirrorSourceRepo1");
-		File metadataRepo2 = getTestData("9.1", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo2 = getTestData("9.0", "/testData/mirror/mirrorSourceRepo1 with space");
+		File metadataRepo2 = getTestData("9.1", "/testData/mirror/mirrorSourceRepo1 with space");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
 
@@ -461,8 +461,8 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 	 */
 	public void testSingleRepoCreationNoneInvalid() {
 		//Setup: get repositories
-		File artifactRepo = getTestData("10.0", "/testData/mirror/mirrorSourceRepo1");
-		File metadataRepo = getTestData("10.1", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo = getTestData("10.0", "/testData/mirror/mirrorSourceRepo1 with space");
+		File metadataRepo = getTestData("10.1", "/testData/mirror/mirrorSourceRepo1 with space");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
 		String installIU = "invalidIU";
 
@@ -496,8 +496,8 @@ public class DirectorAppTest extends AbstractProvisioningTest {
 	public void testMultipleRepoCreationNoneInvalid() {
 		//Setup: Create the folders
 		//Valid repositories
-		File artifactRepo1 = getTestData("11.0", "/testData/mirror/mirrorSourceRepo1");
-		File metadataRepo1 = getTestData("11.1", "/testData/mirror/mirrorSourceRepo1");
+		File artifactRepo1 = getTestData("11.0", "/testData/mirror/mirrorSourceRepo1 with space");
+		File metadataRepo1 = getTestData("11.1", "/testData/mirror/mirrorSourceRepo1 with space");
 		File artifactRepo2 = getTestData("11.2", "/testData/mirror/mirrorSourceRepo2");
 		File metadataRepo2 = getTestData("11.3", "/testData/mirror/mirrorSourceRepo2");
 		File destinationRepo = new File(getTempFolder(), "DirectorApp Destination");
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/GeneratorTests.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/GeneratorTests.java
index e4a555d..fcfdd6b 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/GeneratorTests.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/GeneratorTests.java
@@ -39,7 +39,7 @@ public class GeneratorTests extends AbstractProvisioningTest {
 			application.run(arguments);
 			fail("3.0 - Expected Illegal Argument Exception not thrown.");
 		} catch (IllegalArgumentException e) {
-			assertTrue("3.0 - Expected Illegal Argument", e.getMessage().equals(NLS.bind(Messages.exception_artifactRepoNoAppendDestroysInput, rootFolder.toURL().toExternalForm().toString())));
+			assertTrue("3.0 - Expected Illegal Argument", e.getMessage().equals(NLS.bind(Messages.exception_artifactRepoNoAppendDestroysInput, rootFolder.toURI())));
 		}
 
 		assertTrue("3.1 - artifact repo existance", new File(rootFolder, "artifacts.xml").exists());
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/TestGeneratorInfo.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/TestGeneratorInfo.java
index def32fb..ea46ad3 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/TestGeneratorInfo.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/generator/TestGeneratorInfo.java
@@ -11,7 +11,7 @@
 package org.eclipse.equinox.p2.tests.generator;
 
 import java.io.File;
-import java.net.URL;
+import java.net.URI;
 import java.util.*;
 import org.eclipse.equinox.internal.provisional.frameworkadmin.ConfigData;
 import org.eclipse.equinox.internal.provisional.frameworkadmin.LauncherData;
@@ -34,7 +34,7 @@ public class TestGeneratorInfo implements IGeneratorInfo {
 	private String rootId;
 	private String rootVersion;
 	private String launcherConfig;
-	private URL siteLocation;
+	private URI siteLocation;
 	private boolean updateCompatibilty = false;
 
 	public TestGeneratorInfo(File baseLocation) {
@@ -110,7 +110,7 @@ public class TestGeneratorInfo implements IGeneratorInfo {
 		return rootVersion;
 	}
 
-	public URL getSiteLocation() {
+	public URI getSiteLocation() {
 		return siteLocation;
 	}
 
@@ -145,7 +145,7 @@ public class TestGeneratorInfo implements IGeneratorInfo {
 		this.rootId = value;
 	}
 
-	public void setSiteLocation(URL location) {
+	public void setSiteLocation(URI location) {
 		this.siteLocation = location;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/touchpoint/eclipse/UtilTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/touchpoint/eclipse/UtilTest.java
index 2f40a11..1e2aabe 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/touchpoint/eclipse/UtilTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/touchpoint/eclipse/UtilTest.java
@@ -12,10 +12,12 @@ package org.eclipse.equinox.p2.tests.touchpoint.eclipse;
 
 import java.io.File;
 import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.util.Properties;
 import junit.framework.Test;
 import junit.framework.TestSuite;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.touchpoint.eclipse.Activator;
 import org.eclipse.equinox.internal.p2.touchpoint.eclipse.Util;
 import org.eclipse.equinox.internal.provisional.p2.core.location.AgentLocation;
@@ -43,7 +45,11 @@ public class UtilTest extends AbstractProvisioningTest {
 	public void testDefaultBundlePool() throws MalformedURLException {
 		IProfile profile = createProfile("test");
 		AgentLocation agentLocation = (AgentLocation) ServiceHelper.getService(Activator.getContext(), AgentLocation.class.getName());
-		assertEquals(agentLocation.getDataArea("org.eclipse.equinox.p2.touchpoint.eclipse").toExternalForm(), Util.getBundlePoolLocation(profile).toString());
+		try {
+			assertEquals(URIUtil.toURI(agentLocation.getDataArea("org.eclipse.equinox.p2.touchpoint.eclipse")), Util.getBundlePoolLocation(profile));
+		} catch (URISyntaxException e) {
+			fail("0.99", e);
+		}
 	}
 
 	public void testExplicitBundlePool() throws MalformedURLException {
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/features/helloworldfeature_1.0.0.jar b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/features/helloworldfeature_1.0.0.jar
new file mode 100644
index 0000000..638a853
Binary files /dev/null and b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/features/helloworldfeature_1.0.0.jar differ
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/plugins/helloworld_1.0.0.jar b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/plugins/helloworld_1.0.0.jar
new file mode 100644
index 0000000..66fb71a
Binary files /dev/null and b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1 with space/plugins/helloworld_1.0.0.jar differ
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/features/helloworldfeature_1.0.0.jar b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/features/helloworldfeature_1.0.0.jar
deleted file mode 100644
index 638a853..0000000
Binary files a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/features/helloworldfeature_1.0.0.jar and /dev/null differ
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/plugins/helloworld_1.0.0.jar b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/plugins/helloworld_1.0.0.jar
deleted file mode 100644
index 66fb71a..0000000
Binary files a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo1/plugins/helloworld_1.0.0.jar and /dev/null differ
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo2/site.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo2/site.xml
deleted file mode 100644
index db845ba..0000000
--- a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo2/site.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<site>
-   <feature url="features/anotherfeature_1.0.0.jar" id="anotherfeature" version="1.0.0"/>
-</site>
diff --git a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo3/site.xml b/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo3/site.xml
deleted file mode 100644
index 766c301..0000000
--- a/bundles/org.eclipse.equinox.p2.tests/testData/mirror/mirrorSourceRepo3/site.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<site>
-   <feature url="features/yetanotherfeature_1.0.0.jar" id="yetanotherfeature" version="1.0.0"/>
-   <feature url="features/helloworldfeature_1.0.0.jar" id="helloworldfeature" version="1.0.0"/>
-</site>
commit 78b8217cbc6de8a29d167ffc6268ab5db14d9d41
Author: DJ Houghton <dj>
Date:   Fri Oct 10 20:19:15 2008 +0000

    Bug 250452 - Update applications to handle URIs

3	2	bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
14	4	bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
diff --git a/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java b/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
index 28d3b5f..e01d605 100644
--- a/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
+++ b/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
@@ -16,6 +16,7 @@ import java.net.URISyntaxException;
 import java.util.ArrayList;
 import java.util.List;
 import org.apache.tools.ant.*;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.p2.director.app.Application;
 import org.osgi.framework.Version;
 
@@ -114,7 +115,7 @@ public class DirectorTask extends Task {
 
 	public void setArtifactRepository(String value) {
 		try {
-			artifactRepository = new URI(value);
+			artifactRepository = URIUtil.fromString(value);
 		} catch (URISyntaxException e) {
 			log("Error setting the artifact repository.", e, Project.MSG_ERR);
 		}
@@ -142,7 +143,7 @@ public class DirectorTask extends Task {
 
 	public void setMetadataRepository(String value) {
 		try {
-			metadataRepository = new URI(value);
+			metadataRepository = URIUtil.fromString(value);
 		} catch (URISyntaxException e) {
 			log("Error setting the metadata repository.", e, Project.MSG_ERR);
 		}
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java b/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
index 6a753f2..203c059 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src_ant/org/eclipse/equinox/internal/p2/publisher/ant/PublisherTask.java
@@ -12,10 +12,12 @@ package org.eclipse.equinox.internal.p2.publisher.ant;
 
 import java.io.File;
 import java.net.URI;
+import java.net.URISyntaxException;
 import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.Task;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.equinox.internal.p2.core.helpers.URIUtil;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.publisher.*;
 import org.eclipse.equinox.p2.publisher.eclipse.EclipseInstallAction;
@@ -148,8 +150,12 @@ public class PublisherTask extends Task {
 		append = Boolean.valueOf(value).booleanValue();
 	}
 
-	public void setArtifactRepository(URI location) {
-		artifactLocation = location;
+	public void setArtifactRepository(String location) {
+		try {
+			artifactLocation = URIUtil.fromString(location);
+		} catch (URISyntaxException e) {
+			throw new IllegalArgumentException("Artifact repository location (" + location + ") must be a URL."); //$NON-NLS-1$//$NON-NLS-2$
+		}
 	}
 
 	public void setArtifactRepositoryName(String value) {
@@ -209,8 +215,12 @@ public class PublisherTask extends Task {
 	public void setLauncherConfig(String value) {
 	}
 
-	public void setMetadataRepository(URI location) {
-		metadataLocation = location;
+	public void setMetadataRepository(String location) {
+		try {
+			metadataLocation = URIUtil.fromString(location);
+		} catch (URISyntaxException e) {
+			throw new IllegalArgumentException("Metadata repository location (" + location + ") must be a URL."); //$NON-NLS-1$ //$NON-NLS-2$
+		}
 	}
 
 	public void setMetadataRepositoryName(String value) {
