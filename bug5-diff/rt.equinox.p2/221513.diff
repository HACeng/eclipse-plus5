commit 879fae3e3980a5baa7a4c047ed1fe4d3c729e47e
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 13 19:52:57 2008 +0000

    Bug 221513 - [ui] "Could not locate the running profile instance" message logged on each startup

2	15	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
5	3	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
0	2	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
14	10	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
15	7	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
1	4	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/ExternalFileHandler.java
1	19	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
0	2	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
29	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
index 481178c..0717942 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
@@ -12,14 +12,11 @@ package org.eclipse.equinox.internal.p2.ui.sdk;
 
 import java.net.URL;
 import org.eclipse.equinox.internal.p2.ui.sdk.externalFiles.MetadataGeneratingURLValidator;
-import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.AddRepositoryDialog;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.AddColocatedRepositoryOperation;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Dialog that allows colocated metadata and artifact repositories
@@ -43,17 +40,7 @@ public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
 	protected URLValidator createURLValidator() {
 		MetadataGeneratingURLValidator validator = new MetadataGeneratingURLValidator();
 		validator.setKnownRepositoriesFlag(repoFlag);
-		validator.setProfile(getProfile());
 		validator.setShell(getShell());
 		return validator;
 	}
-
-	private IProfile getProfile() {
-		try {
-			return ProvisioningUtil.getProfile(ProvSDKUIActivator.getProfileId());
-		} catch (ProvisionException e) {
-			ProvUI.handleException(e, ProvSDKMessages.AddColocatedRepositoryDialog_MissingProfile, StatusManager.LOG);
-			return null;
-		}
-	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
index ca122bb..c8ae5d6 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
@@ -56,11 +56,10 @@ public class AutomaticUpdateScheduler implements IStartup {
 			return;
 		}
 		try {
-			profileId = ProvSDKUIActivator.getProfileId();
+			profileId = ProvSDKUIActivator.getSelfProfileId();
 		} catch (ProvisionException e) {
 			profileId = null;
-			IStatus status = new Status(IStatus.ERROR, ProvSDKUIActivator.PLUGIN_ID, ProvSDKMessages.UpdateHandler_NoProfilesDefined, e);
-			ProvUI.reportStatus(status, StatusManager.LOG);
+			ProvUI.handleException(e, null, StatusManager.LOG);
 			return;
 		}
 
@@ -88,6 +87,9 @@ public class AutomaticUpdateScheduler implements IStartup {
 	}
 
 	private void scheduleUpdate() {
+		// Nothing to do if we don't know what profile we are checking
+		if (profileId == null)
+			return;
 		Preferences pref = ProvSDKUIActivator.getDefault().getPluginPreferences();
 		// See if automatic search is enabled at all
 		if (pref.getBoolean(PreferenceConstants.PREF_AUTO_UPDATE_ENABLED) == false)
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index 68efddc..de74839 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -65,8 +65,6 @@ public class ProvSDKMessages extends NLS {
 	public static String UpdateAndInstallDialog_RemoveSiteOperationLabel;
 	public static String UpdateAndInstallDialog_RevertActionLabel;
 	public static String UpdateAndInstallDialog_Title;
-	public static String UpdateHandler_NoProfilesDefined;
-	public static String UpdateHandler_NoProfileInstanceDefined;
 	public static String UpdateHandler_SDKUpdateUIMessageTitle;
 	public static String SchedulerStartup_day;
 	public static String SchedulerStartup_Monday;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
index b250d45..4c78303 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
@@ -37,6 +37,7 @@ import org.osgi.framework.ServiceReference;
  */
 public class ProvSDKUIActivator extends AbstractUIPlugin {
 
+	public static final boolean ANY_PROFILE = false;
 	private static final String DEFAULT_PROFILE_ID = "DefaultProfile"; //$NON-NLS-1$
 	private static final String LICENSE_STORAGE = "licenses.xml"; //$NON-NLS-1$
 	private static ProvSDKUIActivator plugin;
@@ -155,20 +156,23 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 	}
 
 	/**
-	 * Get the id of the profile for the running system.  If not available, get
-	 * any available profile.  Getting any profile allows testing of the
-	 * UI even when the system is not self hosting.  Error reporting is
-	 * left to the client, who must check for a null return.
+	 * Get the id of the profile for the running system.  Throw a ProvisionException
+	 * if no self profile is available, unless configured to answer any
+	 * profile.  Getting any profile allows testing of the
+	 * UI even when the system is not self hosting.  
 	 */
-	public static String getProfileId() throws ProvisionException {
+	public static String getSelfProfileId() throws ProvisionException {
 		// Get the profile of the running system.
 		IProfile profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
 		if (profile == null) {
-			ProvUI.reportStatus(getNoSelfProfileStatus(), StatusManager.LOG);
-			IProfile[] profiles = ProvisioningUtil.getProfiles();
-			if (profiles.length > 0)
-				return profiles[0].getProfileId();
-			return ProfileFactory.makeProfile(DEFAULT_PROFILE_ID).getProfileId();
+			if (ANY_PROFILE) {
+				ProvUI.reportStatus(getNoSelfProfileStatus(), StatusManager.LOG);
+				IProfile[] profiles = ProvisioningUtil.getProfiles();
+				if (profiles.length > 0)
+					return profiles[0].getProfileId();
+				return ProfileFactory.makeProfile(DEFAULT_PROFILE_ID).getProfileId();
+			}
+			throw new ProvisionException(getNoSelfProfileStatus());
 		}
 		return profile.getProfileId();
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
index 8ae1f12..149121f 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
@@ -13,8 +13,10 @@ package org.eclipse.equinox.internal.p2.ui.sdk;
 import org.eclipse.core.commands.AbstractHandler;
 import org.eclipse.core.commands.ExecutionEvent;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.equinox.internal.provisional.p2.ui.UpdateManagerCompatibility;
+import org.eclipse.swt.custom.BusyIndicator;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.*;
 
 /**
  * UpdateHandler invokes the main update/install UI.
@@ -35,21 +37,27 @@ public class UpdateHandler extends AbstractHandler {
 	 */
 	public Object execute(ExecutionEvent event) {
 		String profileId;
-		String message = null;
 
 		// Need to figure out the profile we are using and open a dialog
 		try {
-			profileId = ProvSDKUIActivator.getProfileId();
+			profileId = ProvSDKUIActivator.getSelfProfileId();
 		} catch (ProvisionException e) {
 			profileId = null;
-			message = ProvSDKMessages.UpdateHandler_NoProfilesDefined;
 		}
 		if (profileId != null) {
 			openDialog(null, profileId);
 		} else {
-			if (message == null)
-				message = ProvSDKMessages.UpdateHandler_NoProfileInstanceDefined;
-			MessageDialog.openInformation(null, ProvSDKMessages.UpdateHandler_SDKUpdateUIMessageTitle, message);
+			IWorkbench workbench = PlatformUI.getWorkbench();
+			if (workbench != null) {
+				IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
+				if (window != null) {
+					BusyIndicator.showWhile(window.getShell().getDisplay(), new Runnable() {
+						public void run() {
+							UpdateManagerCompatibility.openInstaller();
+						}
+					});
+				}
+			}
 		}
 		return null;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/ExternalFileHandler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/ExternalFileHandler.java
index 9557f1d..62b85b1 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/ExternalFileHandler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/ExternalFileHandler.java
@@ -22,7 +22,6 @@ import org.eclipse.equinox.internal.p2.ui.sdk.ProvSDKMessages;
 import org.eclipse.equinox.internal.p2.ui.sdk.ProvSDKUIActivator;
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.metadata.generator.BundleDescriptionFactory;
 import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadataRepository;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
@@ -52,7 +51,6 @@ public class ExternalFileHandler {
 	private static final String FILE = "file"; //$NON-NLS-1$
 	File file;
 	Shell shell;
-	IProfile profile;
 
 	// TODO
 	// copied from reconciler activator until there is API
@@ -61,10 +59,9 @@ public class ExternalFileHandler {
 	private static final String OSGI_CONFIGURATION_AREA = "osgi.configuration.area"; //$NON-NLS-1$
 	private static final String DROPINS = "dropins"; //$NON-NLS-1$
 
-	public ExternalFileHandler(IProfile profile, File file, Shell shell) {
+	public ExternalFileHandler(File file, Shell shell) {
 		this.file = file;
 		this.shell = shell;
-		this.profile = profile;
 	}
 
 	public IStatus processFile(IStatus originalStatus) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
index a502d37..1a8b47b 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
@@ -14,12 +14,8 @@ package org.eclipse.equinox.internal.p2.ui.sdk.externalFiles;
 import java.io.File;
 import java.net.URL;
 import org.eclipse.core.runtime.*;
-import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
-import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.DefaultMetadataURLValidator;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.PlatformUI;
 
@@ -30,16 +26,11 @@ import org.eclipse.ui.PlatformUI;
 public class MetadataGeneratingURLValidator extends DefaultMetadataURLValidator {
 
 	Shell shell;
-	IProfile profile;
 
 	public void setShell(Shell shell) {
 		this.shell = shell;
 	}
 
-	public void setProfile(IProfile profile) {
-		this.profile = profile;
-	}
-
 	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IProgressMonitor monitor) {
 		IStatus status = super.validateRepositoryURL(location, contactRepositories, monitor);
 
@@ -50,15 +41,6 @@ public class MetadataGeneratingURLValidator extends DefaultMetadataURLValidator
 		if (shell == null)
 			shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
 
-		if (profile == null) {
-			try {
-				profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
-			} catch (ProvisionException e) {
-				return status;
-			}
-
-		}
-
 		// If it was set up with jar protocol, now convert it back to file.
 		if (!FILE_PROTOCOL.equalsIgnoreCase(location.getProtocol()))
 			return status;
@@ -69,7 +51,7 @@ public class MetadataGeneratingURLValidator extends DefaultMetadataURLValidator
 			path = path.substring(0, path.length() - JAR_PATH_SUFFIX.length());
 		final File file = new File(path);
 
-		IStatus externalFileStatus = new ExternalFileHandler(profile, file, shell).processFile(status);
+		IStatus externalFileStatus = new ExternalFileHandler(file, shell).processFile(status);
 		if (externalFileStatus.getCode() == REPO_AUTO_GENERATED || externalFileStatus.getCode() == ALTERNATE_ACTION_TAKEN) {
 			return Status.CANCEL_STATUS;
 		}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 22fcbe7..4eb0a23 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -42,8 +42,6 @@ UpdateAndInstallDialog_ManageSites=&Manage sites...
 UpdateAndInstallDialog_RemoveSiteOperationLabel=Remove Site
 UpdateAndInstallDialog_RevertActionLabel=&Revert configuration...
 UpdateHandler_SDKUpdateUIMessageTitle=Software Updates
-UpdateHandler_NoProfilesDefined=There are no profiles defined.  Cannot invoke the update UI.
-UpdateHandler_NoProfileInstanceDefined=The software configuration could not be found.  Cannot invoke the update UI.
 RepositoryManipulationDialog_ErrorRetrievingSites=Error trying to retrieve the list of sites.
 RepositoryManipulationDialog_AddButton=&Add...
 RepositoryManipulationDialog_LocationColumnHeader=Location
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
index 511ab30..53b404e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
@@ -13,6 +13,8 @@ package org.eclipse.equinox.internal.p2.ui.sdk.prefs;
 import java.util.HashSet;
 import java.util.Set;
 import org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer;
+import org.eclipse.equinox.internal.p2.ui.sdk.ProvSDKUIActivator;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.ui.IWorkbench;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.activities.IMutableActivityManager;
@@ -23,6 +25,15 @@ public class ClassicUpdateInitializer extends AbstractPreferenceInitializer {
 	private static final String ACTIVITY_ID = "org.eclipse.equinox.p2.ui.sdk.classicUpdate"; //$NON-NLS-1$
 
 	public void initializeDefaultPreferences() {
+		try {
+			ProvSDKUIActivator.getSelfProfileId();
+			disableClassicUpdate();
+		} catch (ProvisionException e) {
+			// do not disable classic update if the self profile is not found
+		}
+	}
+
+	public void disableClassicUpdate() {
 		IWorkbench workbench = PlatformUI.getWorkbench();
 		if (workbench == null) {
 			return;
@@ -39,4 +50,22 @@ public class ClassicUpdateInitializer extends AbstractPreferenceInitializer {
 			}
 		});
 	}
+
+	public void enableClassicUpdate() {
+		IWorkbench workbench = PlatformUI.getWorkbench();
+		if (workbench == null) {
+			return;
+		}
+		final IWorkbenchActivitySupport activitySupport = workbench.getActivitySupport();
+		IMutableActivityManager createWorkingCopy = activitySupport.createWorkingCopy();
+		Set activityIds = createWorkingCopy.getEnabledActivityIds();
+		final Set enabledActivityIds = new HashSet(activityIds);
+		enabledActivityIds.add(ACTIVITY_ID);
+		workbench.getDisplay().asyncExec(new Runnable() {
+			public void run() {
+				//activity change listeners may touch widgets
+				activitySupport.setEnabledActivityIds(enabledActivityIds);
+			}
+		});
+	}
 }
commit aa576b1fe21e2fdb21ef6028282ca4e6ea746438
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 13 20:50:56 2008 +0000

    Bug 221513 - [ui] "Could not locate the running profile instance" message logged on each startup

4	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
2	14	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
0	29	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
index c8ae5d6..d5442d0 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
@@ -59,7 +59,10 @@ public class AutomaticUpdateScheduler implements IStartup {
 			profileId = ProvSDKUIActivator.getSelfProfileId();
 		} catch (ProvisionException e) {
 			profileId = null;
-			ProvUI.handleException(e, null, StatusManager.LOG);
+			if (e.getStatus() != null)
+				ProvUI.reportStatus(e.getStatus(), StatusManager.LOG);
+			else
+				ProvUI.handleException(e, null, StatusManager.LOG);
 			return;
 		}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index de74839..807c097 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -65,6 +65,7 @@ public class ProvSDKMessages extends NLS {
 	public static String UpdateAndInstallDialog_RemoveSiteOperationLabel;
 	public static String UpdateAndInstallDialog_RevertActionLabel;
 	public static String UpdateAndInstallDialog_Title;
+	public static String UpdateHandler_CannotLaunchUI;
 	public static String UpdateHandler_SDKUpdateUIMessageTitle;
 	public static String SchedulerStartup_day;
 	public static String SchedulerStartup_Monday;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
index 149121f..c9b3906 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
@@ -13,10 +13,8 @@ package org.eclipse.equinox.internal.p2.ui.sdk;
 import org.eclipse.core.commands.AbstractHandler;
 import org.eclipse.core.commands.ExecutionEvent;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.ui.UpdateManagerCompatibility;
-import org.eclipse.swt.custom.BusyIndicator;
+import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.*;
 
 /**
  * UpdateHandler invokes the main update/install UI.
@@ -47,17 +45,7 @@ public class UpdateHandler extends AbstractHandler {
 		if (profileId != null) {
 			openDialog(null, profileId);
 		} else {
-			IWorkbench workbench = PlatformUI.getWorkbench();
-			if (workbench != null) {
-				IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
-				if (window != null) {
-					BusyIndicator.showWhile(window.getShell().getDisplay(), new Runnable() {
-						public void run() {
-							UpdateManagerCompatibility.openInstaller();
-						}
-					});
-				}
-			}
+			MessageDialog.openInformation(null, ProvSDKMessages.UpdateHandler_SDKUpdateUIMessageTitle, ProvSDKMessages.UpdateHandler_CannotLaunchUI);
 		}
 		return null;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 4eb0a23..2fc657e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -41,6 +41,7 @@ UpdateAndInstallDialog_Title=Software Updates and Add-ons
 UpdateAndInstallDialog_ManageSites=&Manage sites...
 UpdateAndInstallDialog_RemoveSiteOperationLabel=Remove Site
 UpdateAndInstallDialog_RevertActionLabel=&Revert configuration...
+UpdateHandler_CannotLaunchUI=Cannot launch the Update UI.  This installation has not been configured properly for Software Updates.
 UpdateHandler_SDKUpdateUIMessageTitle=Software Updates
 RepositoryManipulationDialog_ErrorRetrievingSites=Error trying to retrieve the list of sites.
 RepositoryManipulationDialog_AddButton=&Add...
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
index 53b404e..511ab30 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/prefs/ClassicUpdateInitializer.java
@@ -13,8 +13,6 @@ package org.eclipse.equinox.internal.p2.ui.sdk.prefs;
 import java.util.HashSet;
 import java.util.Set;
 import org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer;
-import org.eclipse.equinox.internal.p2.ui.sdk.ProvSDKUIActivator;
-import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.ui.IWorkbench;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.activities.IMutableActivityManager;
@@ -25,15 +23,6 @@ public class ClassicUpdateInitializer extends AbstractPreferenceInitializer {
 	private static final String ACTIVITY_ID = "org.eclipse.equinox.p2.ui.sdk.classicUpdate"; //$NON-NLS-1$
 
 	public void initializeDefaultPreferences() {
-		try {
-			ProvSDKUIActivator.getSelfProfileId();
-			disableClassicUpdate();
-		} catch (ProvisionException e) {
-			// do not disable classic update if the self profile is not found
-		}
-	}
-
-	public void disableClassicUpdate() {
 		IWorkbench workbench = PlatformUI.getWorkbench();
 		if (workbench == null) {
 			return;
@@ -50,22 +39,4 @@ public class ClassicUpdateInitializer extends AbstractPreferenceInitializer {
 			}
 		});
 	}
-
-	public void enableClassicUpdate() {
-		IWorkbench workbench = PlatformUI.getWorkbench();
-		if (workbench == null) {
-			return;
-		}
-		final IWorkbenchActivitySupport activitySupport = workbench.getActivitySupport();
-		IMutableActivityManager createWorkingCopy = activitySupport.createWorkingCopy();
-		Set activityIds = createWorkingCopy.getEnabledActivityIds();
-		final Set enabledActivityIds = new HashSet(activityIds);
-		enabledActivityIds.add(ACTIVITY_ID);
-		workbench.getDisplay().asyncExec(new Runnable() {
-			public void run() {
-				//activity change listeners may touch widgets
-				activitySupport.setEnabledActivityIds(enabledActivityIds);
-			}
-		});
-	}
 }
