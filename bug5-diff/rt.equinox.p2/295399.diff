commit b0a21385ce06e9b8f1cc8b2061b74751faf80590
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 4 01:00:39 2010 +0000

    Bug 295399 -  [ui] [api] IServiceUI API cleanup

1	27	bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
0	135	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/IServiceUI.java
11	0	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/Temp.java
137	0	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/p2/core/UIServices.java
0	1	bundles/org.eclipse.equinox.p2.director.app/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.director/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
4	3	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/CertificateChecker.java
0	1	bundles/org.eclipse.equinox.p2.extensionlocation/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.operations/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.reconciler.dropins/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
14	12	bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/Credentials.java
2	3	bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/RepositoryTransport.java
0	1	bundles/org.eclipse.equinox.p2.tests/META-INF/MANIFEST.MF
4	4	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/CertificateCheckerTest.java
5	5	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AllServerTests.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AuthTest.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/HttpStatusTest.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/TimeoutTest.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/repository/TimeoutTest.java
3	3	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/AbstractTestServerClientCase.java
5	5	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/TestServerController.java
0	1	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.touchpoint.natives/META-INF/MANIFEST.MF
0	1	bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
0	3	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
0	1	bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/META-INF/MANIFEST.MF
1	2	bundles/org.eclipse.equinox.p2.ui/META-INF/MANIFEST.MF
0	7	bundles/org.eclipse.equinox.p2.ui/OSGI-INF/serviceui_component.xml
3	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ServiceUIComponent.java
3	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ValidationDialogServiceUI.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UserValidationDialog.java
diff --git a/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
index 4b9e718..98817e3 100644
--- a/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
@@ -42,33 +42,7 @@ Export-Package: org.eclipse.equinox.internal.p2.core;x-friends:="org.eclipse.equ
    org.eclipse.equinox.p2.updatechecker.app,
    org.eclipse.equinox.p2.updatesite",
  org.eclipse.equinox.internal.provisional.p2.core;
-  x-friends:="org.eclipse.equinox.p2.artifact.optimizers,
-   org.eclipse.equinox.p2.artifact.processors,
-   org.eclipse.equinox.p2.artifact.repository,
-   org.eclipse.equinox.p2.console,
-   org.eclipse.equinox.p2.director,
-   org.eclipse.equinox.p2.director.app,
-   org.eclipse.equinox.p2.directorywatcher,
-   org.eclipse.equinox.p2.engine,
-   org.eclipse.equinox.p2.extensionlocation,
-   org.eclipse.equinox.p2.installer,
-   org.eclipse.equinox.p2.metadata,
-   org.eclipse.equinox.p2.metadata.generator,
-   org.eclipse.equinox.p2.metadata.repository,
-   org.eclipse.equinox.p2.operations,
-   org.eclipse.equinox.p2.publisher,
-   org.eclipse.equinox.p2.reconciler.dropins,
-   org.eclipse.equinox.p2.repository,
-   org.eclipse.equinox.p2.repository.tools,
-   org.eclipse.equinox.p2.touchpoint.eclipse,
-   org.eclipse.equinox.p2.touchpoint.natives,
-   org.eclipse.equinox.p2.ui,
-   org.eclipse.equinox.p2.ui.admin,
-   org.eclipse.equinox.p2.ui.sdk,
-   org.eclipse.equinox.p2.ui.sdk.scheduler,
-   org.eclipse.equinox.p2.updatechecker,
-   org.eclipse.equinox.p2.updatesite,
-   org.eclipse.pde.core,
+  x-friends:="org.eclipse.pde.core,
    org.eclipse.pde.ui",
  org.eclipse.equinox.internal.provisional.p2.core.eventbus;
   x-friends:="org.eclipse.equinox.p2.artifact.repository,
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/IServiceUI.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/IServiceUI.java
deleted file mode 100644
index 89fe523..0000000
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/IServiceUI.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*******************************************************************************
- *  Copyright (c) 2008, 2009 IBM Corporation and others.
- *  All rights reserved. This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License v1.0
- *  which accompanies this distribution, and is available at
- *  http://www.eclipse.org/legal/epl-v10.html
- * 
- *  Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.internal.provisional.p2.core;
-
-import java.security.cert.Certificate;
-
-/**
- * Service used for prompting for user information from within lower level code.
- * Implementors of this service are responsible for registering the service.
- * 
- * It is possible that the IServiceUI service is requested very early in the startup
- * sequence for an application.  For example, applications that check for updates 
- * during startup will trigger the service lookup if a server requiring authentication
- * is detected.  For this reason, implementors of IServiceUI should ensure that the 
- * bundle providing the service is partitioned appropriately.
- */
-public interface IServiceUI {
-	/**
-	 * Service name constant for the UI service.
-	 */
-	public static final String SERVICE_NAME = IServiceUI.class.getName();
-
-	/**
-	 * Authentication information returned from an authentication prompt request.
-	 */
-	public static class AuthenticationInfo {
-		private final boolean save;
-		private final String userName;
-		private final String password;
-
-		public AuthenticationInfo(String userName, String password, boolean saveResult) {
-			this.userName = userName;
-			this.password = password;
-			this.save = saveResult;
-		}
-
-		public boolean saveResult() {
-			return save;
-		}
-
-		public String getUserName() {
-			return userName;
-		}
-
-		public String getPassword() {
-			return password;
-		}
-	}
-
-	/**
-	 * Trust information returned from a trust request.	 *
-	 */
-	public static class TrustInfo {
-		private final Certificate[] trustedCertificates;
-		private final boolean saveTrustedCertificates;
-		private final boolean trustUnsigned;
-
-		public TrustInfo(Certificate[] trusted, boolean save, boolean trustUnsigned) {
-			this.trustedCertificates = trusted;
-			this.saveTrustedCertificates = save;
-			this.trustUnsigned = trustUnsigned;
-		}
-
-		/**
-		 * Return an array of the certificates that should be trusted for the
-		 * requested operation.
-		 * 
-		 * @return the trusted certificates, or <code>null</code> if there are
-		 * no certificates that were verified as trusted.
-		 */
-		public Certificate[] getTrustedCertificates() {
-			return trustedCertificates;
-		}
-
-		/**
-		 * Return a boolean indicating whether the trusted certificates should
-		 * be persisted for future operations.
-		 * 
-		 * @return <code>true</code> if the trusted certificates should be persisted, <code>false</code> if 
-		 * the trust only applies for this request.
-		 */
-		public boolean persistTrust() {
-			return saveTrustedCertificates;
-		}
-
-		/**
-		 * Return a boolean indicating whether the unsigned content should be trusted
-		 * during this operation.
-		 * 
-		 * @return <code>true</code> if the unsigned content should be trusted, or if there was no unsigned content, 
-		 * and <code>false</code> if there was unsigned content and should not be trusted.
-		 */
-		public boolean trustUnsignedContent() {
-			return trustUnsigned;
-		}
-	}
-
-	/**
-	 * Opens a UI prompt for authentication details
-	 * 
-	 * @param location - the location requiring login details, may be <code>null</code>.
-	 * @return The authentication result
-	 */
-	public AuthenticationInfo getUsernamePassword(String location);
-
-	/**
-	 * Opens a UI prompt for authentication details when cached or remembered details
-	 * where not accepted.
-	 * 
-	 * @param location  the location requiring login details
-	 * @param previousInfo - the previously used authentication details - may not be null.
-	 * @return The authentication result
-	 */
-	public AuthenticationInfo getUsernamePassword(String location, AuthenticationInfo previousInfo);
-
-	/**
-	 * Opens a UI prompt to capture information about trusted content.
-	 *  
-	 * @param untrustedChain - an array of certificate chains for which there is no current trust anchor.  May be
-	 * <code>null</code>, which means there are no untrusted certificate chains.
-	 * @param unsignedDetail - an array of strings, where each String describes content that is not signed.
-	 * May be <code>null</code>, which means there is no unsigned content
-	 * @return  the TrustInfo that describes the user's choices for trusting certificates and
-	 * unsigned content. 
-	 */
-	public TrustInfo getTrustInfo(Certificate[][] untrustedChain, String[] unsignedDetail);
-}
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/Temp.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/Temp.java
new file mode 100644
index 0000000..9be5e74
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/Temp.java
@@ -0,0 +1,11 @@
+package org.eclipse.equinox.internal.provisional.p2.core;
+
+/*
+ * This is a temporary class used so that this package won't be empty.
+ * This class and the package will be removed when PDE updates their
+ * manifests.
+ * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=304603
+ */
+public class Temp {
+
+}
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/p2/core/UIServices.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/p2/core/UIServices.java
new file mode 100644
index 0000000..2510d4d
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/p2/core/UIServices.java
@@ -0,0 +1,137 @@
+/*******************************************************************************
+ *  Copyright (c) 2008, 2009 IBM Corporation and others.
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  which accompanies this distribution, and is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ * 
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.core;
+
+import java.security.cert.Certificate;
+
+/**
+ * Service used for prompting for user information from within lower level code.
+ * Implementors of this service are responsible for registering the service.
+ * 
+ * It is possible that the UIServices service is requested very early in the startup
+ * sequence for an application.  For example, applications that check for updates 
+ * during startup will trigger the service lookup if a server requiring authentication
+ * is detected.  For this reason, implementors of UIServices should ensure that the 
+ * bundle providing the service is partitioned appropriately.
+ * 
+ * @since 2.0
+ */
+public abstract class UIServices {
+	/**
+	 * Service name constant for the UI service.
+	 */
+	public static final String SERVICE_NAME = UIServices.class.getName();
+
+	/**
+	 * Authentication information returned from an authentication prompt request.
+	 */
+	public static class AuthenticationInfo {
+		private final boolean save;
+		private final String userName;
+		private final String password;
+
+		public AuthenticationInfo(String userName, String password, boolean saveResult) {
+			this.userName = userName;
+			this.password = password;
+			this.save = saveResult;
+		}
+
+		public boolean saveResult() {
+			return save;
+		}
+
+		public String getUserName() {
+			return userName;
+		}
+
+		public String getPassword() {
+			return password;
+		}
+	}
+
+	/**
+	 * Trust information returned from a trust request.	 *
+	 */
+	public static class TrustInfo {
+		private final Certificate[] trustedCertificates;
+		private final boolean saveTrustedCertificates;
+		private final boolean trustUnsigned;
+
+		public TrustInfo(Certificate[] trusted, boolean save, boolean trustUnsigned) {
+			this.trustedCertificates = trusted;
+			this.saveTrustedCertificates = save;
+			this.trustUnsigned = trustUnsigned;
+		}
+
+		/**
+		 * Return an array of the certificates that should be trusted for the
+		 * requested operation.
+		 * 
+		 * @return the trusted certificates, or <code>null</code> if there are
+		 * no certificates that were verified as trusted.
+		 */
+		public Certificate[] getTrustedCertificates() {
+			return trustedCertificates;
+		}
+
+		/**
+		 * Return a boolean indicating whether the trusted certificates should
+		 * be persisted for future operations.
+		 * 
+		 * @return <code>true</code> if the trusted certificates should be persisted, <code>false</code> if 
+		 * the trust only applies for this request.
+		 */
+		public boolean persistTrust() {
+			return saveTrustedCertificates;
+		}
+
+		/**
+		 * Return a boolean indicating whether the unsigned content should be trusted
+		 * during this operation.
+		 * 
+		 * @return <code>true</code> if the unsigned content should be trusted, or if there was no unsigned content, 
+		 * and <code>false</code> if there was unsigned content and should not be trusted.
+		 */
+		public boolean trustUnsignedContent() {
+			return trustUnsigned;
+		}
+	}
+
+	/**
+	 * Opens a UI prompt for authentication details
+	 * 
+	 * @param location - the location requiring login details, may be <code>null</code>.
+	 * @return The authentication result
+	 */
+	public abstract AuthenticationInfo getUsernamePassword(String location);
+
+	/**
+	 * Opens a UI prompt for authentication details when cached or remembered details
+	 * where not accepted.
+	 * 
+	 * @param location  the location requiring login details
+	 * @param previousInfo - the previously used authentication details - may not be null.
+	 * @return The authentication result
+	 */
+	public abstract AuthenticationInfo getUsernamePassword(String location, AuthenticationInfo previousInfo);
+
+	/**
+	 * Opens a UI prompt to capture information about trusted content.
+	 *  
+	 * @param untrustedChain - an array of certificate chains for which there is no current trust anchor.  May be
+	 * <code>null</code>, which means there are no untrusted certificate chains.
+	 * @param unsignedDetail - an array of strings, where each String describes content that is not signed.
+	 * May be <code>null</code>, which means there is no unsigned content
+	 * @return  the TrustInfo that describes the user's choices for trusting certificates and
+	 * unsigned content. 
+	 */
+	public abstract TrustInfo getTrustInfo(Certificate[][] untrustedChain, String[] unsignedDetail);
+}
diff --git a/bundles/org.eclipse.equinox.p2.director.app/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.director.app/META-INF/MANIFEST.MF
index 9a96f96..77bb32e 100644
--- a/bundles/org.eclipse.equinox.p2.director.app/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.director.app/META-INF/MANIFEST.MF
@@ -18,7 +18,6 @@ Import-Package: org.eclipse.equinox.app,
  org.eclipse.equinox.internal.p2.metadata,
  org.eclipse.equinox.internal.p2.metadata.index,
  org.eclipse.equinox.internal.p2.metadata.query,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.engine;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.director/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.director/META-INF/MANIFEST.MF
index b3908d7..6a21ae6 100644
--- a/bundles/org.eclipse.equinox.p2.director/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.director/META-INF/MANIFEST.MF
@@ -36,7 +36,6 @@ Bundle-ActivationPolicy: lazy
 Service-Component: OSGI-INF/director.xml, OSGI-INF/planner.xml
 Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.provisional.configurator,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.core.spi;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.engine;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
index 772ba5d..c87ba36 100644
--- a/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.directorywatcher/META-INF/MANIFEST.MF
@@ -18,7 +18,6 @@ Import-Package: org.eclipse.equinox.internal.p2.artifact.repository,
  org.eclipse.equinox.internal.p2.metadata.expression,
  org.eclipse.equinox.internal.p2.metadata.index,
  org.eclipse.equinox.internal.p2.update,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.metadata;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.publisher,
diff --git a/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
index dcefea9..04e57be 100644
--- a/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
@@ -36,7 +36,6 @@ Import-Package: javax.xml.parsers,
  org.eclipse.equinox.internal.p2.metadata.repository,
  org.eclipse.equinox.internal.p2.metadata.repository.io,
  org.eclipse.equinox.internal.p2.persistence,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.repository,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/CertificateChecker.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/CertificateChecker.java
index 42f04bc..d9f163f 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/CertificateChecker.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/CertificateChecker.java
@@ -10,6 +10,9 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.engine.phases;
 
+import org.eclipse.equinox.p2.core.UIServices;
+import org.eclipse.equinox.p2.core.UIServices.TrustInfo;
+
 import java.io.File;
 import java.io.IOException;
 import java.security.GeneralSecurityException;
@@ -19,8 +22,6 @@ import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.equinox.internal.p2.engine.EngineActivator;
 import org.eclipse.equinox.internal.p2.engine.Messages;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI.TrustInfo;
 import org.eclipse.equinox.p2.core.IProvisioningAgent;
 import org.eclipse.osgi.service.security.TrustEngine;
 import org.eclipse.osgi.signedcontent.*;
@@ -56,7 +57,7 @@ public class CertificateChecker {
 	}
 
 	private IStatus checkCertificates(TrustEngine trustEngine, SignedContentFactory verifierFactory) {
-		IServiceUI serviceUI = (IServiceUI) agent.getService(IServiceUI.SERVICE_NAME);
+		UIServices serviceUI = (UIServices) agent.getService(UIServices.SERVICE_NAME);
 		SignedContent content = null;
 		SignerInfo[] signerInfo = null;
 		ArrayList<Certificate> untrusted = new ArrayList<Certificate>();
diff --git a/bundles/org.eclipse.equinox.p2.extensionlocation/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.extensionlocation/META-INF/MANIFEST.MF
index 9c6bf11..84f75ec 100644
--- a/bundles/org.eclipse.equinox.p2.extensionlocation/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.extensionlocation/META-INF/MANIFEST.MF
@@ -19,7 +19,6 @@ Import-Package: org.eclipse.equinox.internal.p2.artifact.repository.simple,
  org.eclipse.equinox.internal.p2.publisher.eclipse,
  org.eclipse.equinox.internal.p2.touchpoint.eclipse,
  org.eclipse.equinox.internal.p2.update,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.directorywatcher,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.engine;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.operations/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.operations/META-INF/MANIFEST.MF
index e92ee5f..11e2583 100644
--- a/bundles/org.eclipse.equinox.p2.operations/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.operations/META-INF/MANIFEST.MF
@@ -19,7 +19,6 @@ Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.p2.metadata.index,
  org.eclipse.equinox.internal.p2.repository.helpers,
  org.eclipse.equinox.internal.provisional.configurator,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.reconciler.dropins/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.reconciler.dropins/META-INF/MANIFEST.MF
index 80dc22d..a0293d7 100644
--- a/bundles/org.eclipse.equinox.p2.reconciler.dropins/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.reconciler.dropins/META-INF/MANIFEST.MF
@@ -19,7 +19,6 @@ Import-Package: org.eclipse.equinox.app;version="1.0.0",
  org.eclipse.equinox.internal.p2.metadata.repository,
  org.eclipse.equinox.internal.p2.update,
  org.eclipse.equinox.internal.provisional.configurator,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.internal.provisional.p2.directorywatcher,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
index 4ec65b7..3a99410 100644
--- a/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
@@ -41,7 +41,6 @@ Import-Package: javax.xml.parsers,
  org.eclipse.equinox.internal.p2.metadata,
  org.eclipse.equinox.internal.p2.metadata.index,
  org.eclipse.equinox.internal.p2.repository.helpers,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.core.spi;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/Credentials.java b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/Credentials.java
index 09500c2..d45e858 100644
--- a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/Credentials.java
+++ b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/Credentials.java
@@ -20,8 +20,8 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.ecf.filetransfer.UserCancelledException;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.internal.p2.repository.helpers.DebugHelper;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI.AuthenticationInfo;
+import org.eclipse.equinox.p2.core.IProvisioningAgent;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.repository.IRepository;
 import org.eclipse.equinox.security.storage.*;
 
@@ -39,7 +39,7 @@ public class Credentials {
 	/** 
 	 * Cache of auth information that is not persisted, and modified auth info.
 	 */
-	private static final Map<String, AuthenticationInfo> savedAuthInfo = Collections.synchronizedMap(new HashMap<String, AuthenticationInfo>());
+	private static final Map<String, UIServices.AuthenticationInfo> savedAuthInfo = Collections.synchronizedMap(new HashMap<String, UIServices.AuthenticationInfo>());
 
 	/**
 	 * Information about retry counts, and prompts canceled by user. The SoftReference is
@@ -68,7 +68,7 @@ public class Credentials {
 	 * @throws CoreException if the password cannot be read or saved
 	 * @return The authentication info.
 	 */
-	public static AuthenticationInfo forLocation(URI location, boolean prompt) throws LoginCanceledException, CoreException {
+	public static UIServices.AuthenticationInfo forLocation(URI location, boolean prompt) throws LoginCanceledException, CoreException {
 		return forLocation(location, prompt, null);
 	}
 
@@ -90,7 +90,7 @@ public class Credentials {
 	 * @throws UserCancelledException - user canceled the prompt for name/password
 	 * @throws CoreException if there is an error
 	 */
-	public static AuthenticationInfo forLocation(URI location, boolean prompt, AuthenticationInfo lastUsed) throws LoginCanceledException, CoreException {
+	public static UIServices.AuthenticationInfo forLocation(URI location, boolean prompt, UIServices.AuthenticationInfo lastUsed) throws LoginCanceledException, CoreException {
 		String host = uriToHost(location);
 		String nodeKey;
 		try {
@@ -125,7 +125,7 @@ public class Credentials {
 				r.put(host, hostLock);
 			}
 		}
-		AuthenticationInfo loginDetails = null;
+		UIServices.AuthenticationInfo loginDetails = null;
 		ISecurePreferences securePreferences = null;
 		// synchronize getting secure store with prompting user, as it may prompt.
 		synchronized (promptLock) {
@@ -166,7 +166,7 @@ public class Credentials {
 
 							// if we don't have stored connection data just return a null auth info
 							if (username != null && password != null)
-								return new IServiceUI.AuthenticationInfo(username, password, true);
+								return new UIServices.AuthenticationInfo(username, password, true);
 						}
 						if (DebugHelper.DEBUG_REPOSITORY_CREDENTIALS) {
 							DebugHelper.debug("Credentials", "forLocation:PREFNODE NOT FOUND - RETURN FROM MEMORY", // //$NON-NLS-1$ //$NON-NLS-2$
@@ -184,7 +184,7 @@ public class Credentials {
 				// check if another thread has modified the credentials since last attempt
 				// made by current thread - if so, try with latest without prompting
 				if (DebugHelper.DEBUG_REPOSITORY_CREDENTIALS) {
-					AuthenticationInfo latest = restoreFromMemory(nodeName);
+					UIServices.AuthenticationInfo latest = restoreFromMemory(nodeName);
 					boolean useLatest = false;
 					if (latest != null && lastUsed != null)
 						if (!(latest.getUserName().equals(lastUsed.getUserName()) && latest.getPassword().equals(lastUsed.getPassword())))
@@ -194,7 +194,7 @@ public class Credentials {
 								new Object[] {"host", location, "prompt", Boolean.toString(prompt)}); //$NON-NLS-1$ //$NON-NLS-2$
 				}
 
-				AuthenticationInfo latest = restoreFromMemory(nodeName);
+				UIServices.AuthenticationInfo latest = restoreFromMemory(nodeName);
 				if (latest != null && lastUsed != null)
 					if (!(latest.getUserName().equals(lastUsed.getUserName()) && latest.getPassword().equals(lastUsed.getPassword())))
 						return latest;
@@ -219,7 +219,9 @@ public class Credentials {
 						throw new LoginCanceledException();
 					return latest == null ? lastUsed : latest; // keep client failing on the latest known
 				}
-				IServiceUI adminUIService = (IServiceUI) ServiceHelper.getService(Activator.getContext(), IServiceUI.class.getName());
+				IProvisioningAgent agent = (IProvisioningAgent) ServiceHelper.getService(Activator.getContext(), IProvisioningAgent.SERVICE_NAME);
+				UIServices adminUIService = (UIServices) agent.getService(UIServices.SERVICE_NAME);
+
 				if (adminUIService != null)
 					synchronized (promptLock) {
 						try {
@@ -320,14 +322,14 @@ public class Credentials {
 	 * Returns authentication details stored in memory for the given node name,
 	 * or <code>null</code> if no information is stored.
 	 */
-	private static AuthenticationInfo restoreFromMemory(String nodeName) {
+	private static UIServices.AuthenticationInfo restoreFromMemory(String nodeName) {
 		return savedAuthInfo.get(nodeName);
 	}
 
 	/**
 	 * Saves authentication details in memory so user is only prompted once per (SDK) session
 	 */
-	private static void saveInMemory(String nodeName, AuthenticationInfo loginDetails) {
+	private static void saveInMemory(String nodeName, UIServices.AuthenticationInfo loginDetails) {
 		savedAuthInfo.put(nodeName, loginDetails);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/RepositoryTransport.java b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/RepositoryTransport.java
index 7179207..3ab7b7a 100644
--- a/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/RepositoryTransport.java
+++ b/bundles/org.eclipse.equinox.p2.repository/src/org/eclipse/equinox/internal/p2/repository/RepositoryTransport.java
@@ -12,8 +12,6 @@
 
 package org.eclipse.equinox.internal.p2.repository;
 
-import org.eclipse.equinox.p2.core.ProvisionException;
-
 import java.io.*;
 import java.net.URI;
 import org.eclipse.core.runtime.*;
@@ -21,8 +19,9 @@ import org.eclipse.ecf.core.security.ConnectContextFactory;
 import org.eclipse.ecf.core.security.IConnectContext;
 import org.eclipse.ecf.filetransfer.UserCancelledException;
 import org.eclipse.equinox.internal.p2.repository.Credentials.LoginCanceledException;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI.AuthenticationInfo;
 import org.eclipse.equinox.internal.provisional.p2.repository.IStateful;
+import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.core.UIServices.AuthenticationInfo;
 import org.eclipse.osgi.util.NLS;
 
 /**
diff --git a/bundles/org.eclipse.equinox.p2.tests/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.tests/META-INF/MANIFEST.MF
index 93ec107..a16412f 100644
--- a/bundles/org.eclipse.equinox.p2.tests/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.tests/META-INF/MANIFEST.MF
@@ -75,7 +75,6 @@ Import-Package: javax.xml.parsers,
  org.eclipse.equinox.internal.p2.touchpoint.natives.actions,
  org.eclipse.equinox.internal.p2.update,
  org.eclipse.equinox.internal.provisional.p2.artifact.repository.processing,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.internal.provisional.p2.directorywatcher,
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/CertificateCheckerTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/CertificateCheckerTest.java
index 466da34..09fe438 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/CertificateCheckerTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/CertificateCheckerTest.java
@@ -17,14 +17,14 @@ import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.internal.p2.core.ProvisioningAgent;
 import org.eclipse.equinox.internal.p2.engine.EngineActivator;
 import org.eclipse.equinox.internal.p2.engine.phases.CertificateChecker;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.tests.*;
 
 /**
  * Tests for {@link CertificateChecker}.
  */
 public class CertificateCheckerTest extends AbstractProvisioningTest {
-	class CertificateTestService implements IServiceUI {
+	class CertificateTestService extends UIServices {
 		public boolean unsignedReturnValue = true;
 		public boolean wasPrompted = false;
 
@@ -51,7 +51,7 @@ public class CertificateCheckerTest extends AbstractProvisioningTest {
 	protected void setUp() throws Exception {
 		serviceUI = new CertificateTestService();
 		testAgent = new ProvisioningAgent();
-		testAgent.registerService(IServiceUI.SERVICE_NAME, serviceUI);
+		testAgent.registerService(UIServices.SERVICE_NAME, serviceUI);
 		testAgent.setBundleContext(TestActivator.getContext());
 		checker = new CertificateChecker(testAgent);
 		try {
@@ -146,7 +146,7 @@ public class CertificateCheckerTest extends AbstractProvisioningTest {
 	public void testBug291049() {
 		try {
 			// Intentionally replace our service with a null service
-			testAgent.registerService(IServiceUI.SERVICE_NAME, null);
+			testAgent.registerService(UIServices.SERVICE_NAME, null);
 			checker.add(unsigned);
 			// TODO need to add some untrusted files here, too.  To prove that we treated them as trusted temporarily
 			System.getProperties().setProperty(EngineActivator.PROP_UNSIGNED_POLICY, EngineActivator.UNSIGNED_PROMPT);
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AllServerTests.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AllServerTests.java
index 3eaff84..11304aa 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AllServerTests.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AllServerTests.java
@@ -15,7 +15,7 @@ import java.net.ServerSocket;
 import java.security.cert.Certificate;
 import java.util.Hashtable;
 import junit.framework.*;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.tests.TestActivator;
 import org.osgi.framework.*;
 import org.osgi.service.packageadmin.PackageAdmin;
@@ -30,7 +30,7 @@ public class AllServerTests extends TestCase {
 	private static final String BUNDLE_EQUINOX_HTTP = "org.eclipse.equinox.http";
 	public static final String PROP_TESTSERVER_PORT = "org.osgi.service.http.port";
 
-	static IServiceUI hookedAuthDialog;
+	static UIServices hookedAuthDialog;
 	private static ServiceRegistration certificateUIRegistration;
 	private static int setUpCounter = 0;
 	private static ServiceReference packageAdminRef;
@@ -123,7 +123,7 @@ public class AllServerTests extends TestCase {
 		Hashtable properties = new Hashtable(1);
 		properties.put(org.osgi.framework.Constants.SERVICE_RANKING, new Integer(Integer.MAX_VALUE));
 
-		certificateUIRegistration = context.registerService(IServiceUI.class.getName(), new DelegatingAuthService(), properties);
+		certificateUIRegistration = context.registerService(UIServices.class.getName(), new DelegatingAuthService(), properties);
 		setUpCounter = 1;
 	}
 
@@ -163,11 +163,11 @@ public class AllServerTests extends TestCase {
 		return;
 	}
 
-	static public void setServiceUI(IServiceUI hook) {
+	static public void setServiceUI(UIServices hook) {
 		hookedAuthDialog = hook;
 	}
 
-	public static class DelegatingAuthService implements IServiceUI {
+	public static class DelegatingAuthService extends UIServices {
 
 		public AuthenticationInfo getUsernamePassword(String location) {
 			if (hookedAuthDialog != null)
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AuthTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AuthTest.java
index ec10dee..ae9ac79 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AuthTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/AuthTest.java
@@ -12,8 +12,8 @@ import java.net.URI;
 import java.security.cert.Certificate;
 import org.eclipse.core.runtime.OperationCanceledException;
 import org.eclipse.equinox.internal.p2.repository.RepositoryPreferences;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.repository.metadata.IMetadataRepositoryManager;
 
 public class AuthTest extends ServerBasedTestCase {
@@ -80,7 +80,7 @@ public class AuthTest extends ServerBasedTestCase {
 
 	}
 
-	public class AladdinNotSavedService implements IServiceUI {
+	public class AladdinNotSavedService extends UIServices {
 		public int counter = 0;
 
 		public AuthenticationInfo getUsernamePassword(String location) {
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/HttpStatusTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/HttpStatusTest.java
index 2aa73a3..4225c55 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/HttpStatusTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/HttpStatusTest.java
@@ -15,8 +15,8 @@ import java.text.MessageFormat;
 import java.text.ParseException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.OperationCanceledException;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.repository.metadata.IMetadataRepositoryManager;
 
 /**
@@ -170,7 +170,7 @@ public class HttpStatusTest extends ServerBasedTestCase {
 		}
 	}
 
-	public class AladdinNotSavedService implements IServiceUI {
+	public class AladdinNotSavedService extends UIServices {
 		public int counter = 0;
 
 		public AuthenticationInfo getUsernamePassword(String location) {
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/TimeoutTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/TimeoutTest.java
index f8b3e33..bd44d39 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/TimeoutTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/TimeoutTest.java
@@ -11,8 +11,8 @@ package org.eclipse.equinox.p2.tests.metadata.repository;
 import java.net.URI;
 import java.security.cert.Certificate;
 import org.eclipse.core.runtime.*;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.repository.metadata.IMetadataRepositoryManager;
 
 /**
@@ -155,7 +155,7 @@ public class TimeoutTest extends ServerBasedTestCase {
 		}
 	}
 
-	public class AladdinNotSavedService implements IServiceUI {
+	public class AladdinNotSavedService extends UIServices {
 		public int counter = 0;
 
 		public AuthenticationInfo getUsernamePassword(String location) {
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/repository/TimeoutTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/repository/TimeoutTest.java
index dacbeb2..c583346 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/repository/TimeoutTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/repository/TimeoutTest.java
@@ -13,8 +13,8 @@ import java.net.URI;
 import java.security.cert.Certificate;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.repository.RepositoryTransport;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.tests.metadata.repository.AllServerTests;
 import org.eclipse.equinox.p2.tests.testserver.helper.AbstractTestServerClientCase;
 
@@ -210,7 +210,7 @@ public class TimeoutTest extends AbstractTestServerClientCase {
 		}
 	}
 
-	public class AladdinNotSavedService implements IServiceUI {
+	public class AladdinNotSavedService extends UIServices {
 		public int counter = 0;
 
 		public AuthenticationInfo getUsernamePassword(String location) {
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/AbstractTestServerClientCase.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/AbstractTestServerClientCase.java
index 802d8cc..6c3886f 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/AbstractTestServerClientCase.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/AbstractTestServerClientCase.java
@@ -13,8 +13,8 @@ package org.eclipse.equinox.p2.tests.testserver.helper;
 import java.security.cert.Certificate;
 import junit.framework.*;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.core.IProvisioningAgent;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.tests.TestActivator;
 
 public class AbstractTestServerClientCase extends TestCase {
@@ -110,7 +110,7 @@ public class AbstractTestServerClientCase extends TestCase {
 		TestServerController.setServiceUI(null);
 	}
 
-	public class AladdinNotSavedService implements IServiceUI {
+	public class AladdinNotSavedService extends UIServices {
 
 		public AuthenticationInfo getUsernamePassword(String location) {
 			return new AuthenticationInfo("Aladdin", "open sesame", false);
@@ -136,7 +136,7 @@ public class AbstractTestServerClientCase extends TestCase {
 	 * @author henrik
 	 *
 	 */
-	public class BadLoginService implements IServiceUI {
+	public class BadLoginService extends UIServices {
 
 		public AuthenticationInfo getUsernamePassword(String location) {
 			return new AuthenticationInfo("moria", "friend", false);
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/TestServerController.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/TestServerController.java
index 6217167..14b0ee3 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/TestServerController.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/testserver/helper/TestServerController.java
@@ -14,7 +14,7 @@ import java.io.IOException;
 import java.net.ServerSocket;
 import java.security.cert.Certificate;
 import java.util.Hashtable;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.tests.TestActivator;
 import org.osgi.framework.*;
 import org.osgi.service.packageadmin.PackageAdmin;
@@ -31,7 +31,7 @@ public class TestServerController {
 	private static final String BUNDLE_EQUINOX_HTTP = "org.eclipse.equinox.http";
 	public static final String PROP_TESTSERVER_PORT = "org.osgi.service.http.port";
 
-	static IServiceUI hookedAuthDialog;
+	static UIServices hookedAuthDialog;
 	private static ServiceRegistration certificateUIRegistration;
 	private static int setUpCounter = 0;
 	private static ServiceReference packageAdminRef;
@@ -95,7 +95,7 @@ public class TestServerController {
 		Hashtable properties = new Hashtable(1);
 		properties.put(org.osgi.framework.Constants.SERVICE_RANKING, new Integer(Integer.MAX_VALUE));
 
-		certificateUIRegistration = context.registerService(IServiceUI.class.getName(), new DelegatingAuthService(), properties);
+		certificateUIRegistration = context.registerService(UIServices.class.getName(), new DelegatingAuthService(), properties);
 		setUpCounter = 1;
 	}
 
@@ -135,11 +135,11 @@ public class TestServerController {
 		return;
 	}
 
-	static public void setServiceUI(IServiceUI hook) {
+	static public void setServiceUI(UIServices hook) {
 		hookedAuthDialog = hook;
 	}
 
-	public static class DelegatingAuthService implements IServiceUI {
+	public static class DelegatingAuthService extends UIServices {
 
 		public AuthenticationInfo getUsernamePassword(String location) {
 			if (hookedAuthDialog != null)
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
index 8617859..e2d055d 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/META-INF/MANIFEST.MF
@@ -22,7 +22,6 @@ Import-Package: javax.xml.parsers,
  org.eclipse.equinox.internal.p2.garbagecollector,
  org.eclipse.equinox.internal.p2.metadata.index,
  org.eclipse.equinox.internal.provisional.frameworkadmin,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.director;resolution:=optional,
  org.eclipse.equinox.internal.provisional.p2.repository,
  org.eclipse.equinox.internal.simpleconfigurator.manipulator,
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.natives/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.touchpoint.natives/META-INF/MANIFEST.MF
index e4892c3..03fbcd4 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.natives/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.natives/META-INF/MANIFEST.MF
@@ -15,7 +15,6 @@ Bundle-RequiredExecutionEnvironment: J2SE-1.5,
 Bundle-ActivationPolicy: lazy
 Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.p2.engine,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.p2.core;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.engine;version="[2.0.0,3.0.0)",
  org.eclipse.equinox.p2.engine.spi;version="[2.0.0,3.0.0)",
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
index 60ef90d..5b61245 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
@@ -22,7 +22,6 @@ Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.p2.ui.model,
  org.eclipse.equinox.internal.p2.ui.query,
  org.eclipse.equinox.internal.p2.ui.viewers,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.internal.provisional.p2.repository,
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
index 00dfe4b..a12b2b3 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
@@ -12,9 +12,7 @@ package org.eclipse.equinox.internal.p2.ui.admin;
 
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
-import org.eclipse.equinox.internal.p2.ui.ValidationDialogServiceUI;
 import org.eclipse.equinox.internal.p2.ui.admin.preferences.PreferenceConstants;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.p2.engine.query.UserVisibleRootQuery;
 import org.eclipse.equinox.p2.operations.RepositoryTracker;
 import org.eclipse.equinox.p2.query.QueryUtil;
@@ -83,7 +81,6 @@ public class ProvAdminUIActivator extends AbstractUIPlugin {
 		plugin = this;
 		ProvAdminUIActivator.context = bundleContext;
 		initializePolicy();
-		certificateUIRegistration = context.registerService(IServiceUI.class.getName(), new ValidationDialogServiceUI(), null);
 		getPreferenceStore().addPropertyChangeListener(getPreferenceListener());
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/META-INF/MANIFEST.MF
index 3b6a8fd..db8df9b 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/META-INF/MANIFEST.MF
@@ -22,7 +22,6 @@ Import-Package: com.ibm.icu.util;version="4.0.1",
  org.eclipse.equinox.internal.p2.metadata.query,
  org.eclipse.equinox.internal.p2.ui.actions,
  org.eclipse.equinox.internal.p2.ui.query,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.internal.provisional.p2.repository,
diff --git a/bundles/org.eclipse.equinox.p2.ui/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.ui/META-INF/MANIFEST.MF
index 5f55799..62a3a44 100644
--- a/bundles/org.eclipse.equinox.p2.ui/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.ui/META-INF/MANIFEST.MF
@@ -28,7 +28,6 @@ Import-Package: com.ibm.icu.text,
  org.eclipse.equinox.internal.p2.metadata.repository,
  org.eclipse.equinox.internal.p2.repository.helpers,
  org.eclipse.equinox.internal.provisional.configurator,
- org.eclipse.equinox.internal.provisional.p2.core,
  org.eclipse.equinox.internal.provisional.p2.core.eventbus,
  org.eclipse.equinox.internal.provisional.p2.director,
  org.eclipse.equinox.internal.provisional.p2.repository,
@@ -49,7 +48,7 @@ Import-Package: com.ibm.icu.text,
  org.osgi.service.packageadmin;version="1.2.0",
  org.w3c.dom,
  org.xml.sax
-Service-Component: OSGI-INF/serviceui_component.xml, OSGI-INF/repositoryTracker_component.xml, OSGI-INF/serviceui.xml
+Service-Component: OSGI-INF/repositoryTracker_component.xml, OSGI-INF/serviceui.xml
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: J2SE-1.5,
  J2SE-1.4,
diff --git a/bundles/org.eclipse.equinox.p2.ui/OSGI-INF/serviceui_component.xml b/bundles/org.eclipse.equinox.p2.ui/OSGI-INF/serviceui_component.xml
deleted file mode 100644
index 96a25d3..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/OSGI-INF/serviceui_component.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.ui.serviceui">
-   <implementation class="org.eclipse.equinox.internal.p2.ui.ValidationDialogServiceUI"/>
-   <service>
-      <provide interface="org.eclipse.equinox.internal.provisional.p2.core.IServiceUI"/>
-   </service>
-</scr:component>
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ServiceUIComponent.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ServiceUIComponent.java
index a0a331a..4bc5cdc 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ServiceUIComponent.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ServiceUIComponent.java
@@ -10,13 +10,14 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui;
 
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
+import org.eclipse.equinox.p2.core.UIServices;
+
 import org.eclipse.equinox.p2.core.IProvisioningAgent;
 import org.eclipse.equinox.p2.core.spi.IAgentServiceFactory;
 
 /**
  * Component that provides a factory that can create and initialize
- * {@link IServiceUI} instances.
+ * {@link UIServices} instances.
  */
 public class ServiceUIComponent implements IAgentServiceFactory {
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ValidationDialogServiceUI.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ValidationDialogServiceUI.java
index cd5a5f4..fe2d060 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ValidationDialogServiceUI.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ValidationDialogServiceUI.java
@@ -16,7 +16,7 @@ import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.equinox.internal.p2.ui.dialogs.TrustCertificateDialog;
 import org.eclipse.equinox.internal.p2.ui.dialogs.UserValidationDialog;
 import org.eclipse.equinox.internal.p2.ui.viewers.CertificateLabelProvider;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
+import org.eclipse.equinox.p2.core.UIServices;
 import org.eclipse.equinox.p2.ui.LoadMetadataRepositoryJob;
 import org.eclipse.jface.dialogs.ErrorDialog;
 import org.eclipse.jface.dialogs.IDialogConstants;
@@ -28,11 +28,11 @@ import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.PlatformUI;
 
 /**
- * The default GUI-based implementation of {@link IServiceUI}.
+ * The default GUI-based implementation of {@link UIServices}.
  * The service declaration is made in the serviceui_component.xml file.
 
  */
-public class ValidationDialogServiceUI implements IServiceUI {
+public class ValidationDialogServiceUI extends UIServices {
 	/**
 	 * Subclassed to add a cancel button to the error dialog.
 	 */
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UserValidationDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UserValidationDialog.java
index 394110a..9f2045c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UserValidationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UserValidationDialog.java
@@ -10,8 +10,9 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
+import org.eclipse.equinox.p2.core.UIServices.AuthenticationInfo;
+
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI.AuthenticationInfo;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.IDialogConstants;
 import org.eclipse.swt.SWT;
