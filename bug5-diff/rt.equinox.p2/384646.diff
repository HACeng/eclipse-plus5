commit d709ac369fb457887ecb709a3680da983bb9d9cc
Author: Ian Bull <irbull@eclipsesource.com>
Date:   Wed Nov 14 10:16:29 2012 -0800

    Bug 384646: Improves the performance of the install software filter
    
    This changeset includes two approaches to fix the performance problems
    in the p2 Install Software Dialog:
    
    1. The children of a category are now cached. This ensures that the tree
    is only built once.
    
    2. When computing the members of a category, we now do a 'piped query'.
    Instead of searching all IUs in a repo to see if they are in a category,
    we limit ourselves to only IUs which should be shown. This was available
    from the policy as a "top level query".

5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
7	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
index 3bee4d9..884448c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
@@ -141,7 +141,11 @@ public class QueryProvider {
 						// We need an expression that uses the requirements of the element's requirements, which could be merged
 						// from multiple category IUs shown as one in the UI.
 						IExpression matchesRequirementsExpression = ExpressionUtil.parse("$0.exists(r | this ~= r)"); //$NON-NLS-1$
-						memberOfCategoryQuery = QueryUtil.createMatchQuery(matchesRequirementsExpression, ((CategoryElement) element).getRequirements());
+						// First perform the "top level" query to limit the amount of
+						// data we need to match in our category query.
+						IQuery<IInstallableUnit> iuGroupQuery = topLevelQuery;
+						IQuery<IInstallableUnit> memberQuery = QueryUtil.createMatchQuery(matchesRequirementsExpression, ((CategoryElement) element).getRequirements());
+						memberOfCategoryQuery = QueryUtil.createPipeQuery(iuGroupQuery, memberQuery);
 					} else {
 						memberOfCategoryQuery = QueryUtil.createIUCategoryMemberQuery(((IIUElement) element).getIU());
 					}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
index a478e68..451cfc7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
@@ -66,6 +66,10 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getChildren(Object o) {
+		Object[] cache = getCachedChildren();
+		if (cache.length > 0) {
+			return getCachedChildren();
+		}
 		return fetchChildren(o, new NullProgressMonitor());
 	}
 
@@ -159,6 +163,9 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getCachedChildren() {
+		if (cachedChildren == null) {
+			return new Object[0];
+		}
 		return cachedChildren.toArray();
 	}
 
commit c25f316ce3aa843c20cd208a8f7d43b36be2dc01
Author: Ian Bull <irbull@eclipsesource.com>
Date:   Mon Nov 19 11:47:43 2012 -0800

    Revert "Bug 384646: Improves the performance of the install software filter"
    
    This reverts commit d709ac369fb457887ecb709a3680da983bb9d9cc.

1	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
0	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
index 884448c..3bee4d9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/QueryProvider.java
@@ -141,11 +141,7 @@ public class QueryProvider {
 						// We need an expression that uses the requirements of the element's requirements, which could be merged
 						// from multiple category IUs shown as one in the UI.
 						IExpression matchesRequirementsExpression = ExpressionUtil.parse("$0.exists(r | this ~= r)"); //$NON-NLS-1$
-						// First perform the "top level" query to limit the amount of
-						// data we need to match in our category query.
-						IQuery<IInstallableUnit> iuGroupQuery = topLevelQuery;
-						IQuery<IInstallableUnit> memberQuery = QueryUtil.createMatchQuery(matchesRequirementsExpression, ((CategoryElement) element).getRequirements());
-						memberOfCategoryQuery = QueryUtil.createPipeQuery(iuGroupQuery, memberQuery);
+						memberOfCategoryQuery = QueryUtil.createMatchQuery(matchesRequirementsExpression, ((CategoryElement) element).getRequirements());
 					} else {
 						memberOfCategoryQuery = QueryUtil.createIUCategoryMemberQuery(((IIUElement) element).getIU());
 					}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
index 451cfc7..a478e68 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
@@ -66,10 +66,6 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getChildren(Object o) {
-		Object[] cache = getCachedChildren();
-		if (cache.length > 0) {
-			return getCachedChildren();
-		}
 		return fetchChildren(o, new NullProgressMonitor());
 	}
 
@@ -163,9 +159,6 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getCachedChildren() {
-		if (cachedChildren == null) {
-			return new Object[0];
-		}
 		return cachedChildren.toArray();
 	}
 
commit a63347a8fc10f3585c71cf5bddee00cc5abafbb2
Author: Ian Bull <irbull@eclipsesource.com>
Date:   Mon Nov 19 12:57:21 2012 -0800

    Bug 384646: Improves the performance of the install software filter.
    
    This changeset results in caching the children in a category, so each
    time a key is typed we don't need to compute it.

7	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
index a478e68..451cfc7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
@@ -66,6 +66,10 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getChildren(Object o) {
+		Object[] cache = getCachedChildren();
+		if (cache.length > 0) {
+			return getCachedChildren();
+		}
 		return fetchChildren(o, new NullProgressMonitor());
 	}
 
@@ -159,6 +163,9 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getCachedChildren() {
+		if (cachedChildren == null) {
+			return new Object[0];
+		}
 		return cachedChildren.toArray();
 	}
 
commit df783ddd2a409f741110210442cfcf0867e23e71
Author: Ian Bull <irbull@eclipsesource.com>
Date:   Tue Jan 15 21:51:13 2013 -0800

    Revert "Bug 384646: Improves the performance of the install software filter."
    
    This reverts commit a63347a8fc10f3585c71cf5bddee00cc5abafbb2.

0	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
index 451cfc7..a478e68 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
@@ -66,10 +66,6 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getChildren(Object o) {
-		Object[] cache = getCachedChildren();
-		if (cache.length > 0) {
-			return getCachedChildren();
-		}
 		return fetchChildren(o, new NullProgressMonitor());
 	}
 
@@ -163,9 +159,6 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getCachedChildren() {
-		if (cachedChildren == null) {
-			return new Object[0];
-		}
 		return cachedChildren.toArray();
 	}
 
commit faaf1d4d76b2770c003a4c9ba70b0311d433d8b7
Author: Pascal Rapicault <pascal.rapicault@ericsson.com>
Date:   Fri Apr 4 09:56:50 2014 -0400

    Bug 384646 - [ui] 'type filter text' box searches as the user types each
    letter and hangs
    
    Signed-off-by: Pascal Rapicault <pascal.rapicault@ericsson.com>

8	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/CategoryElement.java
7	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/CategoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/CategoryElement.java
index 394a8dd..9cfa065 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/CategoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/CategoryElement.java
@@ -26,6 +26,7 @@ public class CategoryElement extends RemoteQueriedElement implements IIUElement
 
 	private ArrayList<IInstallableUnit> ius = new ArrayList<IInstallableUnit>(1);
 	private Collection<IRequirement> requirements;
+	private Object[] cache = null;
 
 	public CategoryElement(Object parent, IInstallableUnit iu) {
 		super(parent);
@@ -119,6 +120,13 @@ public class CategoryElement extends RemoteQueriedElement implements IIUElement
 		return requirements;
 	}
 
+	@Override
+	protected Object[] fetchChildren(Object o, IProgressMonitor monitor) {
+		if (cache == null)
+			cache = super.fetchChildren(o, monitor);
+		return cache;
+	}
+
 	/* (non-Javadoc)
 	 * @see org.eclipse.equinox.internal.p2.ui.model.IIUElement#shouldShowChildren()
 	 */
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
index 146e4b1..b4e2173 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/MetadataRepositoryElement.java
@@ -37,6 +37,7 @@ public class MetadataRepositoryElement extends RootElement implements IRepositor
 	URI location;
 	boolean isEnabled;
 	String name;
+	Object[] cache;
 
 	public MetadataRepositoryElement(Object parent, URI location, boolean isEnabled) {
 		this(parent, null, null, location, isEnabled);
@@ -64,6 +65,9 @@ public class MetadataRepositoryElement extends RootElement implements IRepositor
 	}
 
 	protected Object[] fetchChildren(Object o, IProgressMonitor monitor) {
+		if (cache != null)
+			return cache;
+
 		SubMonitor sub = SubMonitor.convert(monitor, 200);
 		// Ensure the repository is loaded using the monitor, so we respond to cancelation.
 		// Otherwise, a non-loaded repository could be loaded in the query provider without a monitor.
@@ -71,12 +75,13 @@ public class MetadataRepositoryElement extends RootElement implements IRepositor
 		try {
 			getMetadataRepository(sub.newChild(100));
 			//only invoke super if we successfully loaded the repository
-			return super.fetchChildren(o, sub.newChild(100));
+			cache = super.fetchChildren(o, sub.newChild(100));
 		} catch (ProvisionException e) {
 			getProvisioningUI().getRepositoryTracker().reportLoadFailure(location, e);
 			// TODO see https://bugs.eclipse.org/bugs/show_bug.cgi?id=276784
-			return new Object[] {new EmptyElementExplanation(this, IStatus.ERROR, e.getLocalizedMessage(), "")}; //$NON-NLS-1$
+			cache = new Object[] {new EmptyElementExplanation(this, IStatus.ERROR, e.getLocalizedMessage(), "")}; //$NON-NLS-1$
 		}
+		return cache;
 	}
 
 	protected String getImageId(Object obj) {
commit ce8ec364c1523fc55b666f134a7bbf8fe044c65f
Author: Pascal Rapicault <pascal.rapicault@ericsson.com>
Date:   Fri Apr 4 12:44:55 2014 -0400

    Bug 384646 - [ui] 'type filter text' box searches hangs
    
    When repo is loaded for the first time, pre-populate the cache for the
    categories.
    
    Signed-off-by: Pascal Rapicault <pascal.rapicault@ericsson.com>

5	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/RemoteQueriedElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/RemoteQueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/RemoteQueriedElement.java
index 65e39d2..f2c19d9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/RemoteQueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/RemoteQueriedElement.java
@@ -32,7 +32,11 @@ public abstract class RemoteQueriedElement extends QueriedElement implements IDe
 	public void fetchDeferredChildren(Object o, IElementCollector collector, IProgressMonitor monitor) {
 		try {
 			Object[] children = fetchChildren(o, monitor);
-
+			for (Object child : children) {
+				if (child instanceof CategoryElement) {
+					((CategoryElement) child).fetchChildren(child, monitor);
+				}
+			}
 			if (!monitor.isCanceled()) {
 				collector.add(children, monitor);
 			}
@@ -40,7 +44,6 @@ public abstract class RemoteQueriedElement extends QueriedElement implements IDe
 			// Nothing to do
 		}
 		collector.done();
-
 	}
 
 	public ISchedulingRule getRule(Object object) {
commit 8d4de6a6810d18c22353e0cd93d1834719fd0d80
Author: Pascal Rapicault <pascal.rapicault@ericsson.com>
Date:   Fri Apr 4 12:47:00 2014 -0400

    Bug 384646 - [ui] 'type filter text' box searches hangs
    
    Always force the loading of the repository in the background (even when
    it has already obtained from the remote location) which allows to
    initialize the category cache while outside of the UI loop.
    
    Signed-off-by: Pascal Rapicault <pascal.rapicault@ericsson.com>

4	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
6	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/DeferredQueryContentProvider.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
index 2ae9665..b0fa3fa 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/QueriedElement.java
@@ -34,7 +34,8 @@ public abstract class QueriedElement extends ProvElement {
 	// that want to eliminate duplicates from the parent hierarchy.
 	// This cache is *not* used as a general purpose child cache.
 	private Collection<?> cachedChildren;
-
+	private static final Object[] EMPTY= new Object[0];
+	
 	protected QueriedElement(Object parent) {
 		super(parent);
 	}
@@ -158,6 +159,8 @@ public abstract class QueriedElement extends ProvElement {
 	}
 
 	public Object[] getCachedChildren() {
+		if (cachedChildren == null)
+			return EMPTY;
 		return cachedChildren.toArray();
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/DeferredQueryContentProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/DeferredQueryContentProvider.java
index 1e77c1f..485e635 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/DeferredQueryContentProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/DeferredQueryContentProvider.java
@@ -14,8 +14,7 @@ package org.eclipse.equinox.internal.p2.ui.viewers;
 import java.util.HashMap;
 import java.util.HashSet;
 import org.eclipse.core.runtime.ListenerList;
-import org.eclipse.equinox.internal.p2.ui.model.QueriedElement;
-import org.eclipse.equinox.internal.p2.ui.model.RemoteQueriedElement;
+import org.eclipse.equinox.internal.p2.ui.model.*;
 import org.eclipse.jface.viewers.AbstractTreeViewer;
 import org.eclipse.jface.viewers.Viewer;
 
@@ -109,12 +108,13 @@ public class DeferredQueryContentProvider extends ProvElementContentProvider {
 			// We rely on the assumption that the queryable is the most expensive
 			// thing to get vs. the query itself being expensive.
 			// (loading a repo vs. querying a repo afterward)
-			if (element.hasQueryable())
+			if (manager != null && !synchronous && (element instanceof MetadataRepositoryElement || element instanceof MetadataRepositories)) {
+				if (element.getCachedChildren().length == 0)
+					return manager.getChildren(element);
 				return element.getChildren(element);
-
-			if (manager != null && !synchronous) {
-				return manager.getChildren(parent);
 			}
+			if (element.hasQueryable())
+				return element.getChildren(element);
 		}
 		return super.getChildren(parent);
 	}
