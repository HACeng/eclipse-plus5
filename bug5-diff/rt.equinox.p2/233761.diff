commit c7ad330fd7da103ba4e86fabb028f33517513b94
Author: John Arthorne <johna>
Date:   Wed May 28 20:36:21 2008 +0000

    Bug 233761 [ui] List of installed software is never filled

0	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
0	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
0	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
0	29	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
1	14	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/InstalledIUCollector.java
3	67	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/DeferredQueryContentProvider.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 57a81db..e20c652 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -124,8 +124,6 @@ public class ProvUIMessages extends NLS {
 	public static String AvailableIUGroup_RefreshOperationLabel;
 	public static String AvailableIUGroup_ViewByToolTipText;
 	public static String DeferredFetchFilteredTree_RetrievingList;
-	public static String DeferredQueryContentProvider_FetchJobName;
-	public static String DeferredQueryContentProvider_Pending;
 	public static String Label_Profiles;
 	public static String Label_Repositories;
 	public static String MetadataRepositoryElement_NotFound;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 9237648..4dc9b6d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -140,8 +140,6 @@ AvailableIUGroup_LoadingRepository=Loading {0}
 AvailableIUGroup_RefreshOperationLabel=Refresh
 AvailableIUGroup_ViewByToolTipText=View by
 DeferredFetchFilteredTree_RetrievingList=Retrieving List
-DeferredQueryContentProvider_FetchJobName=Fetching install information
-DeferredQueryContentProvider_Pending=Pending...
 Label_Profiles=All Software Profiles
 Label_Repositories=Known Repositories
 MetadataRepositoryElement_NotFound=This repository is currently not available.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
index 63c8261..6be8c7c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
@@ -98,8 +98,6 @@ public class InstalledIUGroup extends StructuredIUGroup {
 	Object getInput() {
 		ProfileElement element = new ProfileElement(profileId);
 		element.setQueryProvider(getQueryProvider());
-		// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-		element.preloadIUNamesWhileCollecting();
 		return element;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
index 6d42507..aae1bf8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/ProfileElement.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
-import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.RemoteQueriedElement;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -19,8 +18,6 @@ import org.eclipse.equinox.internal.provisional.p2.query.IQueryable;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUIImages;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.IQueryProvider;
-import org.eclipse.equinox.internal.provisional.p2.ui.query.ElementQueryDescriptor;
-import org.eclipse.equinox.internal.provisional.p2.ui.query.InstalledIUCollector;
 import org.eclipse.osgi.util.NLS;
 
 /**
@@ -32,9 +29,6 @@ import org.eclipse.osgi.util.NLS;
 public class ProfileElement extends RemoteQueriedElement {
 	String profileId;
 
-	// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-	private boolean queryChildNames = false;
-
 	public ProfileElement(String profileId) {
 		this.profileId = profileId;
 	}
@@ -89,27 +83,4 @@ public class ProfileElement extends RemoteQueriedElement {
 	public boolean isContainer() {
 		return super.getChildren(this).length > 0;
 	}
-
-	// Make these two methods public to fix
-	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-	public Object[] fetchChildren(Object o, IProgressMonitor monitor) {
-		if (queryChildNames) {
-			if (getQueryProvider() == null)
-				return new Object[0];
-			ElementQueryDescriptor queryDescriptor = getQueryProvider().getQueryDescriptor(this, getQueryType());
-			if (queryDescriptor == null || !isSufficientForQuery(queryDescriptor))
-				return new Object[0];
-			if (queryDescriptor.collector instanceof InstalledIUCollector)
-				((InstalledIUCollector) queryDescriptor.collector).fetchNamePropertyWhileCollecting();
-			queryDescriptor.queryable.query(queryDescriptor.query, queryDescriptor.collector, monitor);
-			return queryDescriptor.collector.toArray(Object.class);
-
-		}
-		return super.fetchChildren(o, monitor);
-	}
-
-	public void preloadIUNamesWhileCollecting() {
-		queryChildNames = true;
-	}
-
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/InstalledIUCollector.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/InstalledIUCollector.java
index 56161ea..c74352d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/InstalledIUCollector.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/query/InstalledIUCollector.java
@@ -24,9 +24,6 @@ import org.eclipse.equinox.internal.provisional.p2.ui.policy.IQueryProvider;
  */
 public class InstalledIUCollector extends QueriedElementCollector {
 
-	// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-	private boolean queryNameProperty = false;
-
 	public InstalledIUCollector(IQueryProvider queryProvider, IProfile profile, QueryContext queryContext) {
 		super(queryProvider, profile, queryContext);
 	}
@@ -41,20 +38,10 @@ public class InstalledIUCollector extends QueriedElementCollector {
 	public boolean accept(Object match) {
 		if (!(match instanceof IInstallableUnit))
 			return true;
-		if (queryable instanceof IProfile) {
-			// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-			// access the IU's name while collecting to prevent a later lockup in the UI thread.
-			if (queryNameProperty)
-				IUPropertyUtils.getIUProperty((IInstallableUnit) match, IInstallableUnit.PROP_NAME);
+		if (queryable instanceof IProfile)
 			return super.accept(new InstalledIUElement(((IProfile) queryable).getProfileId(), (IInstallableUnit) match));
-		}
 		// shouldn't happen, but is possible if a client reset the queryable to a non-profile.
 		return super.accept(match);
 	}
 
-	// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=232413
-	public void fetchNamePropertyWhileCollecting() {
-		this.queryNameProperty = true;
-	}
-
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/DeferredQueryContentProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/DeferredQueryContentProvider.java
index fa71b08..607d49e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/DeferredQueryContentProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/viewers/DeferredQueryContentProvider.java
@@ -13,18 +13,14 @@ package org.eclipse.equinox.internal.provisional.p2.ui.viewers;
 
 import java.util.HashMap;
 import java.util.HashSet;
-import org.eclipse.core.runtime.*;
-import org.eclipse.core.runtime.jobs.*;
-import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.core.runtime.ListenerList;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
 import org.eclipse.equinox.internal.p2.ui.model.RemoteQueriedElement;
 import org.eclipse.equinox.internal.p2.ui.viewers.DeferredQueryTreeContentManager;
 import org.eclipse.equinox.internal.p2.ui.viewers.DeferredQueryTreeListener;
-import org.eclipse.equinox.internal.provisional.p2.ui.model.ProfileElement;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.IQueryProvider;
 import org.eclipse.equinox.internal.provisional.p2.ui.query.QueriedElement;
 import org.eclipse.jface.viewers.*;
-import org.eclipse.swt.widgets.Display;
 
 /**
  * Content provider that retrieves children asynchronously where
@@ -44,11 +40,6 @@ public class DeferredQueryContentProvider implements ITreeContentProvider {
 	AbstractTreeViewer viewer = null;
 	ListenerList listeners = new ListenerList();
 	boolean synchronous = false;
-	TableViewer tableViewer = null;
-	Job profileFetchJob = null;
-	Display display = null;
-	String placeholder;
-	Object[] realChildren;
 
 	public DeferredQueryContentProvider(IQueryProvider queryProvider) {
 		this.queryProvider = queryProvider;
@@ -63,18 +54,11 @@ public class DeferredQueryContentProvider implements ITreeContentProvider {
 	}
 
 	public void inputChanged(Viewer v, Object oldInput, Object newInput) {
-		// cache display while in UI thread
-		display = v.getControl().getDisplay();
 		if (manager != null)
 			manager.cancel(oldInput);
-		if (profileFetchJob != null) {
-			profileFetchJob.cancel();
-			profileFetchJob = null;
-		}
 		if (v instanceof AbstractTreeViewer) {
 			manager = new DeferredQueryTreeContentManager((AbstractTreeViewer) v);
 			viewer = (AbstractTreeViewer) v;
-			tableViewer = null;
 			manager.setListener(new DeferredQueryTreeListener() {
 
 				public void fetchingDeferredChildren(Object parent, Object placeholder) {
@@ -85,11 +69,8 @@ public class DeferredQueryContentProvider implements ITreeContentProvider {
 					queryCompleted.add(parent);
 				}
 			});
-		} else {
+		} else
 			viewer = null;
-			if (v instanceof TableViewer)
-				tableViewer = (TableViewer) v;
-		}
 		alreadyQueried = new HashMap();
 		queryCompleted = new HashSet();
 		currentInput = newInput;
@@ -100,48 +81,7 @@ public class DeferredQueryContentProvider implements ITreeContentProvider {
 
 	}
 
-	public Object[] getElements(final Object input) {
-		if (input instanceof ProfileElement) {
-			if (profileFetchJob == null && tableViewer != null) {
-				final ProfileElement element = (ProfileElement) input;
-				element.setQueryProvider(queryProvider);
-				placeholder = ProvUIMessages.DeferredQueryContentProvider_Pending;
-				profileFetchJob = new Job(ProvUIMessages.DeferredQueryContentProvider_FetchJobName) {
-					public IStatus run(IProgressMonitor monitor) {
-						if (monitor.isCanceled())
-							return Status.CANCEL_STATUS;
-						realChildren = element.fetchChildren(input, monitor);
-						return Status.OK_STATUS;
-					}
-				};
-				profileFetchJob.addJobChangeListener(new JobChangeAdapter() {
-					public void done(IJobChangeEvent event) {
-						// whether finished or cancelled, get rid of the placeholder.
-						if (display == null || placeholder == null)
-							return;
-						final boolean addChildren = event.getResult().isOK();
-						display.asyncExec(new Runnable() {
-							public void run() {
-								if (!tableViewer.getControl().isDisposed()) {
-									tableViewer.remove(placeholder);
-									if (addChildren) {
-										tableViewer.add(realChildren);
-										// Set the selection explicitly so listeners can
-										// change their validation
-										tableViewer.setSelection(StructuredSelection.EMPTY);
-									}
-								}
-								placeholder = null;
-							}
-						});
-					}
-				});
-				profileFetchJob.schedule();
-				realChildren = new Object[] {placeholder};
-			}
-			// realChildren could contain the placeholder or the real stuff
-			return realChildren;
-		}
+	public Object[] getElements(Object input) {
 		if (input instanceof QueriedElement) {
 			QueriedElement element = (QueriedElement) input;
 			element.setQueryProvider(queryProvider);
@@ -154,10 +94,6 @@ public class DeferredQueryContentProvider implements ITreeContentProvider {
 		if (manager != null) {
 			manager.cancel(currentInput);
 		}
-		if (profileFetchJob != null) {
-			profileFetchJob.cancel();
-			profileFetchJob = null;
-		}
 	}
 
 	public Object getParent(Object child) {
