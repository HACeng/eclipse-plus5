commit 7cf6b2c269cf06efd1be324071128b325f096b09
Author: DJ Houghton <dj>
Date:   Wed Apr 13 16:47:31 2011 +0000

    Bug 342661 - compile warnings in official builds

1	2	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/spi/Memento.java
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/spi/Memento.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/spi/Memento.java
index 3b0ac09..501f04f 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/spi/Memento.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/spi/Memento.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2007, 2009 IBM Corporation and others.
+ * Copyright (c) 2007, 2011 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -16,7 +16,6 @@ import java.util.*;
  * @since 2.0
  */
 public final class Memento {
-	private static final long serialVersionUID = 3257399736837461585L;
 	private static final Collection<Class<?>> simples = Arrays.<Class<?>> asList(String.class, Integer.class, Long.class, Float.class, Double.class, Byte.class, Short.class, Character.class, Boolean.class);
 	private static final Collection<Class<?>> simpleArrays = Arrays.<Class<?>> asList(String[].class, Integer[].class, Long[].class, Float[].class, Double[].class, Byte[].class, Short[].class, Character[].class, Boolean[].class);
 	private static final Collection<Class<?>> primitiveArrays = Arrays.<Class<?>> asList(long[].class, int[].class, short[].class, char[].class, byte[].class, double[].class, float[].class, boolean[].class);
commit e111a861d94548b95c56a274033a948982ce5910
Author: DJ Houghton <dj>
Date:   Wed Apr 13 17:02:07 2011 +0000

    Bug 342661 - compile warnings in official builds

2	1	bundles/org.eclipse.equinox.p2.artifact.repository/META-INF/MANIFEST.MF
2	1	bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
2	1	bundles/org.eclipse.equinox.p2.metadata/META-INF/MANIFEST.MF
2	1	bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
2	2	bundles/org.eclipse.equinox.p2.transport.ecf/src/org/eclipse/equinox/internal/p2/transport/ecf/RepositoryStatusHelper.java
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.artifact.repository/META-INF/MANIFEST.MF
index 5148f87..ba932cf 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/META-INF/MANIFEST.MF
@@ -21,7 +21,8 @@ Export-Package: org.eclipse.equinox.internal.p2.artifact.processing;x-friends:="
    org.eclipse.equinox.p2.directorywatcher,
    org.eclipse.equinox.p2.updatesite,
    org.eclipse.equinox.p2.publisher,
-   org.eclipse.equinox.p2.extensionlocation",
+   org.eclipse.equinox.p2.extensionlocation,
+   org.eclipse.equinox.p2.repository.tools",
  org.eclipse.equinox.internal.provisional.p2.artifact.repository.processing;
   x-friends:="org.eclipse.equinox.p2.artifact.processors,
    org.eclipse.equinox.p2.artifact.optimizers,
diff --git a/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
index b5f8fe5..dc3c9e2 100644
--- a/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.core/META-INF/MANIFEST.MF
@@ -40,7 +40,8 @@ Export-Package: org.eclipse.equinox.internal.p2.core;x-friends:="org.eclipse.equ
    org.eclipse.equinox.p2.ui.sdk.scheduler,
    org.eclipse.equinox.p2.updatechecker,
    org.eclipse.equinox.p2.updatechecker.app,
-   org.eclipse.equinox.p2.updatesite",
+   org.eclipse.equinox.p2.updatesite,
+   org.eclipse.equinox.p2.transport.ecf",
  org.eclipse.equinox.internal.provisional.p2.core.eventbus;
   x-friends:="org.eclipse.equinox.p2.artifact.repository,
    org.eclipse.equinox.p2.director,
diff --git a/bundles/org.eclipse.equinox.p2.metadata/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.metadata/META-INF/MANIFEST.MF
index 6692bd1..04056a5 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.metadata/META-INF/MANIFEST.MF
@@ -41,7 +41,8 @@ Export-Package: org.eclipse.equinox.internal.p2.metadata;
    org.eclipse.equinox.p2.ui,
    org.eclipse.equinox.p2.operations,
    org.eclipse.equinox.p2.tests,
-   org.eclipse.equinox.p2.touchpoint.eclipse",
+   org.eclipse.equinox.p2.touchpoint.eclipse,
+   org.eclipse.equinox.p2.ui.importexport",
  org.eclipse.equinox.internal.p2.metadata.query;
   x-friends:="org.eclipse.equinox.p2.artifact.optimizers,
    org.eclipse.equinox.p2.artifact.processors,
diff --git a/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
index 3f3d749..692c9c6 100644
--- a/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.repository/META-INF/MANIFEST.MF
@@ -16,7 +16,8 @@ Export-Package: org.eclipse.equinox.internal.p2.persistence;
   x-friends:="org.eclipse.equinox.p2.artifact.repository,
    org.eclipse.equinox.p2.metadata.repository,
    org.eclipse.equinox.p2.updatesite,
-   org.eclipse.equinox.p2.repository.tools",
+   org.eclipse.equinox.p2.repository.tools,
+   org.eclipse.equinox.p2.transport.ecf",
  org.eclipse.equinox.internal.p2.repository.helpers;
   x-friends:="org.eclipse.equinox.p2.artifact.repository,
    org.eclipse.equinox.p2.exemplarysetup,
diff --git a/bundles/org.eclipse.equinox.p2.transport.ecf/src/org/eclipse/equinox/internal/p2/transport/ecf/RepositoryStatusHelper.java b/bundles/org.eclipse.equinox.p2.transport.ecf/src/org/eclipse/equinox/internal/p2/transport/ecf/RepositoryStatusHelper.java
index f2fb848..e7813aa 100644
--- a/bundles/org.eclipse.equinox.p2.transport.ecf/src/org/eclipse/equinox/internal/p2/transport/ecf/RepositoryStatusHelper.java
+++ b/bundles/org.eclipse.equinox.p2.transport.ecf/src/org/eclipse/equinox/internal/p2/transport/ecf/RepositoryStatusHelper.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009 Cloudsmith Inc, and other.
+ * Copyright (c) 2009, 2011 Cloudsmith Inc, and other.
  * The code, documentation and other materials contained herein have been
  * licensed under the Eclipse Public License - v 1.0 by the individual
  * copyright holders listed above, as Initial Contributors under such license.
@@ -7,6 +7,7 @@
  * Contributors:
  * 	Cloudsmith Inc. - Initial API and implementation
  *  IBM Corporation - Original Implementation of checkPermissionDenied
+ *  IBM Corportaion - Ongoing development
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.transport.ecf;
 
@@ -32,7 +33,6 @@ import org.eclipse.osgi.util.NLS;
  */
 public abstract class RepositoryStatusHelper {
 
-	private static final long serialVersionUID = 1L;
 	protected static final String SERVER_REDIRECT = "Server redirected too many times"; //$NON-NLS-1$
 
 	public static IStatus createStatus(String nlsMessage, Object arg) {
commit c8c6bdf01195e7e130d407f51db5b1999be516bc
Author: DJ Houghton <dj>
Date:   Wed Apr 13 17:14:52 2011 +0000

    Bug 342661 - compile warnings in official builds

3	2	bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/MirrorApplication.java
3	3	bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/RecreateRepositoryApplication.java
3	2	bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/analyzer/HostCheckAnalyzer.java
diff --git a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/MirrorApplication.java b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/MirrorApplication.java
index 327ea2a..10aebd4 100644
--- a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/MirrorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/MirrorApplication.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2010 IBM Corporation and others.
+ * Copyright (c) 2009, 2011 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -325,7 +325,7 @@ public class MirrorApplication extends AbstractApplication implements IApplicati
 
 	private IQueryable<IInstallableUnit> performResolution(IProgressMonitor monitor) throws ProvisionException {
 		IProfileRegistry registry = Activator.getProfileRegistry();
-		String profileId = "MirrorApplication-" + System.currentTimeMillis();
+		String profileId = "MirrorApplication-" + System.currentTimeMillis(); //$NON-NLS-1$
 		IProfile profile = registry.addProfile(profileId, slicingOptions.getFilter());
 		IPlanner planner = (IPlanner) Activator.getAgent().getService(IPlanner.SERVICE_NAME);
 		if (planner == null)
@@ -334,6 +334,7 @@ public class MirrorApplication extends AbstractApplication implements IApplicati
 		pcr.addAll(sourceIUs);
 		IProvisioningPlan plan = planner.getProvisioningPlan(pcr, null, monitor);
 		registry.removeProfile(profileId);
+		@SuppressWarnings("unchecked")
 		IQueryable<IInstallableUnit>[] arr = new IQueryable[plan.getInstallerPlan() == null ? 1 : 2];
 		arr[0] = plan.getAdditions();
 		if (plan.getInstallerPlan() != null)
diff --git a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/RecreateRepositoryApplication.java b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/RecreateRepositoryApplication.java
index bd2a2b8..7aea221 100644
--- a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/RecreateRepositoryApplication.java
+++ b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/RecreateRepositoryApplication.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009 IBM Corporation and others.
+ * Copyright (c) 2009, 2011 IBM Corporation and others.
  * All rights reserved. This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License v1.0
  * which accompanies this distribution, and is available at
@@ -127,11 +127,11 @@ public class RecreateRepositoryApplication extends AbstractApplication {
 					unpackedSize = size;
 				}
 
-				repository.addDescriptor(newDescriptor);
+				repository.addDescriptor(newDescriptor, null);
 			}
 			if (packFile != null && !files.contains(packFile) && packFile.length() > 0) {
 				ArtifactDescriptor packDescriptor = createPack200ArtifactDescriptor(key, packFile, unpackedSize);
-				repository.addDescriptor(packDescriptor);
+				repository.addDescriptor(packDescriptor, null);
 			}
 		}
 	}
diff --git a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/analyzer/HostCheckAnalyzer.java b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/analyzer/HostCheckAnalyzer.java
index 4930df9..51c2640 100644
--- a/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/analyzer/HostCheckAnalyzer.java
+++ b/bundles/org.eclipse.equinox.p2.repository.tools/src/org/eclipse/equinox/p2/internal/repository/tools/analyzer/HostCheckAnalyzer.java
@@ -1,11 +1,12 @@
 /******************************************************************************* 
-* Copyright (c) 2009 EclipseSource and others. All rights reserved. This
+* Copyright (c) 2009, 2011 EclipseSource and others. All rights reserved. This
 * program and the accompanying materials are made available under the terms of
 * the Eclipse Public License v1.0 which accompanies this distribution, and is
 * available at http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   EclipseSource - initial API and implementation
+*   IBM Corporation - Ongoing development
 ******************************************************************************/
 package org.eclipse.equinox.p2.internal.repository.tools.analyzer;
 
@@ -34,7 +35,7 @@ public class HostCheckAnalyzer extends IUAnalyzer {
 			for (IRequirement req : hosts) {
 				IMatchExpression<IInstallableUnit> hostMatch = req.getMatches();
 				String namespace = RequiredCapability.extractNamespace(hostMatch);
-				if ("osgi.bundle".equals(namespace)) {
+				if ("osgi.bundle".equals(namespace)) { //$NON-NLS-1$
 					String name = RequiredCapability.extractName(hostMatch);
 					VersionRange range = RequiredCapability.extractRange(hostMatch);
 					IQueryResult<IInstallableUnit> results = repository.query(QueryUtil.createIUQuery(name, range), new NullProgressMonitor());
commit 74a4fc52f1bcb8332461bc7358a89847ed82ab7e
Author: DJ Houghton <dj>
Date:   Wed Apr 13 17:39:17 2011 +0000

    Bug 342661 - compile warnings in official builds

5	2	bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/AbstractPage.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/AbstractPage.java b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/AbstractPage.java
index eecda9a..378e5a4 100644
--- a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/AbstractPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/AbstractPage.java
@@ -7,6 +7,7 @@
  * 
  * Contributors:
  *     WindRiver Corporation - initial API and implementation
+ *     IBM Corporation - Ongoing development
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.importexport.internal.wizard;
 
@@ -66,13 +67,15 @@ public abstract class AbstractPage extends WizardPage implements Listener {
 						ITableLabelProvider tableProvider = (ITableLabelProvider) baseLabel;
 						String e1p = tableProvider.getColumnText(e1, getSortColumn());
 						String e2p = tableProvider.getColumnText(e2, getSortColumn());
+						@SuppressWarnings("unchecked")
 						int result = getComparator().compare(e1p, e2p);
 						// Secondary column sort
 						if (result == 0) {
 							e1p = tableProvider.getColumnText(e1, lastSortColumn);
 							e2p = tableProvider.getColumnText(e2, lastSortColumn);
-							result = getComparator().compare(e1p, e2p);
-							return lastAscending ? result : (-1) * result;
+							@SuppressWarnings("unchecked")
+							int result2 = getComparator().compare(e1p, e2p);
+							return lastAscending ? result2 : (-1) * result2;
 						}
 						return isAscending() ? result : (-1) * result;
 					}
commit 6f04e7571ff2d690181740863a89a6e43a80221b
Author: DJ Houghton <dj>
Date:   Thu Apr 14 12:39:43 2011 +0000

    Bug 342661 - compile warnings in official builds

7	5	bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportPage.java
8	8	bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportWizard.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportPage.java b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportPage.java
index 785c37c..bb609a7 100644
--- a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportPage.java
@@ -7,6 +7,7 @@
  * 
  * Contributors:
  *     WindRiver Corporation - initial API and implementation
+ *     IBM Corporation - Ongoing development
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.importexport.internal.wizard;
 
@@ -45,6 +46,7 @@ public class ImportPage extends AbstractImportPage implements ISelectableIUsPage
 	private class InstallationContentProvider implements IStructuredContentProvider {
 
 		public void dispose() {
+			//
 		}
 
 		public Object[] getElements(Object inputElement) {
@@ -52,6 +54,7 @@ public class ImportPage extends AbstractImportPage implements ISelectableIUsPage
 		}
 
 		public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
+			//
 		}
 
 	}
@@ -285,11 +288,9 @@ public class ImportPage extends AbstractImportPage implements ISelectableIUsPage
 	public Object[] getChecked() {
 		if (Display.findDisplay(Thread.currentThread()) != null)
 			return viewer.getCheckedElements();
-		else {
-			GetCheckedElement get = new GetCheckedElement();
-			Display.getDefault().syncExec(get);
-			return get.checkedElements;
-		}
+		GetCheckedElement get = new GetCheckedElement();
+		Display.getDefault().syncExec(get);
+		return get.checkedElements;
 	}
 
 	public void recompute(IProgressMonitor monitor) throws InterruptedException {
@@ -327,6 +328,7 @@ public class ImportPage extends AbstractImportPage implements ISelectableIUsPage
 					}
 					if (sub2.isCanceled())
 						throw new InterruptedException();
+					@SuppressWarnings("unchecked")
 					Set<IInstallableUnit> result = new CompoundQueryable<IInstallableUnit>(repos.toArray(new IRepository[repos.size()])).query(QueryUtil.createIUQuery(feature.getIU().getId(), new VersionRange(feature.getIU().getVersion(), true, null, false)), sub2.newChild(100)).toSet();
 					List<IUDetail> existingFeatures = new ArrayList<IUDetail>(result.size());
 					for (IInstallableUnit iu : result) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportWizard.java b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportWizard.java
index 5201027..1fc36a8 100644
--- a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ImportWizard.java
@@ -7,6 +7,7 @@
  * 
  * Contributors:
  *     WindRiver Corporation - initial API and implementation
+ *     IBM Corporation - Ongoing development
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.importexport.internal.wizard;
 
@@ -51,8 +52,7 @@ public class ImportWizard extends InstallWizard implements IImportWizard {
 	}
 
 	@Override
-	protected ISelectableIUsPage createMainPage(IUElementListRoot input,
-			Object[] selections) {
+	protected ISelectableIUsPage createMainPage(IUElementListRoot input, Object[] selections) {
 		return new ImportPage(ui, this);
 	}
 
@@ -72,7 +72,7 @@ public class ImportWizard extends InstallWizard implements IImportWizard {
 		if (((ImportPage) mainPage).hasUnloadedRepo()) {
 			try {
 				runnableContext.run(true, true, new IRunnableWithProgress() {
-					public void run(IProgressMonitor monitor) throws InterruptedException {						
+					public void run(IProgressMonitor monitor) throws InterruptedException {
 						SubMonitor sub = SubMonitor.convert(monitor, 1000);
 						((ImportPage) mainPage).recompute(sub.newChild(800));
 						if (sub.isCanceled())
@@ -84,7 +84,7 @@ public class ImportWizard extends InstallWizard implements IImportWizard {
 								initializeResolutionModelElements(getOperationSelections());
 								if (planSelections.length == 0) {
 									operation = null;
-									couldNotResolve(ProvUIMessages.ResolutionWizardPage_NoSelections);
+									unableToResolve(ProvUIMessages.ResolutionWizardPage_NoSelections);
 								} else {
 									operation = getProfileChangeOperation(planSelections);
 									operation.setProvisioningContext(context);
@@ -99,20 +99,20 @@ public class ImportWizard extends InstallWizard implements IImportWizard {
 							public void run() {
 								planChanged();
 							}
-						});						
+						});
 					}
-				});				
+				});
 			} catch (InterruptedException e) {
 				// Nothing to report if thread was interrupted
 			} catch (InvocationTargetException e) {
 				ProvUI.handleException(e.getCause(), null, StatusManager.SHOW | StatusManager.LOG);
-				couldNotResolve(null);
+				unableToResolve(null);
 			}
 		} else
 			super.recomputePlan(runnableContext);
 	}
 
-	void couldNotResolve(String message) {
+	void unableToResolve(String message) {
 		IStatus couldNotResolveStatus;
 		if (message != null) {
 			couldNotResolveStatus = new Status(IStatus.ERROR, Constants.Bundle_ID, message, null);
