commit 29c8f8fa5e26bc036946b703cfa3ed4b06b3ce89
Author: Susan Franklin <sfranklin>
Date:   Wed Nov 7 23:13:14 2007 +0000

    Bug 208111 - [prov] [ui] clean up colocated repo code

0	75	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationGroup.java
48	9	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationPropertyPage.java
2	2	bundles/org.eclipse.equinox.p2.ui.sdk/plugin.xml
59	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
7	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
150	15	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
7	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
0	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
0	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
0	51	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryInfo.java
0	36	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryUtil.java
0	59	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/AddColocatedRepositoryDialog.java
0	212	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryManipulatorGroup.java
0	29	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryPropertyPage.java
0	103	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryGroup.java
60	23	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryPropertyPage.java
5	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/AddColocatedRepositoryOperation.java
6	8	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/RemoveColocatedRepositoryOperation.java
0	62	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ColocatedRepositoryLabelProvider.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationGroup.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationGroup.java
deleted file mode 100644
index eabd3c4..0000000
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationGroup.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
-
-import java.util.Map;
-import org.eclipse.equinox.internal.p2.ui.admin.ProvAdminUIMessages;
-import org.eclipse.equinox.p2.core.repository.IRepository;
-import org.eclipse.equinox.p2.ui.dialogs.RepositoryGroup;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.events.ModifyListener;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.widgets.*;
-
-/**
- * A RepositoryGroup is a reusable UI component that allows repository
- * attributes to be displayed and edited in different UI dialogs.
- * 
- * @since 3.4
- * 
- */
-public class RepositoryImplementationGroup extends RepositoryGroup {
-
-	Table propertiesTable;
-
-	public RepositoryImplementationGroup(final Composite parent, IRepository repository, ModifyListener listener) {
-		super(parent, repository, listener);
-	}
-
-	protected Composite createGroupComposite(final Composite parent, ModifyListener listener) {
-		Composite comp = super.createGroupComposite(parent, listener);
-		Label propertiesLabel = new Label(comp, SWT.NONE);
-		propertiesLabel.setText(ProvAdminUIMessages.RepositoryGroup_PropertiesLabel);
-		GridData data = new GridData(GridData.FILL_HORIZONTAL);
-		data.horizontalSpan = 2;
-		propertiesLabel.setLayoutData(data);
-
-		propertiesTable = new Table(comp, SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
-		data = new GridData(GridData.FILL_BOTH);
-		data.horizontalSpan = 2;
-		data.grabExcessVerticalSpace = true;
-		propertiesTable.setLayoutData(data);
-		propertiesTable.setHeaderVisible(true);
-		TableColumn nameColumn = new TableColumn(propertiesTable, SWT.NONE);
-		nameColumn.setText(ProvAdminUIMessages.RepositoryGroup_NameColumnLabel);
-		TableColumn valueColumn = new TableColumn(propertiesTable, SWT.NONE);
-		valueColumn.setText(ProvAdminUIMessages.RepositoryGroup_ValueColumnLabel);
-
-		initializeTable();
-
-		nameColumn.pack();
-		valueColumn.pack();
-		return comp;
-	}
-
-	private void initializeTable() {
-		if (getRepository() != null) {
-			Map repoProperties = getRepository().getProperties();
-			if (repoProperties != null) {
-				String[] propNames = (String[]) repoProperties.keySet().toArray(new String[repoProperties.size()]);
-				for (int i = 0; i < propNames.length; i++) {
-					TableItem item = new TableItem(propertiesTable, SWT.NULL);
-					item.setText(new String[] {propNames[i], repoProperties.get(propNames[i]).toString()});
-				}
-			}
-		}
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationPropertyPage.java
index 7e0eda2..5cbf7f8 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/RepositoryImplementationPropertyPage.java
@@ -10,11 +10,12 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
 
-import org.eclipse.equinox.p2.ui.dialogs.RepositoryGroup;
+import java.util.Map;
+import org.eclipse.equinox.internal.p2.ui.admin.ProvAdminUIMessages;
 import org.eclipse.equinox.p2.ui.dialogs.RepositoryPropertyPage;
-import org.eclipse.swt.events.ModifyEvent;
-import org.eclipse.swt.events.ModifyListener;
-import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.widgets.*;
 
 /**
  * PropertyPage that shows a repository's properties
@@ -23,11 +24,49 @@ import org.eclipse.swt.widgets.Composite;
  */
 public class RepositoryImplementationPropertyPage extends RepositoryPropertyPage {
 
-	protected RepositoryGroup createRepositoryGroup(Composite parent) {
-		return new RepositoryImplementationGroup(parent, getRepository(), new ModifyListener() {
-			public void modifyText(ModifyEvent event) {
-				verifyComplete();
+	private Table propertiesTable;
+
+	protected Control createContents(Composite parent) {
+		Control control = super.createContents(parent);
+		if (control instanceof Composite) {
+			Composite comp = (Composite) control;
+			Label propertiesLabel = new Label(comp, SWT.NONE);
+			propertiesLabel.setText(ProvAdminUIMessages.RepositoryGroup_PropertiesLabel);
+			GridData data = new GridData(GridData.FILL_HORIZONTAL);
+			data.horizontalSpan = 2;
+			propertiesLabel.setLayoutData(data);
+
+			propertiesTable = new Table(comp, SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
+			data = new GridData(GridData.FILL_BOTH);
+			data.horizontalSpan = 2;
+			data.grabExcessVerticalSpace = true;
+			propertiesTable.setLayoutData(data);
+			propertiesTable.setHeaderVisible(true);
+			TableColumn nameColumn = new TableColumn(propertiesTable, SWT.NONE);
+			nameColumn.setText(ProvAdminUIMessages.RepositoryGroup_NameColumnLabel);
+			TableColumn valueColumn = new TableColumn(propertiesTable, SWT.NONE);
+			valueColumn.setText(ProvAdminUIMessages.RepositoryGroup_ValueColumnLabel);
+
+			initializeTable();
+
+			nameColumn.pack();
+			valueColumn.pack();
+		}
+		return control;
+
+	}
+
+	private void initializeTable() {
+		if (getRepository() != null) {
+			Map repoProperties = getRepository().getProperties();
+			if (repoProperties != null) {
+				String[] propNames = (String[]) repoProperties.keySet().toArray(new String[repoProperties.size()]);
+				for (int i = 0; i < propNames.length; i++) {
+					TableItem item = new TableItem(propertiesTable, SWT.NULL);
+					item.setText(new String[] {propNames[i], repoProperties.get(propNames[i]).toString()});
+				}
 			}
-		});
+		}
 	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/plugin.xml b/bundles/org.eclipse.equinox.p2.ui.sdk/plugin.xml
index 9d6b49c..899815f 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/plugin.xml
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/plugin.xml
@@ -31,8 +31,8 @@
       
       <page
             name="%Repository.name"
-            class="org.eclipse.equinox.p2.ui.dialogs.ColocatedRepositoryPropertyPage"
-            id="org.eclipse.equinox.internal.p2.ui.sdk.ColocatedRepositoryPropertyPage">
+            class="org.eclipse.equinox.p2.ui.dialogs.RepositoryPropertyPage"
+            id="org.eclipse.equinox.internal.p2.ui.sdk.RepositoryPropertyPage">
             <enabledWhen>
              <instanceof
                   value="org.eclipse.equinox.p2.metadata.repository.IMetadataRepository">
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
new file mode 100644
index 0000000..5d44454
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
@@ -0,0 +1,59 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.ui.sdk;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+import org.eclipse.equinox.p2.core.repository.IRepository;
+import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.dialogs.AddRepositoryDialog;
+import org.eclipse.equinox.p2.ui.operations.AddColocatedRepositoryOperation;
+import org.eclipse.equinox.p2.ui.operations.ProvisioningOperation;
+import org.eclipse.swt.widgets.Shell;
+
+/**
+ * Dialog that allows colocated metadata and artifact repositories
+ * to be defined and added.
+ * 
+ * @since 3.4
+ * 
+ */
+public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
+
+	public AddColocatedRepositoryDialog(Shell parentShell, IRepository[] knownRepositories) {
+		super(parentShell, knownRepositories);
+
+	}
+
+	protected ProvisioningOperation getOperation(URL url) {
+		return new AddColocatedRepositoryOperation(getShell().getText(), url);
+	}
+
+	protected URL makeRepositoryURL(String urlString) {
+		URL newURL;
+		try {
+			newURL = new URL(urlString);
+		} catch (MalformedURLException e) {
+			// TODO need friendlier user message rather than just reporting exception
+			ProvUI.handleException(e, ProvSDKMessages.AddColocatedRepositoryDialog_InvalidURL);
+			return null;
+		}
+		String urlSpec = newURL.toExternalForm();
+		try {
+			if (!urlSpec.endsWith("/")) //$NON-NLS-1$
+				urlSpec += "/"; //$NON-NLS-1$
+			newURL = new URL(urlSpec);
+		} catch (MalformedURLException e) {
+			return null;
+		}
+		return newURL;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index 972f6f4..2261659 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -24,6 +24,13 @@ public class ProvSDKMessages extends NLS {
 		// load message values from bundle file
 		NLS.initializeMessages(BUNDLE_NAME, ProvSDKMessages.class);
 	}
+	public static String AddColocatedRepositoryDialog_InvalidURL;
+	public static String RepositoryManipulationDialog_AddButton;
+	public static String RepositoryManipulationDialog_LocationColumnHeader;
+	public static String RepositoryManipulationDialog_NameColumnHeader;
+	public static String RepositoryManipulationDialog_PropertiesButton;
+	public static String RepositoryManipulationDialog_RemoveButton;
+	public static String RepositoryManipulationDialog_RemoveOperationLabel;
 	public static String RepositoryManipulationDialog_UpdateSitesDialogTitle;
 	public static String UpdateAndInstallDialog_AvailableFeatures;
 	public static String UpdateAndInstallDialog_InstalledFeatures;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
index 803dd34..744f30c 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
@@ -10,15 +10,28 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.sdk;
 
-import org.eclipse.equinox.p2.ui.dialogs.ColocatedRepositoryManipulatorGroup;
-import org.eclipse.equinox.p2.ui.viewers.InternalRepositoryFilter;
+import java.util.List;
+import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
+import org.eclipse.equinox.p2.ui.ProvUIActivator;
+import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
+import org.eclipse.equinox.p2.ui.model.AllMetadataRepositories;
+import org.eclipse.equinox.p2.ui.model.MetadataRepositoryContentProvider;
+import org.eclipse.equinox.p2.ui.operations.RemoveColocatedRepositoryOperation;
+import org.eclipse.equinox.p2.ui.viewers.*;
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.action.IAction;
+import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.dialogs.TrayDialog;
-import org.eclipse.jface.resource.JFaceResources;
-import org.eclipse.jface.viewers.ViewerFilter;
-import org.eclipse.swt.graphics.FontMetrics;
-import org.eclipse.swt.graphics.GC;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.jface.window.SameShellProvider;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.DisposeEvent;
+import org.eclipse.swt.events.DisposeListener;
+import org.eclipse.swt.graphics.Point;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.dialogs.PropertyDialogAction;
 
 /**
  * Dialog that allows users to update, add, or remove repositories.
@@ -29,6 +42,10 @@ public class RepositoryManipulationDialog extends TrayDialog {
 
 	private final static int WIDTH_IN_DLUS = 480;
 	private final static int HEIGHT_IN_DLUS = 240;
+	private static final String BUTTONACTION = "buttonAction"; //$NON-NLS-1$
+
+	StructuredViewerProvisioningListener listener;
+	private TableViewer repositoryViewer;
 
 	/**
 	 * Create an instance of this Dialog.
@@ -44,14 +61,44 @@ public class RepositoryManipulationDialog extends TrayDialog {
 	}
 
 	protected Control createDialogArea(Composite parent) {
-		GC gc = new GC(parent);
-		gc.setFont(JFaceResources.getDialogFont());
-		FontMetrics fontMetrics = gc.getFontMetrics();
-		gc.dispose();
-
-		ColocatedRepositoryManipulatorGroup group = new ColocatedRepositoryManipulatorGroup(parent, new ViewerFilter[] {new InternalRepositoryFilter()}, WIDTH_IN_DLUS, HEIGHT_IN_DLUS, fontMetrics);
-		Dialog.applyDialogFont(group.getControl());
-		return group.getControl();
+		Composite composite = new Composite(parent, SWT.NONE);
+		composite.setLayoutData(new GridData(GridData.FILL_BOTH));
+
+		GridLayout layout = new GridLayout();
+		layout.numColumns = 2;
+		layout.marginWidth = convertHorizontalDLUsToPixels(2);
+		layout.marginHeight = convertVerticalDLUsToPixels(2);
+
+		composite.setLayout(layout);
+
+		// Table of available repositories
+		repositoryViewer = new TableViewer(composite, SWT.MULTI | SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
+		setTableColumns(repositoryViewer.getTable());
+		repositoryViewer.setContentProvider(new MetadataRepositoryContentProvider());
+		repositoryViewer.setInput(new AllMetadataRepositories());
+		repositoryViewer.setLabelProvider(new ProvElementLabelProvider());
+		repositoryViewer.setFilters(new ViewerFilter[] {new InternalRepositoryFilter()});
+
+		GridData data = new GridData(GridData.FILL_BOTH);
+		data.grabExcessHorizontalSpace = true;
+		data.grabExcessVerticalSpace = true;
+		data.widthHint = convertHorizontalDLUsToPixels(WIDTH_IN_DLUS);
+		data.heightHint = convertVerticalDLUsToPixels(HEIGHT_IN_DLUS);
+		repositoryViewer.getControl().setLayoutData(data);
+
+		// Vertical buttons
+		Composite verticalButtonBar = (Composite) createVerticalButtonBar(composite);
+		data = new GridData(GridData.FILL_VERTICAL);
+		verticalButtonBar.setLayoutData(data);
+		listener = new StructuredViewerProvisioningListener(repositoryViewer, StructuredViewerProvisioningListener.PROV_EVENT_REPOSITORY);
+		ProvUIActivator.getDefault().addProvisioningListener(listener);
+		composite.addDisposeListener(new DisposeListener() {
+			public void widgetDisposed(DisposeEvent event) {
+				ProvUIActivator.getDefault().removeProvisioningListener(listener);
+			}
+		});
+		Dialog.applyDialogFont(composite);
+		return composite;
 	}
 
 	/*
@@ -63,4 +110,92 @@ public class RepositoryManipulationDialog extends TrayDialog {
 		return true;
 	}
 
+	private Button createVerticalButton(Composite parent, String label, boolean defaultButton) {
+		Button button = new Button(parent, SWT.PUSH);
+		button.setText(label);
+
+		GridData data = setVerticalButtonLayoutData(button);
+		data.horizontalAlignment = GridData.FILL;
+
+		button.addListener(SWT.Selection, new Listener() {
+			public void handleEvent(Event event) {
+				verticalButtonPressed(event);
+			}
+		});
+		button.setToolTipText(label);
+		if (defaultButton) {
+			Shell shell = parent.getShell();
+			if (shell != null) {
+				shell.setDefaultButton(button);
+			}
+		}
+		return button;
+	}
+
+	void verticalButtonPressed(Event event) {
+		Object data = event.widget.getData(BUTTONACTION);
+		if (data == null || !(data instanceof IAction)) {
+			return;
+		}
+		IAction action = (IAction) data;
+		action.runWithEvent(event);
+	}
+
+	private GridData setVerticalButtonLayoutData(Button button) {
+		GridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
+		int widthHint = convertHorizontalDLUsToPixels(IDialogConstants.BUTTON_WIDTH);
+		Point minSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, true);
+		data.widthHint = Math.max(widthHint, minSize.x);
+		button.setLayoutData(data);
+		return data;
+	}
+
+	private void setTableColumns(Table table) {
+		table.setHeaderVisible(true);
+		String[] columnHeaders = {ProvSDKMessages.RepositoryManipulationDialog_NameColumnHeader, ProvSDKMessages.RepositoryManipulationDialog_LocationColumnHeader};
+		for (int i = 0; i < columnHeaders.length; i++) {
+			TableColumn tc = new TableColumn(table, SWT.NONE, i);
+			tc.setResizable(true);
+			tc.setText(columnHeaders[i]);
+			tc.setWidth(convertHorizontalDLUsToPixels(IDialogConstants.ENTRY_FIELD_WIDTH));
+		}
+	}
+
+	private Control createVerticalButtonBar(Composite parent) {
+		// Create composite.
+		Composite composite = new Composite(parent, SWT.NULL);
+
+		// create a layout with spacing and margins appropriate for the font
+		// size.
+		GridLayout layout = new GridLayout();
+		layout.numColumns = 1;
+		layout.marginWidth = 5;
+		layout.marginHeight = 0;
+		layout.horizontalSpacing = convertHorizontalDLUsToPixels(IDialogConstants.HORIZONTAL_SPACING);
+		layout.verticalSpacing = convertVerticalDLUsToPixels(IDialogConstants.VERTICAL_SPACING);
+		composite.setLayout(layout);
+
+		// Add the buttons to the button bar.
+		Button button = createVerticalButton(composite, ProvSDKMessages.RepositoryManipulationDialog_PropertiesButton, false);
+		button.setData(BUTTONACTION, new PropertyDialogAction(new SameShellProvider(parent.getShell()), repositoryViewer));
+		button = createVerticalButton(composite, ProvSDKMessages.RepositoryManipulationDialog_AddButton, false);
+		button.setData(BUTTONACTION, new Action() {
+			public void runWithEvent(Event event) {
+				new AddColocatedRepositoryDialog(getShell(), (IMetadataRepository[]) ((IStructuredContentProvider) repositoryViewer.getContentProvider()).getElements(null)).open();
+			}
+		});
+		button = createVerticalButton(composite, ProvSDKMessages.RepositoryManipulationDialog_RemoveButton, false);
+		button.setData(BUTTONACTION, new Action() {
+			public void runWithEvent(Event event) {
+				List selection = ((IStructuredSelection) repositoryViewer.getSelection()).toList();
+				IMetadataRepository[] repos = new IMetadataRepository[selection.size()];
+				for (int i = 0; i < repos.length; i++) {
+					repos[i] = (IMetadataRepository) selection.get(i);
+				}
+				RemoveColocatedRepositoryOperation op = new RemoveColocatedRepositoryOperation(ProvSDKMessages.RepositoryManipulationDialog_RemoveOperationLabel, repos);
+				ProvisioningOperationRunner.schedule(op, getShell());
+			}
+		});
+		return composite;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 03658bf..ad11b0e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -8,6 +8,7 @@
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
+AddColocatedRepositoryDialog_InvalidURL=The URL is not valid.
 UpdateAndInstallDialog_InstalledFeatures=&Installed Features
 UpdateAndInstallDialog_AvailableFeatures=&Available Features
 UpdateAndInstallDialog_AlertCheckbox=Alert me when updates are available
@@ -17,6 +18,12 @@ UpdateAndInstallDialog_ManageSites=&Manage sites...
 UpdateHandler_SDKUpdateUIMessageTitle=Software Updates
 UpdateHandler_NoProfilesDefined=There are no profiles defined.  Cannot invoke the update UI.
 UpdateHandler_NoProfileInstanceDefined=The software configuration could not be found.  Cannot invoke the update UI.
+RepositoryManipulationDialog_AddButton=&Add...
+RepositoryManipulationDialog_LocationColumnHeader=Location
+RepositoryManipulationDialog_NameColumnHeader=Name
+RepositoryManipulationDialog_PropertiesButton=Properties...
+RepositoryManipulationDialog_RemoveButton=&Remove
+RepositoryManipulationDialog_RemoveOperationLabel=Remove
 RepositoryManipulationDialog_UpdateSitesDialogTitle=Update Sites
 SchedulerStartup_day=Every day
 SchedulerStartup_Monday=Every Monday
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 066c32e..ee20cf8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -25,13 +25,8 @@ public class ProvUIMessages extends NLS {
 		NLS.initializeMessages(BUNDLE_NAME, ProvUIMessages.class);
 	}
 
-	public static String AddColocatedRepositoryDialog_InvalidURL;
 	public static String ApplyProfileChangesDialog_ApplyChanges;
 	public static String ChooseProfileDialog_DefaultDialogTitle;
-	public static String ColocatedRepositoryManipulatorGroup_Add;
-	public static String ColocatedRepositoryManipulatorGroup_LocationColumnHeader;
-	public static String ColocatedRepositoryManipulatorGroup_NameColumnHeader;
-	public static String ColocatedRepositoryManipulatorGroup_Remove;
 	public static String InstallDialog_InstallSelectionMessage;
 	public static String IUPropertiesGroup_CopyrightProperty;
 	public static String IUPropertiesGroup_DescriptionProperty;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 60f74b8..f364cf8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -84,11 +84,6 @@ UpdateOperation_NothingToUpdate=There is nothing to update.
 UpdateAndInstallGroup_Refresh=&Refresh
 ChooseProfileDialog_DefaultDialogTitle=Select a profile
 InstallDialog_InstallSelectionMessage=Select the items you wish to install.
-AddColocatedRepositoryDialog_InvalidURL=The URL is not valid.
-ColocatedRepositoryManipulatorGroup_Add=&Add...
-ColocatedRepositoryManipulatorGroup_Remove=&Remove
-ColocatedRepositoryManipulatorGroup_NameColumnHeader=Name
-ColocatedRepositoryManipulatorGroup_LocationColumnHeader=Location
 IUPropertiesGroup_DescriptionProperty=Description
 IUPropertiesGroup_CopyrightProperty=Copyright
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryInfo.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryInfo.java
deleted file mode 100644
index 1ce7641..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryInfo.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.equinox.p2.ui;
-
-import java.util.Map;
-import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
-import org.eclipse.equinox.spi.p2.core.repository.AbstractRepository;
-
-/**
- * Repository info for a colocated repository.
- * 
- * @since 3.4
- */
-public class ColocatedRepositoryInfo extends AbstractRepository {
-
-	private IMetadataRepository repo;
-
-	public ColocatedRepositoryInfo(IMetadataRepository repo) {
-		super(repo.getName(), repo.getType(), repo.getVersion(), ColocatedRepositoryUtil.makeColocatedRepositoryURL(repo.getLocation()), repo.getDescription(), repo.getProvider());
-		this.repo = repo;
-	}
-
-	public String getDescription() {
-		return repo.getDescription();
-	}
-
-	public String getName() {
-		return repo.getName();
-	}
-
-	public Map getProperties() {
-		return repo.getProperties();
-	}
-
-	public String getProvider() {
-		return repo.getProvider();
-	}
-
-	public Object getAdapter(Class adapter) {
-		return repo.getAdapter(adapter);
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryUtil.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryUtil.java
deleted file mode 100644
index a54ca12..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/ColocatedRepositoryUtil.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.equinox.p2.ui;
-
-import java.net.URL;
-
-/**
- * Utility methods for manipulating colocated repository URLS
- * 
- * @since 3.4
- */
-public class ColocatedRepositoryUtil {
-
-	public static URL makeArtifactRepositoryURL(URL url) {
-		return url;
-	}
-
-	public static URL makeMetadataRepositoryURL(URL url) {
-		return url;
-	}
-
-	// A colocated repository URL is one level above the metadata or artifact
-	// repository URL.  For example, foo/servers/ instead of foo/servers/metadataRepository
-	public static URL makeColocatedRepositoryURL(URL metadataURL) {
-		return metadataURL;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/AddColocatedRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/AddColocatedRepositoryDialog.java
deleted file mode 100644
index 83ddaa4..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/AddColocatedRepositoryDialog.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.ui.dialogs;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.core.repository.IRepository;
-import org.eclipse.equinox.p2.ui.ProvUI;
-import org.eclipse.equinox.p2.ui.operations.AddColocatedRepositoryOperation;
-import org.eclipse.equinox.p2.ui.operations.ProvisioningOperation;
-import org.eclipse.swt.widgets.Shell;
-
-/**
- * Dialog that allows colocated metadata and artifact repositories
- * to be defined and added.
- * 
- * @since 3.4
- * 
- */
-public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
-
-	public AddColocatedRepositoryDialog(Shell parentShell, IRepository[] knownRepositories) {
-		super(parentShell, knownRepositories);
-
-	}
-
-	protected ProvisioningOperation getOperation(URL url) {
-		return new AddColocatedRepositoryOperation(getShell().getText(), url);
-	}
-
-	protected URL makeRepositoryURL(String urlString) {
-		URL newURL;
-		try {
-			newURL = new URL(urlString);
-		} catch (MalformedURLException e) {
-			// TODO need friendlier user message rather than just reporting exception
-			ProvUI.handleException(e, ProvUIMessages.AddColocatedRepositoryDialog_InvalidURL);
-			return null;
-		}
-		String urlSpec = newURL.toExternalForm();
-		try {
-			if (!urlSpec.endsWith("/")) //$NON-NLS-1$
-				urlSpec += "/"; //$NON-NLS-1$
-			newURL = new URL(urlSpec);
-		} catch (MalformedURLException e) {
-			return null;
-		}
-		return newURL;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryManipulatorGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryManipulatorGroup.java
deleted file mode 100644
index 8b71e57..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryManipulatorGroup.java
+++ /dev/null
@@ -1,212 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.ui.dialogs;
-
-import java.util.List;
-import org.eclipse.core.runtime.Assert;
-import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
-import org.eclipse.equinox.p2.ui.ProvUIActivator;
-import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
-import org.eclipse.equinox.p2.ui.model.AllMetadataRepositories;
-import org.eclipse.equinox.p2.ui.model.MetadataRepositoryContentProvider;
-import org.eclipse.equinox.p2.ui.operations.RemoveColocatedRepositoryOperation;
-import org.eclipse.equinox.p2.ui.viewers.ColocatedRepositoryLabelProvider;
-import org.eclipse.equinox.p2.ui.viewers.StructuredViewerProvisioningListener;
-import org.eclipse.jface.action.Action;
-import org.eclipse.jface.action.IAction;
-import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.dialogs.IDialogConstants;
-import org.eclipse.jface.viewers.*;
-import org.eclipse.jface.window.SameShellProvider;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.events.DisposeEvent;
-import org.eclipse.swt.events.DisposeListener;
-import org.eclipse.swt.graphics.FontMetrics;
-import org.eclipse.swt.graphics.Point;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.dialogs.PropertyDialogAction;
-
-/**
- * Dialog group that shows installed IU's and allows user to update or search
- * for new ones.
- * 
- * @since 3.4
- */
-public class ColocatedRepositoryManipulatorGroup {
-
-	private static final String BUTTONACTION = "buttonAction"; //$NON-NLS-1$
-	TableViewer repositoryViewer;
-	private FontMetrics fm;
-	Display display;
-	StructuredViewerProvisioningListener listener;
-
-	/**
-	 * Create an instance of this group.
-	 * 
-	 */
-	public ColocatedRepositoryManipulatorGroup(Composite parent, ViewerFilter[] filters, int widthInDUs, int heightInDUs, FontMetrics fm) {
-
-		Assert.isNotNull(fm);
-		this.fm = fm;
-		this.display = parent.getDisplay();
-
-		Composite composite = new Composite(parent, SWT.NONE);
-		composite.setLayoutData(new GridData(GridData.FILL_BOTH));
-
-		GridLayout layout = new GridLayout();
-		layout.numColumns = 2;
-		layout.marginWidth = convertHorizontalDLUsToPixels(2);
-		layout.marginHeight = convertVerticalDLUsToPixels(2);
-
-		composite.setLayout(layout);
-
-		// Table of available repositories
-		repositoryViewer = new TableViewer(composite, SWT.MULTI | SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
-		setTableColumns(repositoryViewer.getTable());
-		repositoryViewer.setContentProvider(new MetadataRepositoryContentProvider());
-		repositoryViewer.setInput(new AllMetadataRepositories());
-		repositoryViewer.setLabelProvider(new ColocatedRepositoryLabelProvider());
-		if (filters != null) {
-			repositoryViewer.setFilters(filters);
-		}
-		GridData data = new GridData(GridData.FILL_BOTH);
-		data.grabExcessHorizontalSpace = true;
-		data.grabExcessVerticalSpace = true;
-		data.widthHint = convertHorizontalDLUsToPixels(widthInDUs);
-		data.heightHint = convertVerticalDLUsToPixels(heightInDUs);
-		repositoryViewer.getControl().setLayoutData(data);
-
-		// Vertical buttons
-		Composite buttonBar = (Composite) createVerticalButtonBar(composite);
-		data = new GridData(GridData.FILL_VERTICAL);
-		buttonBar.setLayoutData(data);
-		listener = new StructuredViewerProvisioningListener(repositoryViewer, StructuredViewerProvisioningListener.PROV_EVENT_REPOSITORY);
-		ProvUIActivator.getDefault().addProvisioningListener(listener);
-		composite.addDisposeListener(new DisposeListener() {
-			public void widgetDisposed(DisposeEvent event) {
-				ProvUIActivator.getDefault().removeProvisioningListener(listener);
-			}
-		});
-	}
-
-	public Control getControl() {
-		return repositoryViewer.getControl().getParent();
-	}
-
-	private Control createVerticalButtonBar(Composite parent) {
-		// Create composite.
-		Composite composite = new Composite(parent, SWT.NULL);
-
-		// create a layout with spacing and margins appropriate for the font
-		// size.
-		GridLayout layout = new GridLayout();
-		layout.numColumns = 1;
-		layout.marginWidth = 5;
-		layout.marginHeight = 0;
-		layout.horizontalSpacing = convertHorizontalDLUsToPixels(IDialogConstants.HORIZONTAL_SPACING);
-		layout.verticalSpacing = convertVerticalDLUsToPixels(IDialogConstants.VERTICAL_SPACING);
-		composite.setLayout(layout);
-
-		// Add the buttons to the button bar.
-		Button button = createVerticalButton(composite, ProvUIMessages.UpdateAndInstallGroup_Properties, false);
-		button.setData(BUTTONACTION, new PropertyDialogAction(new SameShellProvider(parent.getShell()), repositoryViewer));
-		button = createVerticalButton(composite, ProvUIMessages.ColocatedRepositoryManipulatorGroup_Add, false);
-		button.setData(BUTTONACTION, new Action() {
-			public void runWithEvent(Event event) {
-				new AddColocatedRepositoryDialog(getControl().getShell(), (IMetadataRepository[]) ((IStructuredContentProvider) repositoryViewer.getContentProvider()).getElements(null)).open();
-			}
-		});
-		button = createVerticalButton(composite, ProvUIMessages.ColocatedRepositoryManipulatorGroup_Remove, false);
-		button.setData(BUTTONACTION, new Action() {
-			public void runWithEvent(Event event) {
-				List selection = ((IStructuredSelection) repositoryViewer.getSelection()).toList();
-				IMetadataRepository[] repos = new IMetadataRepository[selection.size()];
-				for (int i = 0; i < repos.length; i++) {
-					repos[i] = (IMetadataRepository) selection.get(i);
-				}
-				RemoveColocatedRepositoryOperation op = new RemoveColocatedRepositoryOperation(ProvUIMessages.ColocatedRepositoryManipulatorGroup_Remove, repos);
-				ProvisioningOperationRunner.schedule(op, getControl().getShell());
-			}
-		});
-		return composite;
-	}
-
-	private Button createVerticalButton(Composite parent, String label, boolean defaultButton) {
-		Button button = new Button(parent, SWT.PUSH);
-		button.setText(label);
-
-		GridData data = setButtonLayoutData(button);
-		data.horizontalAlignment = GridData.FILL;
-
-		button.addListener(SWT.Selection, new Listener() {
-			public void handleEvent(Event event) {
-				verticalButtonPressed(event);
-			}
-		});
-		button.setToolTipText(label);
-		if (defaultButton) {
-			Shell shell = parent.getShell();
-			if (shell != null) {
-				shell.setDefaultButton(button);
-			}
-		}
-		return button;
-	}
-
-	void verticalButtonPressed(Event event) {
-		Object data = event.widget.getData(BUTTONACTION);
-		if (data == null || !(data instanceof IAction)) {
-			return;
-		}
-		IAction action = (IAction) data;
-		action.runWithEvent(event);
-	}
-
-	private GridData setButtonLayoutData(Button button) {
-		GridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
-		int widthHint = convertHorizontalDLUsToPixels(IDialogConstants.BUTTON_WIDTH);
-		Point minSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, true);
-		data.widthHint = Math.max(widthHint, minSize.x);
-		button.setLayoutData(data);
-		return data;
-	}
-
-	private int convertHorizontalDLUsToPixels(int dlus) {
-		// shouldn't happen
-		if (fm == null) {
-			return 0;
-		}
-		return Dialog.convertHorizontalDLUsToPixels(fm, dlus);
-	}
-
-	private int convertVerticalDLUsToPixels(int dlus) {
-		// shouldn't happen
-		if (fm == null) {
-			return 0;
-		}
-		return Dialog.convertVerticalDLUsToPixels(fm, dlus);
-	}
-
-	private void setTableColumns(Table table) {
-		table.setHeaderVisible(true);
-		String[] columnHeaders = {ProvUIMessages.ColocatedRepositoryManipulatorGroup_NameColumnHeader, ProvUIMessages.ColocatedRepositoryManipulatorGroup_LocationColumnHeader};
-		for (int i = 0; i < columnHeaders.length; i++) {
-			TableColumn tc = new TableColumn(table, SWT.NONE, i);
-			tc.setResizable(true);
-			tc.setText(columnHeaders[i]);
-			tc.setWidth(convertHorizontalDLUsToPixels(IDialogConstants.ENTRY_FIELD_WIDTH));
-		}
-	}
-
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryPropertyPage.java
deleted file mode 100644
index 223a5a9..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ColocatedRepositoryPropertyPage.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.ui.dialogs;
-
-import org.eclipse.equinox.p2.core.repository.IRepository;
-import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
-import org.eclipse.equinox.p2.ui.ColocatedRepositoryInfo;
-
-/**
- * PropertyPage that shows a repository's properties
- * 
- * @since 3.4
- */
-public class ColocatedRepositoryPropertyPage extends RepositoryPropertyPage {
-	protected IRepository getRepository() {
-		IRepository repo = super.getRepository();
-		if (repo instanceof IMetadataRepository)
-			return new ColocatedRepositoryInfo((IMetadataRepository) repo);
-		return repo;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryGroup.java
deleted file mode 100644
index f5de1ed..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryGroup.java
+++ /dev/null
@@ -1,103 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.ui.dialogs;
-
-import org.eclipse.core.runtime.*;
-import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.core.repository.IRepository;
-import org.eclipse.equinox.p2.ui.ProvUIActivator;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.events.ModifyListener;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.*;
-
-/**
- * A RepositoryGroup is a reusable UI component that allows repository
- * attributes to be displayed and edited in different UI dialogs.
- * 
- * @since 3.4
- * 
- */
-public class RepositoryGroup {
-
-	private Composite composite;
-	Text name;
-	Text url;
-	IRepository repository;
-
-	public RepositoryGroup(Composite parent, IRepository repository, ModifyListener listener) {
-		Assert.isNotNull(repository);
-		this.repository = repository;
-		createGroupComposite(parent, listener);
-	}
-
-	protected Composite createGroupComposite(final Composite parent, ModifyListener listener) {
-		Composite comp = new Composite(parent, SWT.NONE);
-		GridLayout layout = new GridLayout();
-		layout.numColumns = 2;
-		comp.setLayout(layout);
-		GridData data = new GridData();
-		data.widthHint = 350;
-		comp.setLayoutData(data);
-
-		Label nameLabel = new Label(comp, SWT.NONE);
-		nameLabel.setText(ProvUIMessages.RepositoryGroup_RepositoryNameFieldLabel);
-
-		name = new Text(comp, SWT.BORDER);
-		data = new GridData(GridData.FILL_HORIZONTAL);
-		name.setLayoutData(data);
-		name.setEditable(repository.isModifiable());
-
-		Label urlLabel = new Label(comp, SWT.NONE);
-		urlLabel.setText(ProvUIMessages.RepositoryGroup_RepositoryURLFieldLabel);
-		url = new Text(comp, SWT.BORDER);
-		url.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
-		url.setEditable(repository.isModifiable());
-
-		initializeFields();
-		return comp;
-	}
-
-	private void initializeFields() {
-		if (repository == null) {
-			url.setText("http://"); //$NON-NLS-1$
-		} else {
-			url.setText(repository.getLocation().toExternalForm());
-			name.setText(repository.getName());
-		}
-	}
-
-	public IStatus verify() {
-		if (url.getText().trim().length() == 0) {
-			return new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, 0, ProvUIMessages.RepositoryGroup_URLRequired, null);
-		}
-		return new Status(IStatus.OK, ProvUIActivator.PLUGIN_ID, IStatus.OK, "", null); //$NON-NLS-1$
-
-	}
-
-	/**
-	 * Get the url string as shown in the dialog.
-	 * 
-	 * @return the String representation of the URL.
-	 */
-	public String getURLString() {
-		return url.getText().trim();
-	}
-
-	public Composite getComposite() {
-		return composite;
-	}
-
-	protected IRepository getRepository() {
-		return repository;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryPropertyPage.java
index efa7752..2165317 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RepositoryPropertyPage.java
@@ -10,13 +10,12 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.dialogs;
 
-import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.core.repository.IRepository;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.swt.SWT;
-import org.eclipse.swt.events.ModifyEvent;
-import org.eclipse.swt.events.ModifyListener;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.dialogs.PropertyPage;
 
@@ -27,41 +26,79 @@ import org.eclipse.ui.dialogs.PropertyPage;
  */
 public class RepositoryPropertyPage extends PropertyPage {
 
-	IRepository repository;
-	private RepositoryGroup repoGroup;
+	private IRepository repository;
+	private Composite composite;
+	private Text name;
+	private Text url;
 
 	protected Control createContents(Composite parent) {
-		noDefaultAndApplyButton();
 		this.repository = getRepository();
-
 		if (repository == null) {
 			Label label = new Label(parent, SWT.DEFAULT);
 			label.setText(ProvUIMessages.RepositoryPropertyPage_NoRepoSelected);
+			return label;
+		}
+		if (!repository.isModifiable()) {
+			noDefaultAndApplyButton();
 		}
-		repoGroup = createRepositoryGroup(parent);
-		// exists
-		Dialog.applyDialogFont(repoGroup.getComposite());
+
+		composite = new Composite(parent, SWT.NONE);
+		GridLayout layout = new GridLayout();
+		layout.numColumns = 2;
+		composite.setLayout(layout);
+		GridData data = new GridData();
+		data.widthHint = 350;
+		composite.setLayoutData(data);
+
+		Label nameLabel = new Label(composite, SWT.NONE);
+		nameLabel.setText(ProvUIMessages.RepositoryGroup_RepositoryNameFieldLabel);
+
+		name = new Text(composite, SWT.BORDER);
+		data = new GridData(GridData.FILL_HORIZONTAL);
+		name.setLayoutData(data);
+		name.setEditable(repository.isModifiable());
+
+		Label urlLabel = new Label(composite, SWT.NONE);
+		urlLabel.setText(ProvUIMessages.RepositoryGroup_RepositoryURLFieldLabel);
+		url = new Text(composite, SWT.BORDER);
+		url.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		url.setEditable(false);
+
+		initializeFields();
+		Dialog.applyDialogFont(composite);
 		verifyComplete();
-		return repoGroup.getComposite();
+		return composite;
+	}
+
+	protected void verifyComplete() {
+		if (url.getText().trim().length() == 0) {
+			setValid(false);
+			setErrorMessage(ProvUIMessages.RepositoryGroup_URLRequired);
+		}
+		setValid(true);
+		setErrorMessage(null);
 	}
 
-	protected RepositoryGroup createRepositoryGroup(Composite parent) {
-		return new RepositoryGroup(parent, repository, new ModifyListener() {
-			public void modifyText(ModifyEvent event) {
-				verifyComplete();
-			}
-		});
+	public boolean performOk() {
+		if (repository.isModifiable()) {
+			repository.setName(name.getText().trim());
+		}
+		return super.performOk();
 	}
 
-	protected void verifyComplete() {
-		if (repoGroup == null) {
-			return;
+	private void initializeFields() {
+		if (repository == null) {
+			url.setText("http://"); //$NON-NLS-1$
+		} else {
+			url.setText(repository.getLocation().toExternalForm());
+			name.setText(repository.getName());
 		}
-		IStatus status = repoGroup.verify();
-		setValid(status.isOK());
 	}
 
 	protected IRepository getRepository() {
-		return (IRepository) getElement().getAdapter(IRepository.class);
+		if (repository == null) {
+			repository = (IRepository) getElement().getAdapter(IRepository.class);
+		}
+		return repository;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/AddColocatedRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/AddColocatedRepositoryOperation.java
index eeec342..9b7592e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/AddColocatedRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/AddColocatedRepositoryOperation.java
@@ -14,7 +14,6 @@ import java.net.URL;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.core.repository.IRepository;
-import org.eclipse.equinox.p2.ui.ColocatedRepositoryUtil;
 
 /**
  * Operation that adds colocated artifact and metadata repositories
@@ -32,15 +31,14 @@ public class AddColocatedRepositoryOperation extends RepositoryOperation {
 
 	protected IStatus doExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
 		for (int i = 0; i < urls.length; i++) {
-			URL metadataRepoURL = ColocatedRepositoryUtil.makeMetadataRepositoryURL(urls[i]);
-			IRepository repo = ProvisioningUtil.addMetadataRepository(metadataRepoURL, monitor);
+			IRepository repo = ProvisioningUtil.addMetadataRepository(urls[i], monitor);
 			if (repo == null) {
 				return failureStatus();
 			}
-			repo = ProvisioningUtil.addArtifactRepository(ColocatedRepositoryUtil.makeArtifactRepositoryURL(urls[i]), monitor);
+			repo = ProvisioningUtil.addArtifactRepository(urls[i], monitor);
 			if (repo == null) {
 				// remove the metadata repo we just added
-				ProvisioningUtil.removeMetadataRepository(metadataRepoURL, monitor);
+				ProvisioningUtil.removeMetadataRepository(urls[i], monitor);
 				return failureStatus();
 			}
 		}
@@ -50,8 +48,8 @@ public class AddColocatedRepositoryOperation extends RepositoryOperation {
 
 	protected IStatus doUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
 		for (int i = 0; i < urls.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(ColocatedRepositoryUtil.makeMetadataRepositoryURL(urls[i]), monitor);
-			ProvisioningUtil.removeArtifactRepository(ColocatedRepositoryUtil.makeArtifactRepositoryURL(urls[i]), monitor);
+			ProvisioningUtil.removeMetadataRepository(urls[i], monitor);
+			ProvisioningUtil.removeArtifactRepository(urls[i], monitor);
 		}
 		added = false;
 		return okStatus();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/RemoveColocatedRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/RemoveColocatedRepositoryOperation.java
index 01a01b67..9837aa9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/RemoveColocatedRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/RemoveColocatedRepositoryOperation.java
@@ -15,7 +15,6 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.core.repository.IRepository;
 import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
-import org.eclipse.equinox.p2.ui.ColocatedRepositoryUtil;
 
 /**
  * Operation that removes the colocated repositories with the given URLs. *
@@ -29,14 +28,14 @@ public class RemoveColocatedRepositoryOperation extends RepositoryOperation {
 	public RemoveColocatedRepositoryOperation(String label, IMetadataRepository[] repos) {
 		super(label, new URL[repos.length]);
 		for (int i = 0; i < repos.length; i++) {
-			urls[i] = ColocatedRepositoryUtil.makeColocatedRepositoryURL(repos[i].getLocation());
+			urls[i] = repos[i].getLocation();
 		}
 	}
 
 	protected IStatus doExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
 		for (int i = 0; i < urls.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(ColocatedRepositoryUtil.makeMetadataRepositoryURL(urls[i]), monitor);
-			ProvisioningUtil.removeArtifactRepository(ColocatedRepositoryUtil.makeArtifactRepositoryURL(urls[i]), monitor);
+			ProvisioningUtil.removeMetadataRepository(urls[i], monitor);
+			ProvisioningUtil.removeArtifactRepository(urls[i], monitor);
 		}
 		removed = true;
 		return okStatus();
@@ -62,15 +61,14 @@ public class RemoveColocatedRepositoryOperation extends RepositoryOperation {
 
 	protected IStatus doUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
 		for (int i = 0; i < urls.length; i++) {
-			URL metadataURL = ColocatedRepositoryUtil.makeMetadataRepositoryURL(urls[i]);
-			IRepository repo = ProvisioningUtil.addMetadataRepository(metadataURL, monitor);
+			IRepository repo = ProvisioningUtil.addMetadataRepository(urls[i], monitor);
 			if (repo == null) {
 				return failureStatus();
 			}
-			repo = ProvisioningUtil.addArtifactRepository(ColocatedRepositoryUtil.makeArtifactRepositoryURL(urls[i]), monitor);
+			repo = ProvisioningUtil.addArtifactRepository(urls[i], monitor);
 			if (repo == null) {
 				// remove the metadata repo we just added
-				ProvisioningUtil.removeMetadataRepository(metadataURL, monitor);
+				ProvisioningUtil.removeMetadataRepository(urls[i], monitor);
 				return failureStatus();
 			}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ColocatedRepositoryLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ColocatedRepositoryLabelProvider.java
deleted file mode 100644
index 5942e5a..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ColocatedRepositoryLabelProvider.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.equinox.p2.ui.viewers;
-
-import java.net.URL;
-import org.eclipse.core.runtime.IAdaptable;
-import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
-import org.eclipse.equinox.p2.ui.ColocatedRepositoryUtil;
-import org.eclipse.equinox.p2.ui.ProvUIImages;
-import org.eclipse.jface.viewers.ITableLabelProvider;
-import org.eclipse.jface.viewers.LabelProvider;
-import org.eclipse.swt.graphics.Image;
-
-/**
- * Label provider for colocated repositories.
- * 
- * @since 3.4
- */
-public class ColocatedRepositoryLabelProvider extends LabelProvider implements ITableLabelProvider {
-	final static int COLUMN_NAME = 0;
-	final static int COLUMN_LOCATION = 1;
-	final static String BLANK = ""; //$NON-NLS-1$
-
-	public String getColumnText(Object element, int columnIndex) {
-		IMetadataRepository repo = getRepository(element);
-		if (repo == null)
-			return BLANK;
-
-		switch (columnIndex) {
-			case COLUMN_NAME :
-				return repo.getName();
-			case COLUMN_LOCATION :
-				URL url = ColocatedRepositoryUtil.makeColocatedRepositoryURL(repo.getLocation());
-				return url.toExternalForm();
-		}
-		return BLANK;
-	}
-
-	public Image getColumnImage(Object element, int index) {
-		if (index == COLUMN_NAME && getRepository(element) != null) {
-			return ProvUIImages.getImage(ProvUIImages.IMG_METADATA_REPOSITORY);
-		}
-		return null;
-	}
-
-	private IMetadataRepository getRepository(Object element) {
-		if (element instanceof IMetadataRepository)
-			return (IMetadataRepository) element;
-		if (element instanceof IAdaptable)
-			return (IMetadataRepository) ((IAdaptable) element).getAdapter(IMetadataRepository.class);
-		return null;
-	}
-}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
index 48abe6c..fd8f4c7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
@@ -99,6 +99,9 @@ public class ProvElementLabelProvider extends LabelProvider implements ITableLab
 
 		switch (columnIndex) {
 			case 0 :
+				if (element instanceof IRepository) {
+					return ((IRepository) element).getName();
+				}
 				return getText(element);
 			case 1 :
 				if (element instanceof Profile) {
@@ -109,11 +112,7 @@ public class ProvElementLabelProvider extends LabelProvider implements ITableLab
 					return iu.getVersion().toString();
 				}
 				if (element instanceof IRepository) {
-					String name = ((IRepository) element).getName();
-					if (name != null && name.length() > 0) {
-						return ((IRepository) element).getLocation().toExternalForm();
-					}
-					return ((IRepository) element).getType();
+					return ((IRepository) element).getLocation().toExternalForm();
 				}
 				if (element instanceof IArtifactKey) {
 					IArtifactKey key = (IArtifactKey) element;
