commit d901bbc39b89d539c6d807ebc59c41e5ef8eb827
Author: ibull <>
Date:   Mon Mar 8 21:57:22 2010 +0000

    bug 302990: [api] Make VersionedID API
    https://bugs.eclipse.org/bugs/show_bug.cgi?id=302990

1	1	bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/DirectorApplication.java
1	1	bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
1	1	bundles/org.eclipse.equinox.p2.installer/src/org/eclipse/equinox/internal/p2/installer/InstallDescriptionParser.java
0	104	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/VersionedId.java
103	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
1	1	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
3	1	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
1	1	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
diff --git a/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/DirectorApplication.java b/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/DirectorApplication.java
index aca0bfb..b9551da 100644
--- a/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/DirectorApplication.java
+++ b/bundles/org.eclipse.equinox.p2.director.app/src/org/eclipse/equinox/internal/p2/director/app/DirectorApplication.java
@@ -23,7 +23,7 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.app.IApplicationContext;
 import org.eclipse.equinox.internal.p2.core.helpers.*;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.equinox.internal.provisional.p2.director.*;
 import org.eclipse.equinox.p2.core.*;
 import org.eclipse.equinox.p2.engine.*;
diff --git a/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java b/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
index 214c583..79fe4ca 100644
--- a/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
+++ b/bundles/org.eclipse.equinox.p2.director.app/src_ant/org/eclipse/equinox/p2/director/app/ant/DirectorTask.java
@@ -19,7 +19,7 @@ import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.URIUtil;
 import org.eclipse.equinox.app.IApplication;
 import org.eclipse.equinox.internal.p2.director.app.*;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.osgi.util.NLS;
 
 /**
diff --git a/bundles/org.eclipse.equinox.p2.installer/src/org/eclipse/equinox/internal/p2/installer/InstallDescriptionParser.java b/bundles/org.eclipse.equinox.p2.installer/src/org/eclipse/equinox/internal/p2/installer/InstallDescriptionParser.java
index d04733e..ed8e946 100644
--- a/bundles/org.eclipse.equinox.p2.installer/src/org/eclipse/equinox/internal/p2/installer/InstallDescriptionParser.java
+++ b/bundles/org.eclipse.equinox.p2.installer/src/org/eclipse/equinox/internal/p2/installer/InstallDescriptionParser.java
@@ -19,8 +19,8 @@ import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils;
 import org.eclipse.equinox.internal.p2.core.helpers.LogHelper;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
 import org.eclipse.equinox.internal.p2.repository.RepositoryTransport;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.equinox.internal.provisional.p2.installer.InstallDescription;
 import org.eclipse.equinox.p2.metadata.IVersionedId;
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/VersionedId.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/VersionedId.java
deleted file mode 100644
index 1bf5ebd..0000000
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/VersionedId.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2008, 2009 Code 9 and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     Code 9 - initial API and implementation
- *     EclipseSource - ongoing development
- *     Thomas Hallgren - Fix for bug 268659
- *     IBM - ongoing development
- *******************************************************************************/
-package org.eclipse.equinox.internal.p2.metadata;
-
-import org.eclipse.equinox.p2.metadata.Version;
-
-import org.eclipse.equinox.internal.p2.core.helpers.StringHelper;
-import org.eclipse.equinox.p2.metadata.IVersionedId;
-
-/**
- * An object representing a (id,version) pair. 
- * 
- * @noextend This class is not intended to be subclassed by clients.
- */
-public class VersionedId implements IVersionedId {
-	private final String id;
-	private final Version version;
-
-	/**
-	 * Creates and returns a new {@link VersionedId} from the given string specification.  
-	 * The specification must be of the form "id/version", or just "id" if the version is absent
-	 * <p>
-	 * This factory method can be used to reconstruct a {@link VersionedId}
-	 * instance from the string representation produced by a previous invocation of 
-	 * {@link #toString()}.
-	 * 
-	 * @param spec the specification for the versioned id to create
-	 * @return the parsed versioned id
-	 * @throws IllegalArgumentException If <code>spec</code> is improperly
-	 *         formatted.
-	 */
-	public static IVersionedId parse(String spec) {
-		String[] segments = StringHelper.getArrayFromString(spec, '/');
-		return new VersionedId(segments[0], segments.length == 1 ? null : segments[1]);
-	}
-
-	/**
-	 * Creates a new versioned id with the given id and version.
-	 * 
-	 * @param id The identifier
-	 * @param version The version
-	 * @throws IllegalArgumentException If <code>version</code> is improperly
-	 *         formatted.
-	 */
-	public VersionedId(String id, String version) {
-		this.id = id;
-		this.version = Version.parseVersion(version);
-	}
-
-	/**
-	 * Creates a new versioned id with the given id and version.
-	 * 
-	 * @param id The identifier
-	 * @param version The version
-	 */
-	public VersionedId(String id, Version version) {
-		this.id = id;
-		this.version = (version == null) ? Version.emptyVersion : version;
-	}
-
-	public boolean equals(Object obj) {
-		if (this == obj)
-			return true;
-
-		if (!(obj instanceof VersionedId))
-			return false;
-
-		VersionedId vname = (VersionedId) obj;
-		return id.equals(vname.id) && version.equals(vname.version);
-	}
-
-	public int hashCode() {
-		return id.hashCode() * 31 + version.hashCode();
-	}
-
-	public String getId() {
-		return id;
-	}
-
-	public Version getVersion() {
-		return version;
-	}
-
-	/**
-	 * Returns a string representation of this versioned id.
-	 * The result can be used to later construct an equal {@link VersionedId}
-	 * instance using {{@link #parse(String)}.
-	 * @return A string representation of this versioned id
-	 */
-	public String toString() {
-		return Version.emptyVersion.equals(version) ? id : id + '/' + version.toString();
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
new file mode 100644
index 0000000..bead918
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
@@ -0,0 +1,103 @@
+/*******************************************************************************
+ * Copyright (c) 2008, 2010 Code 9 and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     Code 9 - initial API and implementation
+ *     EclipseSource - ongoing development
+ *     Thomas Hallgren - Fix for bug 268659
+ *     IBM - ongoing development
+ *******************************************************************************/
+package org.eclipse.equinox.p2.metadata;
+
+import org.eclipse.equinox.internal.p2.core.helpers.StringHelper;
+
+/**
+ * An object representing a (id,version) pair. 
+ * 
+ * @noextend This class is not intended to be subclassed by clients.
+ * 
+ * @since 2.0
+ */
+public class VersionedId implements IVersionedId {
+	private final String id;
+	private final Version version;
+
+	/**
+	 * Creates and returns a new {@link VersionedId} from the given string specification.  
+	 * The specification must be of the form "id/version", or just "id" if the version is absent
+	 * <p>
+	 * This factory method can be used to reconstruct a {@link VersionedId}
+	 * instance from the string representation produced by a previous invocation of 
+	 * {@link #toString()}.
+	 * 
+	 * @param spec the specification for the versioned id to create
+	 * @return the parsed versioned id
+	 * @throws IllegalArgumentException If <code>spec</code> is improperly
+	 *         formatted.
+	 */
+	public static IVersionedId parse(String spec) {
+		String[] segments = StringHelper.getArrayFromString(spec, '/');
+		return new VersionedId(segments[0], segments.length == 1 ? null : segments[1]);
+	}
+
+	/**
+	 * Creates a new versioned id with the given id and version.
+	 * 
+	 * @param id The identifier
+	 * @param version The version
+	 * @throws IllegalArgumentException If <code>version</code> is improperly
+	 *         formatted.
+	 */
+	public VersionedId(String id, String version) {
+		this.id = id;
+		this.version = Version.parseVersion(version);
+	}
+
+	/**
+	 * Creates a new versioned id with the given id and version.
+	 * 
+	 * @param id The identifier
+	 * @param version The version
+	 */
+	public VersionedId(String id, Version version) {
+		this.id = id;
+		this.version = (version == null) ? Version.emptyVersion : version;
+	}
+
+	public boolean equals(Object obj) {
+		if (this == obj)
+			return true;
+
+		if (!(obj instanceof VersionedId))
+			return false;
+
+		VersionedId vname = (VersionedId) obj;
+		return id.equals(vname.id) && version.equals(vname.version);
+	}
+
+	public int hashCode() {
+		return id.hashCode() * 31 + version.hashCode();
+	}
+
+	public String getId() {
+		return id;
+	}
+
+	public Version getVersion() {
+		return version;
+	}
+
+	/**
+	 * Returns a string representation of this versioned id.
+	 * The result can be used to later construct an equal {@link VersionedId}
+	 * instance using {{@link #parse(String)}.
+	 * @return A string representation of this versioned id
+	 */
+	public String toString() {
+		return Version.emptyVersion.equals(version) ? id : id + '/' + version.toString();
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
index 3c34216..c35c1d8 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/internal/p2/publisher/eclipse/ProductFile.java
@@ -19,7 +19,7 @@ import javax.xml.parsers.SAXParser;
 import javax.xml.parsers.SAXParserFactory;
 import org.eclipse.equinox.frameworkadmin.BundleInfo;
 import org.eclipse.equinox.internal.p2.core.helpers.*;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.equinox.internal.p2.publisher.Activator;
 import org.eclipse.equinox.p2.metadata.IVersionedId;
 import org.eclipse.osgi.service.datalocation.Location;
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
index 8e071f4..a66101b 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/InstallPublisherApplication.java
@@ -10,9 +10,11 @@
  ******************************************************************************/
 package org.eclipse.equinox.p2.publisher.eclipse;
 
+
+
 import java.net.URISyntaxException;
 import java.util.ArrayList;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.equinox.p2.metadata.IVersionedId;
 import org.eclipse.equinox.p2.metadata.Version;
 import org.eclipse.equinox.p2.publisher.*;
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
index 7736926..2f803f4 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/ProductAction.java
@@ -13,7 +13,7 @@ package org.eclipse.equinox.p2.publisher.eclipse;
 import java.io.File;
 import java.util.*;
 import org.eclipse.core.runtime.*;
-import org.eclipse.equinox.internal.p2.metadata.VersionedId;
+import org.eclipse.equinox.p2.metadata.VersionedId;
 import org.eclipse.equinox.internal.p2.publisher.eclipse.IProductDescriptor;
 import org.eclipse.equinox.p2.metadata.*;
 import org.eclipse.equinox.p2.publisher.*;
commit 977641290b9287942f0665735b13de3c4e1b4678
Author: ibull <>
Date:   Tue Mar 9 03:30:33 2010 +0000

    bug 302990: [api] Make VersionedID API
    https://bugs.eclipse.org/bugs/show_bug.cgi?id=302990

17	9	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
index bead918..ebd1273 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/VersionedId.java
@@ -16,7 +16,9 @@ package org.eclipse.equinox.p2.metadata;
 import org.eclipse.equinox.internal.p2.core.helpers.StringHelper;
 
 /**
- * An object representing a (id,version) pair. 
+ * An object representing a (id,version) pair. An instance of this class can be constructed
+ * by invoking the constructor or calling {@link VersionedId#parse(String)} with a string 
+ * representation of this VersionedID.
  * 
  * @noextend This class is not intended to be subclassed by clients.
  * 
@@ -68,6 +70,20 @@ public class VersionedId implements IVersionedId {
 		this.version = (version == null) ? Version.emptyVersion : version;
 	}
 
+	/**
+	 * @return the ID of this VersionedID
+	 */
+	public String getId() {
+		return id;
+	}
+
+	/**
+	 * @return the Version of this VersionedID
+	 */
+	public Version getVersion() {
+		return version;
+	}
+
 	public boolean equals(Object obj) {
 		if (this == obj)
 			return true;
@@ -83,14 +99,6 @@ public class VersionedId implements IVersionedId {
 		return id.hashCode() * 31 + version.hashCode();
 	}
 
-	public String getId() {
-		return id;
-	}
-
-	public Version getVersion() {
-		return version;
-	}
-
 	/**
 	 * Returns a string representation of this versioned id.
 	 * The result can be used to later construct an equal {@link VersionedId}
