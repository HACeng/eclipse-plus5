commit 63e84df2e4686fec7260d8c56a260be05b7b4306
Author: Susan Franklin <sfranklin>
Date:   Thu Dec 6 23:12:28 2007 +0000

    Bug 205232 - [prov] [ui] Acceptance and presentation of licenses

11	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/IInstallableUnit.java
1	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
2	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
1	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
43	3	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
1	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
1	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
10	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
8	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
241	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
3	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
11	8	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
4	23	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
0	28	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateInstallWizardPage.java
55	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
38	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
3	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
10	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
29	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/LicenseManager.java
119	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/SimpleLicenseManager.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
3	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
7	19	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
5	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
7	19	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
5	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/IInstallableUnit.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/IInstallableUnit.java
index d297947..f32e092 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/IInstallableUnit.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/p2/metadata/IInstallableUnit.java
@@ -77,6 +77,17 @@ public interface IInstallableUnit extends Comparable {
 	 */
 	public static final String PROP_LICENSE = "equinox.p2.license"; //$NON-NLS-1$
 	/**
+	 * A property key (value <code>"equinox.p2.license.id"</code>) representing a 
+	 * String property containing a unique id for the specified license.  The id
+	 * is used when remembering which licenses have already been accepted.  If the license
+	 * for an installable unit changes, its id should also be changed so that the
+	 * user must accept it again.
+	 * 
+	 * @see #getProperty(String)
+	 */
+	public static final String PROP_LICENSE_ID = "equinox.p2.license.id"; //$NON-NLS-1$
+
+	/**
 	 * A property key (value <code>"equinox.p2.name"</code>) representing a 
 	 * String property containing a human-readable name for the installable unit.
 	 * 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
index 2f27bb6..631809d 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
@@ -83,7 +83,7 @@ public class MetadataRepositoriesView extends RepositoriesView {
 
 	protected void makeActions() {
 		super.makeActions();
-		installAction = new InstallAction(viewer, null, getProfileChooser(), getShell());
+		installAction = new InstallAction(viewer, null, getProfileChooser(), null, getShell());
 		revertAction = new RevertAction(viewer, null, getProfileChooser(), getShell());
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index 965d572..d3f0e09 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -112,7 +112,7 @@ public class ProfilesView extends ProvView {
 
 	protected void configureViewer(TreeViewer treeViewer) {
 		super.configureViewer(treeViewer);
-		InstallIUDropAdapter adapter = new InstallIUDropAdapter(treeViewer);
+		InstallIUDropAdapter adapter = new InstallIUDropAdapter(treeViewer, null);
 		adapter.setFeedbackEnabled(false);
 		Transfer[] transfers = new Transfer[] {org.eclipse.jface.util.LocalSelectionTransfer.getTransfer()};
 		treeViewer.addDropSupport(DND.DROP_COPY, transfers, adapter);
@@ -158,7 +158,7 @@ public class ProfilesView extends ProvView {
 		addProfileAction = new AddProfileAction();
 		removeProfileAction = new RemoveProfileAction();
 		uninstallAction = new UninstallAction(viewer, null, getProfileChooser(), getShell());
-		updateAction = new UpdateAction(viewer, null, getProfileChooser(), getShell());
+		updateAction = new UpdateAction(viewer, null, getProfileChooser(), null, getShell());
 		propertiesAction = new PropertyDialogAction(this.getSite(), viewer);
 		installAction = new InstallIntoProfileAction();
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
index 133ed53..fdd273d 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
@@ -50,7 +50,7 @@ public class UpdateAndInstallDialog extends TrayDialog {
 		FontMetrics fontMetrics = gc.getFontMetrics();
 		gc.dispose();
 
-		UpdateAndInstallGroup group = new UpdateAndInstallGroup(parent, profile, ProvAdminUIMessages.UpdateAndInstallDialog_InstalledIUsPageLabel, ProvAdminUIMessages.UpdateAndInstallDialog_AvailableIUsPageLabel, null, null, ProvAdminUIActivator.getDefault().getQueryProvider(), fontMetrics);
+		UpdateAndInstallGroup group = new UpdateAndInstallGroup(parent, profile, ProvAdminUIMessages.UpdateAndInstallDialog_InstalledIUsPageLabel, ProvAdminUIMessages.UpdateAndInstallDialog_AvailableIUsPageLabel, null, null, ProvAdminUIActivator.getDefault().getQueryProvider(), null, fontMetrics);
 		Dialog.applyDialogFont(group.getTabFolder());
 		return group.getTabFolder();
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index 6cccd66..8a6fa61 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -107,5 +107,6 @@ public class ProvSDKMessages extends NLS {
 	public static String ProvisioningPreferencePage_enableGC;
 	public static String ProvisioningPreferencePage_gcImmediately;
 	public static String ProvisioningPreferencePage_gcRetentionTime;
+	public static String ProvSDKUIActivator_LicenseManagerReadError;
 	public static String ProvSDKUIActivator_NoSelfProfile;
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
index 31eaa6b..a60bc76 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
@@ -10,12 +10,12 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.sdk;
 
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
+import java.io.*;
+import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.engine.IProfileRegistry;
 import org.eclipse.equinox.p2.engine.Profile;
-import org.eclipse.equinox.p2.ui.ProfileFactory;
+import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
 import org.eclipse.jface.resource.ImageDescriptor;
@@ -29,10 +29,12 @@ import org.osgi.framework.BundleContext;
 public class ProvSDKUIActivator extends AbstractUIPlugin {
 
 	private static final String DEFAULT_PROFILE_ID = "DefaultProfile"; //$NON-NLS-1$
+	private static final String LICENSE_STORAGE = "licenses.xml"; //$NON-NLS-1$
 	private static ProvSDKUIActivator plugin;
 	private static BundleContext context;
 	private AutomaticUpdateScheduler scheduler;
 	private IProvElementQueryProvider queryProvider;
+	private SimpleLicenseManager licenseManager;
 
 	public static final String PLUGIN_ID = "org.eclipse.equinox.p2.ui.sdk"; //$NON-NLS-1$
 
@@ -74,9 +76,41 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 		super.start(bundleContext);
 		plugin = this;
 		ProvSDKUIActivator.context = bundleContext;
+		readLicenseRegistry();
+	}
+
+	private void readLicenseRegistry() {
+		IPath location = getStateLocation().append(LICENSE_STORAGE);
+		File f = location.toFile();
+		BufferedInputStream stream = null;
+		if (f.exists()) {
+			try {
+				stream = new BufferedInputStream(new FileInputStream(f));
+				getLicenseManager().read(stream);
+				stream.close();
+			} catch (IOException e) {
+				ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, ProvSDKMessages.ProvSDKUIActivator_LicenseManagerReadError, e));
+			}
+		}
+	}
+
+	private void writeLicenseRegistry() {
+		if (!getLicenseManager().hasAcceptedLicenses())
+			return;
+		IPath location = getStateLocation().append(LICENSE_STORAGE);
+		File f = location.toFile();
+		BufferedOutputStream stream = null;
+		try {
+			stream = new BufferedOutputStream(new FileOutputStream(f, false));
+			getLicenseManager().write(stream);
+			stream.close();
+		} catch (IOException e) {
+			ProvUI.reportStatus(new Status(IStatus.ERROR, PLUGIN_ID, 0, "Error writing license registry.  Accepted licenses will not be remembered.", e));
+		}
 	}
 
 	public void stop(BundleContext bundleContext) throws Exception {
+		writeLicenseRegistry();
 		plugin = null;
 		if (scheduler != null) {
 			scheduler.shutdown();
@@ -126,4 +160,10 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 			queryProvider = new ProvSDKQueryProvider();
 		return queryProvider;
 	}
+
+	public SimpleLicenseManager getLicenseManager() {
+		if (licenseManager == null)
+			licenseManager = new SimpleLicenseManager();
+		return licenseManager;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index 09ca994..15cb5b1 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -76,7 +76,7 @@ public class UpdateAndInstallDialog extends TrayDialog {
 		FontMetrics fontMetrics = gc.getFontMetrics();
 		gc.dispose();
 
-		group = new UpdateAndInstallGroup(comp, profile, ProvSDKMessages.UpdateAndInstallDialog_InstalledFeatures, ProvSDKMessages.UpdateAndInstallDialog_AvailableFeatures, getRepositoryManipulator(), getProfileChooser(), ProvSDKUIActivator.getDefault().getQueryProvider(), fontMetrics);
+		group = new UpdateAndInstallGroup(comp, profile, ProvSDKMessages.UpdateAndInstallDialog_InstalledFeatures, ProvSDKMessages.UpdateAndInstallDialog_AvailableFeatures, getRepositoryManipulator(), getProfileChooser(), ProvSDKUIActivator.getDefault().getQueryProvider(), ProvSDKUIActivator.getDefault().getLicenseManager(), fontMetrics);
 		final Button checkBox = new Button(comp, SWT.CHECK);
 		final IPreferenceStore store = ProvSDKUIActivator.getDefault().getPreferenceStore();
 		checkBox.setText(ProvSDKMessages.UpdateAndInstallDialog_AlertCheckbox);
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 19aa381..ba16742 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -84,6 +84,7 @@ AutomaticUpdatesPreferencePage_RemindGroup=&When updates are found
 AutomaticUpdatesPreferencePage_RemindSchedule=&Remind me about updates every:
 AutomaticUpdatesPreferencePage_RemindOnce=Notify me &once about updates
 AutomaticUpdatesJob_Updates=Updates
+ProvSDKUIActivator_LicenseManagerReadError=Error reading license registry.  Accepted licenses will not be remembered.
 ProvSDKUIActivator_NoSelfProfile=Could not locate the running profile instance
 ProvisioningPreferencePage_BrowsingPrefsGroup=Browsing for updates
 ProvisioningPreferencePage_ShowLatestVersions=Show only the latest versions of available software
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
index b8062be..47e1f50 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
@@ -94,7 +94,7 @@ public class AutomaticUpdatesPopup extends PopupDialog {
 			infoLink.setText(ProvSDKMessages.AutomaticUpdatesDialog_ClickToReviewNotDownloaded);
 		infoLink.addSelectionListener(new SelectionAdapter() {
 			public void widgetSelected(SelectionEvent e) {
-				UpdateWizard wizard = new UpdateWizard(profile, toUpdate);
+				UpdateWizard wizard = new UpdateWizard(profile, toUpdate, ProvSDKUIActivator.getDefault().getLicenseManager());
 				WizardDialog dialog = new WizardDialog(getShell(), wizard);
 				dialog.open();
 			}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 2eee867..ac10a4b 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -25,6 +25,15 @@ public class ProvUIMessages extends NLS {
 		NLS.initializeMessages(BUNDLE_NAME, ProvUIMessages.class);
 	}
 
+	public static String AcceptLicensesWizardPage_AcceptMultiple;
+	public static String AcceptLicensesWizardPage_AcceptSingle;
+	public static String AcceptLicensesWizardPage_ItemsLabel;
+	public static String AcceptLicensesWizardPage_LicenseTextLabel;
+	public static String AcceptLicensesWizardPage_NoLicensesDescription;
+	public static String AcceptLicensesWizardPage_RejectMultiple;
+	public static String AcceptLicensesWizardPage_RejectSingle;
+	public static String AcceptLicensesWizardPage_ReviewLicensesDescription;
+	public static String AcceptLicensesWizardPage_Title;
 	public static String ApplyProfileChangesDialog_ApplyChanges;
 	public static String CategoryElementCollector_Uncategorized;
 	public static String ChooseProfileDialog_DefaultDialogTitle;
@@ -114,6 +123,7 @@ public class ProvUIMessages extends NLS {
 	public static String ProvUI_SizeColumnTitle;
 	public static String ProvUI_VersionColumnTitle;
 	public static String ProvUI_IDColumnTitle;
+	public static String ProvUILicenseManager_ParsingError;
 	public static String OptionalPlatformRestartMessage;
 	public static String QueryableArtifactRepositoryManager_RepositoryQueryProgress;
 	public static String QueryableMetadataRepositoryManager_RepositoryQueryProgress;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
index ed7d800..86ebf29 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
@@ -18,8 +18,7 @@ import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.ui.IProfileChooser;
-import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.jface.dialogs.ProgressMonitorDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.ISelectionProvider;
@@ -29,11 +28,13 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 
 	Profile profile;
 	IProfileChooser profileChooser;
+	LicenseManager licenseManager;
 
-	protected ProfileModificationAction(String text, ISelectionProvider selectionProvider, Profile profile, IProfileChooser profileChooser, Shell shell) {
+	protected ProfileModificationAction(String text, ISelectionProvider selectionProvider, Profile profile, IProfileChooser profileChooser, LicenseManager licenseManager, Shell shell) {
 		super(text, selectionProvider, shell);
 		this.profile = profile;
 		this.profileChooser = profileChooser;
+		this.licenseManager = licenseManager;
 	}
 
 	public void run() {
@@ -97,4 +98,8 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 
 	}
 
+	protected LicenseManager getLicenseManager() {
+		return licenseManager;
+	}
+
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
new file mode 100644
index 0000000..94d2506
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
@@ -0,0 +1,241 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.ui.dialogs;
+
+import java.util.*;
+import java.util.List;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.LicenseManager;
+import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.viewers.*;
+import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.jface.wizard.WizardPage;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.custom.SashForm;
+import org.eclipse.swt.events.SelectionAdapter;
+import org.eclipse.swt.events.SelectionEvent;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.*;
+
+/**
+ * @since 3.4
+ */
+public class AcceptLicensesWizardPage extends WizardPage {
+
+	TableViewer iuViewer;
+	Text license;
+	Button acceptButton;
+	Button declineButton;
+	private IInstallableUnit[] ius;
+	private LicenseManager licenseManager;
+	private static final int DEFAULT_COLUMN_WIDTH = 100;
+
+	public AcceptLicensesWizardPage(IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super("AcceptLicenses"); //$NON-NLS-1$
+		setTitle(ProvUIMessages.AcceptLicensesWizardPage_Title);
+		this.licenseManager = licenseManager;
+		update(ius);
+	}
+
+	public void createControl(Composite parent) {
+		initializeDialogUnits(parent);
+		if (ius.length == 0) {
+			Label label = new Label(parent, SWT.NONE);
+			setControl(label);
+		} else if (ius.length == 1) {
+			createLicenseSection(parent, true);
+		} else {
+			SashForm composite = new SashForm(parent, SWT.HORIZONTAL);
+			composite.setLayout(new GridLayout());
+			composite.setLayoutData(new GridData(GridData.FILL_BOTH));
+
+			createIUSection(composite);
+			createLicenseSection(composite, false);
+			setControl(composite);
+
+			Object element = iuViewer.getElementAt(0);
+			if (element != null)
+				iuViewer.setSelection(new StructuredSelection(element));
+		}
+		Dialog.applyDialogFont(getControl());
+	}
+
+	private void createIUSection(Composite parent) {
+		Composite composite = new Composite(parent, SWT.NONE);
+		GridLayout layout = new GridLayout();
+		layout.marginWidth = 0;
+		layout.marginHeight = 0;
+		composite.setLayout(layout);
+		GridData gd = new GridData(GridData.FILL_BOTH);
+		composite.setLayoutData(gd);
+
+		Label label = new Label(composite, SWT.NONE);
+		label.setText(ProvUIMessages.AcceptLicensesWizardPage_ItemsLabel);
+		iuViewer = new TableViewer(composite, SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
+		iuViewer.setContentProvider(new StaticContentProvider(new Object[0]));
+		iuViewer.setInput(ius);
+		iuViewer.setLabelProvider(new IUDetailsLabelProvider());
+		iuViewer.setComparator(new ViewerComparator(new Comparator() {
+			// This comparator sorts in reverse order so that we see the newest configs first
+			public int compare(Object o1, Object o2) {
+				return ((String) o2).compareTo((String) o1);
+			}
+		}));
+		iuViewer.addSelectionChangedListener(new ISelectionChangedListener() {
+			public void selectionChanged(SelectionChangedEvent event) {
+				handleSelectionChanged((IStructuredSelection) event.getSelection());
+			}
+
+		});
+		setTableColumns(iuViewer.getTable());
+		gd = new GridData(GridData.FILL_BOTH);
+		iuViewer.getControl().setLayoutData(gd);
+	}
+
+	private void createLicenseAcceptSection(Composite parent, boolean multiple) {
+		// Buttons for accepting licenses
+		Composite buttonContainer = new Composite(parent, SWT.NULL);
+		GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
+		buttonContainer.setLayout(new GridLayout());
+		buttonContainer.setLayoutData(gd);
+
+		acceptButton = new Button(buttonContainer, SWT.RADIO);
+		if (multiple)
+			acceptButton.setText(ProvUIMessages.AcceptLicensesWizardPage_AcceptMultiple);
+		else
+			acceptButton.setText(ProvUIMessages.AcceptLicensesWizardPage_AcceptSingle);
+
+		acceptButton.addSelectionListener(new SelectionAdapter() {
+			public void widgetSelected(SelectionEvent e) {
+				setPageComplete(acceptButton.getSelection());
+			}
+		});
+		declineButton = new Button(buttonContainer, SWT.RADIO);
+		if (multiple)
+			declineButton.setText(ProvUIMessages.AcceptLicensesWizardPage_RejectMultiple);
+		else
+			declineButton.setText(ProvUIMessages.AcceptLicensesWizardPage_RejectSingle);
+		declineButton.addSelectionListener(new SelectionAdapter() {
+			public void widgetSelected(SelectionEvent e) {
+				setPageComplete(acceptButton.getSelection());
+			}
+		});
+
+		acceptButton.setSelection(false);
+		declineButton.setSelection(true);
+	}
+
+	private void createLicenseSection(Composite parent, boolean singleLicense) {
+		Composite composite = new Composite(parent, SWT.NONE);
+		GridLayout layout = new GridLayout();
+		layout.marginWidth = 0;
+		layout.marginHeight = 0;
+		composite.setLayout(layout);
+		GridData gd = new GridData(GridData.FILL_BOTH);
+		composite.setLayoutData(gd);
+
+		Label label = new Label(composite, SWT.NONE);
+		label.setText(ProvUIMessages.AcceptLicensesWizardPage_LicenseTextLabel);
+		license = new Text(composite, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL | SWT.WRAP | SWT.READ_ONLY);
+		license.setBackground(license.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
+		gd = new GridData(GridData.FILL_BOTH);
+		license.setLayoutData(gd);
+
+		createLicenseAcceptSection(composite, !singleLicense);
+
+		if (singleLicense) {
+			license.setText(getLicense(ius[0]));
+			setControl(composite);
+		}
+	}
+
+	void handleSelectionChanged(IStructuredSelection selection) {
+		if (!selection.isEmpty()) {
+			Object selected = selection.getFirstElement();
+			if (selected instanceof IInstallableUnit)
+				license.setText(getLicense((IInstallableUnit) selected));
+		}
+	}
+
+	private void setTableColumns(Table table) {
+		IUColumnConfig[] columns = ProvUI.getIUColumnConfig();
+
+		for (int i = 0; i < columns.length; i++) {
+			TableColumn tc = new TableColumn(table, SWT.NONE, i);
+			tc.setResizable(true);
+			tc.setText(columns[i].columnTitle);
+			tc.setWidth(convertHorizontalDLUsToPixels(DEFAULT_COLUMN_WIDTH));
+		}
+	}
+
+	public boolean performFinish() {
+		rememberAcceptedLicenses();
+		return true;
+	}
+
+	public boolean hasLicensesToAccept() {
+		return ius.length > 0;
+	}
+
+	public void update(IInstallableUnit[] theIUs) {
+		this.ius = iusWithUnacceptedLicenses(theIUs);
+		setDescription();
+		setPageComplete(ius.length == 0);
+		if (getControl() != null) {
+			Composite parent = getControl().getParent();
+			getControl().dispose();
+			createControl(parent);
+			parent.layout(true, true);
+		}
+	}
+
+	private String getLicense(IInstallableUnit iu) {
+		String licenseText = iu.getProperty(IInstallableUnit.PROP_LICENSE);
+		if (licenseText != null)
+			return licenseText;
+		// shouldn't happen because we already reduced the list to those
+		// that have licenses
+		return ""; //$NON-NLS-1$
+	}
+
+	private IInstallableUnit[] iusWithUnacceptedLicenses(IInstallableUnit[] allIUs) {
+		if (licenseManager == null)
+			return ius;
+		List unaccepted = new ArrayList();
+		for (int i = 0; i < allIUs.length; i++) {
+			IInstallableUnit iu = allIUs[i];
+			String licenseText = iu.getProperty(IInstallableUnit.PROP_LICENSE);
+			// It has a license, is it already accepted?
+			if (licenseText != null) {
+				if (!licenseManager.isAccepted(iu))
+					unaccepted.add(iu);
+			}
+		}
+		return (IInstallableUnit[]) unaccepted.toArray(new IInstallableUnit[unaccepted.size()]);
+	}
+
+	private void rememberAcceptedLicenses() {
+		for (int i = 0; i < ius.length; i++) {
+			if (licenseManager != null)
+				licenseManager.acceptLicense(ius[i]);
+		}
+	}
+
+	private void setDescription() {
+		if (ius.length == 0)
+			setDescription(ProvUIMessages.AcceptLicensesWizardPage_NoLicensesDescription);
+		else
+			setDescription(ProvUIMessages.AcceptLicensesWizardPage_ReviewLicensesDescription);
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
index 2479960..e67e875 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
@@ -21,10 +21,10 @@ import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.*;
 
-public class InstallWizardPage extends UpdateInstallWizardPage {
+public class InstallWizardPage extends UpdateOrInstallWizardPage {
 
-	public InstallWizardPage(IInstallableUnit[] ius, Profile profile) {
-		super("InstallWizardPage", ius, profile); //$NON-NLS-1$
+	public InstallWizardPage(IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
+		super("InstallWizardPage", ius, profile, wizard); //$NON-NLS-1$
 		setTitle(ProvUIMessages.InstallIUOperationLabel);
 		setDescription(ProvUIMessages.InstallDialog_InstallSelectionMessage);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index eb05bff..1e00b4b 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -31,6 +31,7 @@ import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.PlatformUI;
 
 public abstract class ProfileModificationWizardPage extends WizardPage {
 	private static final int DEFAULT_HEIGHT = 20;
@@ -83,7 +84,8 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 			}
 		};
 		try {
-			getContainer().run(true, true, runnable);
+			// We are not open yet so we can't use the local progress control
+			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
 		} catch (InterruptedException e) {
 			// don't report thread interruption
 		} catch (InvocationTargetException e) {
@@ -92,7 +94,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 
 		listViewer.addCheckStateListener(new ICheckStateListener() {
 			public void checkStateChanged(CheckStateChangedEvent event) {
-				validatePage();
+				selectedIUsChanged();
 			}
 		});
 		contentProvider = new StaticContentProvider(list.toArray());
@@ -100,6 +102,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		listViewer.setInput(new Object());
 		listViewer.setLabelProvider(new IUDetailsLabelProvider(getColumnConfig()));
 		listViewer.setAllChecked(true);
+		selectedIUsChanged();
 		setControl(composite);
 		Dialog.applyDialogFont(composite);
 	}
@@ -144,6 +147,10 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return theIUs;
 	}
 
+	public IInstallableUnit[] getSelectedIUs() {
+		return elementsToIUs(getSelectedElements());
+	}
+
 	protected Profile getProfile() {
 		return profile;
 	}
@@ -162,11 +169,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return IUElement.SIZE_UNKNOWN;
 	}
 
-	protected void validatePage() {
-		setPageComplete(isPageComplete());
-	}
-
-	public boolean isPageComplete() {
-		return getSelectedElements().length > 0;
+	protected void selectedIUsChanged() {
+		setPageComplete(getSelectedIUs().length > 0);
 	}
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
index 624ef26..eb9539a 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
@@ -19,14 +19,15 @@ import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.ui.*;
+import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.p2.ui.model.RollbackProfileElement;
 import org.eclipse.equinox.p2.ui.model.RollbackRepositoryElement;
 import org.eclipse.equinox.p2.ui.operations.*;
 import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
 import org.eclipse.equinox.p2.ui.viewers.*;
-import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.wizard.WizardPage;
@@ -44,10 +45,8 @@ public class RevertProfileWizardPage extends WizardPage {
 
 	private TableViewer configsViewer;
 	private TableViewer configContentsViewer;
-	private SashForm sashForm;
 	Profile profile;
 	IProvElementQueryProvider queryProvider;
-	private static final String DIALOG_SETTINGS_SECTION = "RevertDialog"; //$NON-NLS-1$
 	private static final int DEFAULT_COLUMN_WIDTH = 150;
 
 	public RevertProfileWizardPage(Profile profile, IProvElementQueryProvider queryProvider) {
@@ -60,7 +59,7 @@ public class RevertProfileWizardPage extends WizardPage {
 	}
 
 	public void createControl(Composite parent) {
-		sashForm = new SashForm(parent, SWT.HORIZONTAL);
+		SashForm sashForm = new SashForm(parent, SWT.HORIZONTAL);
 		sashForm.setLayout(new GridLayout());
 		sashForm.setLayoutData(new GridData(GridData.FILL_BOTH));
 		initializeDialogUnits(sashForm);
@@ -205,24 +204,6 @@ public class RevertProfileWizardPage extends WizardPage {
 		return true;
 	}
 
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.jface.dialogs.Dialog#isResizable()
-	 */
-	protected boolean isResizable() {
-		return true;
-	}
-
-	protected IDialogSettings getDialogBoundsSettings() {
-		IDialogSettings settings = ProvUIActivator.getDefault().getDialogSettings();
-		IDialogSettings section = settings.getSection(DIALOG_SETTINGS_SECTION);
-		if (section == null) {
-			section = settings.addNewSection(DIALOG_SETTINGS_SECTION);
-		}
-		return section;
-	}
-
 	public boolean isPageComplete() {
 		return getSelectedIU() != null;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateInstallWizardPage.java
deleted file mode 100644
index 5a2d229..0000000
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateInstallWizardPage.java
+++ /dev/null
@@ -1,28 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.internal.p2.ui.dialogs;
-
-import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.engine.Profile;
-import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.ui.viewers.IUColumnConfig;
-
-public abstract class UpdateInstallWizardPage extends ProfileModificationWizardPage {
-	protected UpdateInstallWizardPage(String id, IInstallableUnit[] ius, Profile profile) {
-		super(id, ius, profile);
-	}
-
-	protected abstract String getOperationLabel();
-
-	protected IUColumnConfig[] getColumnConfig() {
-		return new IUColumnConfig[] {new IUColumnConfig(ProvUIMessages.ProvUI_NameColumnTitle, IUColumnConfig.COLUMN_NAME), new IUColumnConfig(ProvUIMessages.ProvUI_VersionColumnTitle, IUColumnConfig.COLUMN_VERSION), new IUColumnConfig(ProvUIMessages.ProvUI_SizeColumnTitle, IUColumnConfig.COLUMN_SIZE)};
-	}
-}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
new file mode 100644
index 0000000..5b97122
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
@@ -0,0 +1,55 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.ui.dialogs;
+
+import org.eclipse.equinox.p2.engine.Profile;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.LicenseManager;
+import org.eclipse.jface.wizard.Wizard;
+
+/**
+ * @since 3.4
+ */
+public abstract class UpdateOrInstallWizard extends Wizard {
+
+	UpdateOrInstallWizardPage mainPage;
+	AcceptLicensesWizardPage licensePage;
+	Profile profile;
+	IInstallableUnit[] ius;
+	LicenseManager licenseManager;
+
+	public UpdateOrInstallWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super();
+		setForcePreviousAndNextButtons(true);
+		setNeedsProgressMonitor(true);
+		this.profile = profile;
+		this.ius = ius;
+		this.licenseManager = licenseManager;
+	}
+
+	public void addPages() {
+		mainPage = createMainPage(profile, ius);
+		addPage(mainPage);
+		addPage(licensePage = new AcceptLicensesWizardPage(ius, licenseManager));
+	}
+
+	public boolean performFinish() {
+		return mainPage.performFinish();
+	}
+
+	public void iusChanged(IInstallableUnit[] theIUs) {
+		this.ius = theIUs;
+		licensePage.update(ius);
+	}
+
+	protected abstract UpdateOrInstallWizardPage createMainPage(Profile theProfile, IInstallableUnit[] theIUs);
+
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
new file mode 100644
index 0000000..2f38f28
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
@@ -0,0 +1,38 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.ui.dialogs;
+
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.p2.engine.Profile;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.viewers.IUColumnConfig;
+
+public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizardPage {
+
+	protected UpdateOrInstallWizard wizard;
+
+	protected UpdateOrInstallWizardPage(String id, IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
+		super(id, ius, profile);
+		this.wizard = wizard;
+	}
+
+	protected abstract String getOperationLabel();
+
+	protected IUColumnConfig[] getColumnConfig() {
+		return new IUColumnConfig[] {new IUColumnConfig(ProvUIMessages.ProvUI_NameColumnTitle, IUColumnConfig.COLUMN_NAME), new IUColumnConfig(ProvUIMessages.ProvUI_VersionColumnTitle, IUColumnConfig.COLUMN_VERSION), new IUColumnConfig(ProvUIMessages.ProvUI_SizeColumnTitle, IUColumnConfig.COLUMN_SIZE)};
+	}
+
+	protected void selectedIUsChanged() {
+		wizard.iusChanged(getSelectedIUs());
+		super.selectedIUsChanged();
+	}
+
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 2d1ac1a..90418c2 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -24,10 +24,10 @@ import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
 import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 
-public class UpdateWizardPage extends UpdateInstallWizardPage {
+public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 
-	public UpdateWizardPage(IInstallableUnit[] ius, Profile profile) {
-		super("UpdateWizardPage", ius, profile); //$NON-NLS-1$
+	public UpdateWizardPage(IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
+		super("UpdateWizardPage", ius, profile, wizard); //$NON-NLS-1$
 		setTitle(ProvUIMessages.UpdateAction_UpdatesAvailableTitle);
 		setDescription(ProvUIMessages.UpdateAction_UpdatesAvailableMessage);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 9b608eb..e7f1522 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -72,6 +72,15 @@ RepositoryGroup_SelectRepositoryDirectory=Select a repository root directory:
 RepositoryGroup_RepositoryFile=Repository archive
 RepositoryGroup_URLRequired=Must specify a URL
 
+AcceptLicensesWizardPage_AcceptMultiple=I &accept the terms of the license agreements
+AcceptLicensesWizardPage_AcceptSingle=I &accept the terms of the license agreement
+AcceptLicensesWizardPage_ItemsLabel=&Items with licenses:
+AcceptLicensesWizardPage_LicenseTextLabel=&License text:
+AcceptLicensesWizardPage_NoLicensesDescription=There are no licenses to review.  Either the software does not specify a license, or the license has already been reviewed and approved.
+AcceptLicensesWizardPage_RejectMultiple=I &do not accept the terms of the license agreements
+AcceptLicensesWizardPage_RejectSingle=I &do not accept the terms of the license agreement
+AcceptLicensesWizardPage_ReviewLicensesDescription=Licenses must be reviewed and accepted before the software can be installed.
+AcceptLicensesWizardPage_Title=Review Licenses
 AddRepositoryDialog_Title=Add Repository
 AddRepositoryDialog_DuplicateURL=Duplicate URL
 
@@ -98,6 +107,7 @@ ProvUI_NameColumnTitle=Name
 ProvUI_SizeColumnTitle=Size
 ProvUI_VersionColumnTitle=Version
 ProvUI_IDColumnTitle=Identifier
+ProvUILicenseManager_ParsingError=Error parsing the accepted license registry
 
 OptionalPlatformRestartMessage = It is recommended you restart the system for the changes to take effect, \
 but it may be possible to apply the changes you have made without restarting. \
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/LicenseManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/LicenseManager.java
new file mode 100644
index 0000000..72cdef8
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/LicenseManager.java
@@ -0,0 +1,29 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.ui;
+
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+
+/**
+ * Abstract class for a manager which tracks which licenses have been accepted.
+ * 
+ * @since 3.4
+ */
+public abstract class LicenseManager {
+
+	public abstract boolean acceptLicense(IInstallableUnit iu);
+
+	public abstract boolean rejectLicense(IInstallableUnit iu);
+
+	public abstract boolean isAccepted(IInstallableUnit iu);
+
+	public abstract boolean hasAcceptedLicenses();
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/SimpleLicenseManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/SimpleLicenseManager.java
new file mode 100644
index 0000000..55ecb07
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/SimpleLicenseManager.java
@@ -0,0 +1,119 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.ui;
+
+import java.io.*;
+import java.util.HashSet;
+import java.util.Set;
+import javax.xml.parsers.*;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.w3c.dom.*;
+import org.xml.sax.SAXException;
+
+/**
+ * SimpleLicenseManager is a license manager that keeps track of 
+ * IInstallableUnit licenses by using the IU's license id property.
+ * It can read and write its accepted list to a stream.
+ * 
+ * @since 3.4
+ */
+public class SimpleLicenseManager extends LicenseManager {
+	java.util.Set accepted = new HashSet();
+
+	public boolean acceptLicense(IInstallableUnit iu) {
+		String id = getLicenseId(iu);
+		if (id != null) {
+			accepted.add(id);
+			return true;
+		}
+		return false;
+	}
+
+	public boolean rejectLicense(IInstallableUnit iu) {
+		String id = getLicenseId(iu);
+		if (id != null)
+			return accepted.remove(id);
+		return false;
+	}
+
+	public boolean isAccepted(IInstallableUnit iu) {
+		String id = getLicenseId(iu);
+		if (id != null)
+			return accepted.contains(id);
+		return false;
+	}
+
+	public boolean hasAcceptedLicenses() {
+		return !accepted.isEmpty();
+	}
+
+	public void read(InputStream stream) throws IOException {
+		try {
+			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+			factory.setNamespaceAware(true);
+			DocumentBuilder parser = factory.newDocumentBuilder();
+			Document doc = parser.parse(stream);
+			Node root = doc.getDocumentElement();
+			processRoot(root, accepted);
+		} catch (ParserConfigurationException e) {
+			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError);
+		} catch (SAXException e) {
+			ProvUI.handleException(e, ProvUIMessages.ProvUILicenseManager_ParsingError);
+		}
+	}
+
+	public void write(OutputStream stream) throws IOException {
+		OutputStreamWriter osw = null;
+		PrintWriter writer = null;
+		try {
+			osw = new OutputStreamWriter(stream, "UTF8"); //$NON-NLS-1$
+			writer = new PrintWriter(osw);
+			writer.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"); //$NON-NLS-1$
+			writer.println("<licenses>"); //$NON-NLS-1$
+			String[] licenses = (String[]) accepted.toArray(new String[accepted.size()]);
+			for (int i = 0; i < accepted.size(); i++) {
+				writer.print("    " + "<license id=\"" + licenses[i] + "\"/>"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			}
+		} finally {
+			writer.println("</licenses>"); //$NON-NLS-1$
+			writer.flush();
+			writer.close();
+			if (osw != null)
+				osw.close();
+		}
+	}
+
+	private String getLicenseId(IInstallableUnit iu) {
+		return iu.getProperty(IInstallableUnit.PROP_LICENSE_ID);
+	}
+
+	private void processRoot(Node root, Set licenses) {
+		if (root.getNodeName().equals("licenses")) { //$NON-NLS-1$
+			NodeList children = root.getChildNodes();
+			processChildren(children, licenses);
+		}
+	}
+
+	private void processChildren(NodeList children, Set licenses) {
+		for (int i = 0; i < children.getLength(); i++) {
+			Node child = children.item(i);
+			if (child.getNodeType() == Node.ELEMENT_NODE) {
+				if (child.getNodeName().equals("license")) { //$NON-NLS-1$
+					NamedNodeMap atts = child.getAttributes();
+					Node att = atts.getNamedItem("id"); //$NON-NLS-1$
+					if (att != null)
+						licenses.add(att.getNodeValue());
+				}
+			}
+		}
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
index 381b9f0..ea1c104 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
@@ -19,8 +19,7 @@ import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.ui.IProfileChooser;
-import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.dialogs.InstallWizard;
 import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.jface.viewers.ISelectionProvider;
@@ -30,8 +29,8 @@ import org.eclipse.swt.widgets.Shell;
 
 public class InstallAction extends ProfileModificationAction {
 
-	public InstallAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.INSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, shell);
+	public InstallAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
+		super(ProvUI.INSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, licenseManager, shell);
 		setToolTipText(ProvUI.INSTALL_COMMAND_TOOLTIP);
 	}
 
@@ -62,7 +61,7 @@ public class InstallAction extends ProfileModificationAction {
 	}
 
 	protected void performOperation(IInstallableUnit[] ius, Profile targetProfile) {
-		InstallWizard wizard = new InstallWizard(targetProfile, ius);
+		InstallWizard wizard = new InstallWizard(targetProfile, ius, getLicenseManager());
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
 		dialog.open();
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
index 9a6169e..c0df261 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
@@ -27,7 +27,7 @@ import org.eclipse.swt.widgets.Shell;
 public class RevertAction extends ProfileModificationAction {
 
 	public RevertAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.REVERT_COMMAND_LABEL, selectionProvider, profile, chooser, shell);
+		super(ProvUI.REVERT_COMMAND_LABEL, selectionProvider, profile, chooser, null, shell);
 		setToolTipText(ProvUI.REVERT_COMMAND_TOOLTIP);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
index abf6b7b..069215c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
@@ -32,7 +32,7 @@ import org.eclipse.swt.widgets.Shell;
 public class UninstallAction extends ProfileModificationAction {
 
 	public UninstallAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.UNINSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, shell);
+		super(ProvUI.UNINSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, null, shell);
 		setToolTipText(ProvUI.UNINSTALL_COMMAND_TOOLTIP);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
index a1874e7..0ffd2ae 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
@@ -29,8 +29,8 @@ import org.eclipse.swt.widgets.Shell;
 
 public class UpdateAction extends ProfileModificationAction {
 
-	public UpdateAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.UPDATE_COMMAND_LABEL, selectionProvider, profile, chooser, shell);
+	public UpdateAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
+		super(ProvUI.UPDATE_COMMAND_LABEL, selectionProvider, profile, chooser, licenseManager, shell);
 		setToolTipText(ProvUI.UPDATE_COMMAND_TOOLTIP);
 	}
 
@@ -46,7 +46,7 @@ public class UpdateAction extends ProfileModificationAction {
 			}
 			if (iusWithUpdates.size() > 0) {
 
-				UpdateWizard wizard = new UpdateWizard(targetProfile, (IInstallableUnit[]) iusWithUpdates.toArray(new IInstallableUnit[iusWithUpdates.size()]));
+				UpdateWizard wizard = new UpdateWizard(targetProfile, (IInstallableUnit[]) iusWithUpdates.toArray(new IInstallableUnit[iusWithUpdates.size()]), getLicenseManager());
 				WizardDialog dialog = new WizardDialog(getShell(), wizard);
 				dialog.open();
 			}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
index 9593fc4..6b836ba 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
@@ -11,36 +11,24 @@
 package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.p2.ui.dialogs.InstallWizardPage;
+import org.eclipse.equinox.internal.p2.ui.dialogs.*;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.LicenseManager;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
-import org.eclipse.jface.wizard.Wizard;
 
 /**
  * @since 3.4
  */
-public class InstallWizard extends Wizard {
+public class InstallWizard extends UpdateOrInstallWizard {
 
-	InstallWizardPage page;
-	Profile profile;
-	IInstallableUnit[] ius;
-
-	public InstallWizard(Profile profile, IInstallableUnit[] ius) {
-		super();
+	public InstallWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super(profile, ius, licenseManager);
 		setWindowTitle(ProvUIMessages.InstallIUOperationLabel);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_INSTALL));
-		this.profile = profile;
-		this.ius = ius;
-	}
-
-	public void addPages() {
-		page = new InstallWizardPage(ius, profile);
-		addPage(page);
 	}
 
-	public boolean performFinish() {
-		return page.performFinish();
+	protected UpdateOrInstallWizardPage createMainPage(Profile profile, IInstallableUnit[] ius) {
+		return new InstallWizardPage(ius, profile, this);
 	}
-
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
index 60a29dd..19871df 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
@@ -54,6 +54,7 @@ public class UpdateAndInstallGroup {
 	Profile profile;
 	IRepositoryManipulator repositoryManipulator;
 	IProfileChooser profileChooser;
+	LicenseManager licenseManager;
 	private FontMetrics fm;
 	Button installedPropButton, availablePropButton, installButton, uninstallButton, updateButton;
 
@@ -61,11 +62,12 @@ public class UpdateAndInstallGroup {
 	 * Create an instance of this group.
 	 * 
 	 */
-	public UpdateAndInstallGroup(Composite parent, Profile profile, String installedString, String availableString, IRepositoryManipulator repositoryManipulator, IProfileChooser profileChooser, IProvElementQueryProvider queryProvider, FontMetrics fm) {
+	public UpdateAndInstallGroup(Composite parent, Profile profile, String installedString, String availableString, IRepositoryManipulator repositoryManipulator, IProfileChooser profileChooser, IProvElementQueryProvider queryProvider, LicenseManager licenseManager, FontMetrics fm) {
 
 		this.profile = profile;
 		this.repositoryManipulator = repositoryManipulator;
 		this.profileChooser = profileChooser;
+		this.licenseManager = licenseManager;
 
 		// tab folder
 		tabFolder = new TabFolder(parent, SWT.NONE);
@@ -187,7 +189,7 @@ public class UpdateAndInstallGroup {
 		availablePropButton = createVerticalButton(composite, ProvUIMessages.UpdateAndInstallGroup_Properties, false);
 		availablePropButton.setData(BUTTONACTION, new PropertyDialogAction(new SameShellProvider(parent.getShell()), availableIUViewer));
 		installButton = createVerticalButton(composite, ProvUIMessages.InstallIUCommandLabel, false);
-		installButton.setData(BUTTONACTION, new InstallAction(availableIUViewer, profile, null, parent.getShell()));
+		installButton.setData(BUTTONACTION, new InstallAction(availableIUViewer, profile, null, licenseManager, parent.getShell()));
 		if (repositoryManipulator != null) {
 			Button repoButton = createVerticalButton(composite, repositoryManipulator.getLabel(), false);
 			repoButton.setData(BUTTONACTION, new Action() {
@@ -285,7 +287,7 @@ public class UpdateAndInstallGroup {
 		uninstallButton = createVerticalButton(composite, ProvUIMessages.UninstallIUCommandLabel, false);
 		uninstallButton.setData(BUTTONACTION, new UninstallAction(installedIUViewer, profile, null, parent.getShell()));
 		updateButton = createVerticalButton(composite, ProvUIMessages.UpdateIUCommandLabel, false);
-		updateButton.setData(BUTTONACTION, new UpdateAction(installedIUViewer, profile, null, parent.getShell()));
+		updateButton.setData(BUTTONACTION, new UpdateAction(installedIUViewer, profile, null, licenseManager, parent.getShell()));
 		if (profileChooser != null) {
 			Button profileButton = createVerticalButton(composite, profileChooser.getLabel(), false);
 			profileButton.setData(BUTTONACTION, new Action() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
index c0e8672..97a07f7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
@@ -11,36 +11,24 @@
 package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.p2.ui.dialogs.UpdateWizardPage;
+import org.eclipse.equinox.internal.p2.ui.dialogs.*;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.LicenseManager;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
-import org.eclipse.jface.wizard.Wizard;
 
 /**
  * @since 3.4
  */
-public class UpdateWizard extends Wizard {
+public class UpdateWizard extends UpdateOrInstallWizard {
 
-	UpdateWizardPage page;
-	Profile profile;
-	IInstallableUnit[] ius;
-
-	public UpdateWizard(Profile profile, IInstallableUnit[] ius) {
-		super();
+	public UpdateWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super(profile, ius, licenseManager);
 		setWindowTitle(ProvUIMessages.UpdateAction_UpdatesAvailableTitle);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_UPDATE));
-		this.profile = profile;
-		this.ius = ius;
-	}
-
-	public void addPages() {
-		page = new UpdateWizardPage(ius, profile);
-		addPage(page);
 	}
 
-	public boolean performFinish() {
-		return page.performFinish();
+	protected UpdateOrInstallWizardPage createMainPage(Profile profile, IInstallableUnit[] ius) {
+		return new UpdateWizardPage(ius, profile, this);
 	}
-
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
index a735c0f..6e2a71e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
@@ -16,8 +16,7 @@ import org.eclipse.core.runtime.Status;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.ui.ProvUI;
-import org.eclipse.equinox.p2.ui.ProvUIActivator;
+import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.actions.InstallAction;
 import org.eclipse.equinox.p2.ui.model.InstalledIUElement;
 import org.eclipse.jface.util.LocalSelectionTransfer;
@@ -35,6 +34,7 @@ import org.eclipse.swt.widgets.Shell;
 public class InstallIUDropAdapter extends ViewerDropAdapter {
 
 	static boolean DEBUG = false;
+	LicenseManager licenseManager;
 
 	/**
 	 * Constructs a new drop adapter.
@@ -42,8 +42,9 @@ public class InstallIUDropAdapter extends ViewerDropAdapter {
 	 * @param viewer
 	 *            the navigator's viewer
 	 */
-	public InstallIUDropAdapter(StructuredViewer viewer) {
+	public InstallIUDropAdapter(StructuredViewer viewer, LicenseManager licenseManager) {
 		super(viewer);
+		this.licenseManager = licenseManager;
 	}
 
 	/**
@@ -143,7 +144,7 @@ public class InstallIUDropAdapter extends ViewerDropAdapter {
 					throw new UnsupportedOperationException("This ISelectionProvider is static, and cannot be modified."); //$NON-NLS-1$
 				}
 			};
-			InstallAction action = new InstallAction(selectionProvider, profile, null, getShell());
+			InstallAction action = new InstallAction(selectionProvider, profile, null, licenseManager, getShell());
 			if (DEBUG)
 				System.out.println("Running install action"); //$NON-NLS-1$
 			action.run();
