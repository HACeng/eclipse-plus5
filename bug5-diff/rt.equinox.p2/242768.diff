commit bf5da376138ebf1063bb2bccd12943ef26856cc1
Author: Susan Franklin <sfranklin>
Date:   Mon Oct 20 18:28:47 2008 +0000

    Bug 242768 - [ui] Colocated repository operations should improve progress monitor handling

15	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddArtifactRepositoryOperation.java
9	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddColocatedRepositoryOperation.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddMetadataRepositoryOperation.java
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProvisioningUtil.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveArtifactRepositoryOperation.java
10	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveColocatedRepositoryOperation.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveMetadataRepositoryOperation.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
index 6b99873..a03f998 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
@@ -194,6 +194,21 @@ public class AvailableIUGroup extends StructuredIUGroup {
 					return;
 				makeRepositoryVisible(event.getRepositoryLocation());
 			}
+
+			protected void refreshAll() {
+				display.asyncExec(new Runnable() {
+					public void run() {
+						final TreeViewer treeViewer = filteredTree.getViewer();
+						final Tree tree = treeViewer.getTree();
+						IWorkbench workbench = PlatformUI.getWorkbench();
+						if (workbench.isClosing())
+							return;
+						if (tree != null && !tree.isDisposed()) {
+							treeViewer.setInput(getNewInput());
+						}
+					}
+				});
+			}
 		};
 		ProvUIActivator.getDefault().addProvisioningListener(listener);
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddArtifactRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddArtifactRepositoryOperation.java
index 26b0f2c..24c8ef2 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddArtifactRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddArtifactRepositoryOperation.java
@@ -28,16 +28,20 @@ public class AddArtifactRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		added = true;
 		return okStatus();
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeArtifactRepository(locations[i], monitor);
+			ProvisioningUtil.removeArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		// assume the best if no exception is thrown;
 		added = false;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddColocatedRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddColocatedRepositoryOperation.java
index b78984c..af8052d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddColocatedRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddColocatedRepositoryOperation.java
@@ -33,18 +33,25 @@ public class AddColocatedRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length * 2);
+
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addMetadataRepository(locations[i]);
+			mon.worked(1);
 			ProvisioningUtil.addArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		added = true;
 		return okStatus();
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length * 2);
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(locations[i], monitor);
-			ProvisioningUtil.removeArtifactRepository(locations[i], monitor);
+			ProvisioningUtil.removeMetadataRepository(locations[i]);
+			mon.worked(1);
+			ProvisioningUtil.removeArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		added = false;
 		return okStatus();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddMetadataRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddMetadataRepositoryOperation.java
index 1ef0642..151738c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddMetadataRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/AddMetadataRepositoryOperation.java
@@ -28,16 +28,20 @@ public class AddMetadataRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addMetadataRepository(locations[i]);
+			mon.worked(1);
 		}
 		added = true;
 		return okStatus();
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(locations[i], monitor);
+			ProvisioningUtil.removeMetadataRepository(locations[i]);
+			mon.worked(1);
 		}
 		added = false;
 		return okStatus();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProvisioningUtil.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProvisioningUtil.java
index 011b059..ce22e83 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProvisioningUtil.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/ProvisioningUtil.java
@@ -91,7 +91,7 @@ public class ProvisioningUtil {
 		return director.getRollbackRepositoryLocation();
 	}
 
-	public static void removeMetadataRepository(URI location, IProgressMonitor monitor) throws ProvisionException {
+	public static void removeMetadataRepository(URI location) throws ProvisionException {
 		IMetadataRepositoryManager manager = (IMetadataRepositoryManager) ServiceHelper.getService(ProvUIActivator.getContext(), IMetadataRepositoryManager.class.getName());
 		if (manager == null) {
 			throw new ProvisionException(ProvUIMessages.ProvisioningUtil_NoRepositoryManager);
@@ -134,7 +134,7 @@ public class ProvisioningUtil {
 		return repo;
 	}
 
-	public static void removeArtifactRepository(URI location, IProgressMonitor monitor) throws ProvisionException {
+	public static void removeArtifactRepository(URI location) throws ProvisionException {
 		IArtifactRepositoryManager manager = (IArtifactRepositoryManager) ServiceHelper.getService(ProvUIActivator.getContext(), IArtifactRepositoryManager.class.getName());
 		if (manager == null) {
 			throw new ProvisionException(ProvUIMessages.ProvisioningUtil_NoRepositoryManager);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveArtifactRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveArtifactRepositoryOperation.java
index 758a0cd..b0b3371 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveArtifactRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveArtifactRepositoryOperation.java
@@ -28,8 +28,10 @@ public class RemoveArtifactRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeArtifactRepository(locations[i], monitor);
+			ProvisioningUtil.removeArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = true;
 		return okStatus();
@@ -54,8 +56,10 @@ public class RemoveArtifactRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = false;
 		return okStatus();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveColocatedRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveColocatedRepositoryOperation.java
index 69ee761..d7aeed5 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveColocatedRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveColocatedRepositoryOperation.java
@@ -28,9 +28,13 @@ public class RemoveColocatedRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length * 2);
+
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(locations[i], monitor);
-			ProvisioningUtil.removeArtifactRepository(locations[i], monitor);
+			ProvisioningUtil.removeMetadataRepository(locations[i]);
+			mon.worked(1);
+			ProvisioningUtil.removeArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = true;
 		return okStatus();
@@ -55,9 +59,13 @@ public class RemoveColocatedRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length * 2);
+
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addMetadataRepository(locations[i]);
+			mon.worked(1);
 			ProvisioningUtil.addArtifactRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = false;
 		return okStatus();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveMetadataRepositoryOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveMetadataRepositoryOperation.java
index 095625a..0b39086 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveMetadataRepositoryOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/operations/RemoveMetadataRepositoryOperation.java
@@ -28,8 +28,10 @@ public class RemoveMetadataRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedExecute(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
-			ProvisioningUtil.removeMetadataRepository(locations[i], monitor);
+			ProvisioningUtil.removeMetadataRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = true;
 		return okStatus();
@@ -54,8 +56,10 @@ public class RemoveMetadataRepositoryOperation extends RepositoryOperation {
 	}
 
 	protected IStatus doBatchedUndo(IProgressMonitor monitor, IAdaptable uiInfo) throws ProvisionException {
+		SubMonitor mon = SubMonitor.convert(monitor, locations.length);
 		for (int i = 0; i < locations.length; i++) {
 			ProvisioningUtil.addMetadataRepository(locations[i]);
+			mon.worked(1);
 		}
 		removed = false;
 		return okStatus();
