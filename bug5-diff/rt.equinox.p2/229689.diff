commit 1b1720e28ac6698f957a4b54aae5e1442c45bc41
Author: John Arthorne <johna>
Date:   Mon May 12 22:43:46 2008 +0000

    Bug 229689 p2 UpdateSiteArtifactRepository doesn't set mirrors URL, no mirrors used for legacy update sites

10	5	bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/MirrorSelector.java
6	0	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
12	0	bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/UpdateSite.java
11	4	bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepository.java
10	4	bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/MirrorSelector.java b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/MirrorSelector.java
index ed9083a..6f299b0 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/MirrorSelector.java
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/MirrorSelector.java
@@ -60,7 +60,7 @@ public class MirrorSelector {
 				return this.failureCount - that.failureCount;
 			//faster is better
 			if (this.bytesPerSecond != that.bytesPerSecond)
-				return (int) (this.bytesPerSecond - that.failureCount);
+				return (int) (this.bytesPerSecond - that.bytesPerSecond);
 			//trust that initial rank indicates geographical proximity
 			return this.initialRank - that.initialRank;
 		}
@@ -89,9 +89,14 @@ public class MirrorSelector {
 	public MirrorSelector(IRepository repository) {
 		this.repository = repository;
 		try {
-			URL repositoryURL = repository.getLocation();
-			if (repositoryURL != null)
-				this.baseURI = URLUtil.toURI(repositoryURL);
+			String base = (String) repository.getProperties().get(IRepository.PROP_MIRRORS_BASE_URL);
+			if (base != null) {
+				this.baseURI = new URI(base);
+			} else {
+				URL repositoryURL = repository.getLocation();
+				if (repositoryURL != null)
+					this.baseURI = URLUtil.toURI(repositoryURL);
+			}
 		} catch (URISyntaxException e) {
 			log("Error initializing mirrors for: " + repository.getLocation(), e); //$NON-NLS-1$
 		}
@@ -129,7 +134,7 @@ public class MirrorSelector {
 				infos[i] = new MirrorInfo(infoURL, i);
 			}
 			//p2: add the base site as the last resort mirror so we can track download speed and failure rate
-			infos[mirrorCount] = new MirrorInfo(repository.getLocation().toExternalForm(), mirrorCount);
+			infos[mirrorCount] = new MirrorInfo(baseURI.toString(), mirrorCount);
 			return infos;
 		} catch (Exception e) {
 			// log if absolute url
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
index cab96e4..4531865 100644
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
@@ -47,6 +47,12 @@ public interface IRepository extends IAdaptable {
 	public static final String PROP_DESCRIPTION = "description"; //$NON-NLS-1$
 
 	/**
+	 * The key for a string property providing the common base URL that should
+	 * be replaced with the mirror URL.
+	 */
+	public static final String PROP_MIRRORS_BASE_URL = "p2.mirrorsBaseURL"; //$NON-NLS-1$
+
+	/**
 	 * The key for a string property providing a URL that can return mirrors of this
 	 * repository.
 	 */
diff --git a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/UpdateSite.java b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/UpdateSite.java
index 0e62993..29a0a04 100644
--- a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/UpdateSite.java
+++ b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/UpdateSite.java
@@ -291,6 +291,18 @@ public class UpdateSite {
 		return location;
 	}
 
+	public String getMirrorsURL() {
+		//copy mirror information from update site to p2 repositories
+		String mirrors = site.getMirrorsURL();
+		if (mirrors == null)
+			return null;
+		//remove site.xml file reference
+		int index = mirrors.indexOf("site.xml"); //$NON-NLS-1$
+		if (index != -1)
+			mirrors = mirrors.substring(0, index) + mirrors.substring(index + "site.xml".length()); //$NON-NLS-1$
+		return mirrors;
+	}
+
 	/*
 	 * Return a URL which represents the location of the given plug-in.
 	 */
diff --git a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepository.java b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepository.java
index a519584..62fe110 100644
--- a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/artifact/UpdateSiteArtifactRepository.java
@@ -19,6 +19,7 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.updatesite.*;
 import org.eclipse.equinox.internal.provisional.p2.artifact.repository.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
+import org.eclipse.equinox.internal.provisional.p2.core.repository.IRepository;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IArtifactKey;
 import org.eclipse.equinox.internal.provisional.p2.metadata.generator.*;
 import org.eclipse.equinox.internal.provisional.spi.p2.artifact.repository.SimpleArtifactRepositoryFactory;
@@ -53,7 +54,7 @@ public class UpdateSiteArtifactRepository extends AbstractRepository implements
 		} catch (MalformedURLException e) {
 			throw new ProvisionException(new Status(IStatus.ERROR, Activator.ID, Messages.ErrorCreatingRepository, e));
 		}
-		artifactRepository = initializeArtifactRepository(context, localRepositoryURL, "update site implementation - " + location.toExternalForm()); //$NON-NLS-1$
+		artifactRepository = initializeArtifactRepository(context, localRepositoryURL, "update site implementation - " + location.toExternalForm(), updateSite); //$NON-NLS-1$
 
 		String savedChecksum = (String) artifactRepository.getProperties().get(PROP_SITE_CHECKSUM);
 		if (savedChecksum != null && savedChecksum.equals(updateSite.getChecksum()))
@@ -99,15 +100,21 @@ public class UpdateSiteArtifactRepository extends AbstractRepository implements
 		UpdateSite.validate(url, monitor);
 	}
 
-	private IArtifactRepository initializeArtifactRepository(BundleContext context, URL stateDirURL, String repositoryName) {
+	private IArtifactRepository initializeArtifactRepository(BundleContext context, URL stateDirURL, String repositoryName, UpdateSite updateSite) {
 		SimpleArtifactRepositoryFactory factory = new SimpleArtifactRepositoryFactory();
 		try {
 			return factory.load(stateDirURL, null);
 		} catch (ProvisionException e) {
 			//fall through and create a new repository
 		}
-		// TODO might want to pass along repository properties?
-		return factory.create(stateDirURL, repositoryName, null, null);
+		Map props = new HashMap(5);
+		String mirrors = updateSite.getMirrorsURL();
+		if (mirrors != null) {
+			props.put(IRepository.PROP_MIRRORS_URL, mirrors);
+			//set the mirror base URL relative to the real remote repository rather than our local cache
+			props.put(IRepository.PROP_MIRRORS_BASE_URL, getLocation().toExternalForm());
+		}
+		return factory.create(stateDirURL, repositoryName, null, props);
 	}
 
 	public Map getProperties() {
diff --git a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
index b2ce97a..04675bd 100644
--- a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
@@ -63,7 +63,7 @@ public class UpdateSiteMetadataRepository extends AbstractMetadataRepository {
 			throw new ProvisionException(new Status(IStatus.ERROR, Activator.ID, Messages.ErrorCreatingRepository, e));
 		}
 
-		metadataRepository = initializeMetadataRepository(context, localRepositoryURL, "update site implementation - " + location.toExternalForm()); //$NON-NLS-1$
+		metadataRepository = initializeMetadataRepository(context, localRepositoryURL, "update site implementation - " + location.toExternalForm(), updateSite); //$NON-NLS-1$
 
 		String savedChecksum = (String) metadataRepository.getProperties().get(PROP_SITE_CHECKSUM);
 		if (savedChecksum != null && savedChecksum.equals(updateSite.getChecksum()))
@@ -179,15 +179,21 @@ public class UpdateSiteMetadataRepository extends AbstractMetadataRepository {
 		UpdateSite.validate(url, monitor);
 	}
 
-	private IMetadataRepository initializeMetadataRepository(BundleContext context, URL stateDirURL, String repositoryName) {
+	private IMetadataRepository initializeMetadataRepository(BundleContext context, URL stateDirURL, String repositoryName, UpdateSite updateSite) {
 		SimpleMetadataRepositoryFactory factory = new SimpleMetadataRepositoryFactory();
 		try {
 			return factory.load(stateDirURL, null);
 		} catch (ProvisionException e) {
 			//fall through and create a new repository
 		}
-		// TODO might want to pass along repository properties?
-		return factory.create(stateDirURL, repositoryName, null, null);
+		Map props = new HashMap(5);
+		String mirrors = updateSite.getMirrorsURL();
+		if (mirrors != null) {
+			props.put(IRepository.PROP_MIRRORS_URL, mirrors);
+			//set the mirror base URL relative to the real remote repository rather than our local cache
+			props.put(IRepository.PROP_MIRRORS_BASE_URL, getLocation().toExternalForm());
+		}
+		return factory.create(stateDirURL, repositoryName, null, props);
 	}
 
 	private BundleDescriptionFactory initializeBundleDescriptionFactory(BundleContext context) {
