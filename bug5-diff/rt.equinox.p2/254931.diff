commit 2d9bc743bf378e834f6c5a605367e2355e84571d
Author: Simon Kaegi <skaegi>
Date:   Mon Dec 8 21:18:11 2008 +0000

    Bug 254931 [engine] Enhance information made available when a failure occurs in the engine

2	2	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
1	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Messages.java
1	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/messages.properties
49	7	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/EngineSession.java
8	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Messages.java
5	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Phase.java
8	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/messages.properties
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
index 0581caf..f023133 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
@@ -77,7 +77,7 @@ public class InstructionParser {
 		int openBracket = statement.indexOf('(');
 		int closeBracket = statement.lastIndexOf(')');
 		if (openBracket == -1 || closeBracket == -1 || openBracket > closeBracket)
-			throw new IllegalArgumentException(statement);
+			throw new IllegalArgumentException(NLS.bind(Messages.action_syntax_error, statement));
 		String actionName = statement.substring(0, openBracket).trim();
 		ProvisioningAction action = lookupAction(actionName, qualifier, touchpointType);
 
@@ -91,7 +91,7 @@ public class InstructionParser {
 			String nameValuePair = tokenizer.nextToken();
 			int colonIndex = nameValuePair.indexOf(":"); //$NON-NLS-1$
 			if (colonIndex == -1)
-				throw new IllegalArgumentException(statement);
+				throw new IllegalArgumentException(NLS.bind(Messages.action_syntax_error, statement));
 			String name = nameValuePair.substring(0, colonIndex).trim();
 			String value = nameValuePair.substring(colonIndex + 1).trim();
 			parameters.put(name, value);
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Messages.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Messages.java
index 5376aa2..1d5cfe9 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Messages.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Messages.java
@@ -54,8 +54,8 @@ class Messages extends NLS {
 	public static String TouchpointManager_Incorrectly_Named_Extension;
 	public static String TouchpointManager_Null_Creating_Touchpoint_Extension;
 	public static String TouchpointManager_Null_Touchpoint_Type_Argument;
-
 	public static String shared_profile_not_found;
+	public static String action_syntax_error;
 
 	static {
 		// initialize resource bundles
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/messages.properties b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/messages.properties
index d1665d6..6f15bc5 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/messages.properties
@@ -12,6 +12,7 @@
 ActionManager_Exception_Creating_Action_Extension=Error creating action with id: {0}.
 ActionManager_Required_Touchpoint_Not_Found=The required {0} touchpoint for the {1} action is not included in the installation manager configuration.
 action_not_found=No action found for: {0}.
+action_syntax_error=Invalid action syntax: {0}.
 download_artifact=Downloading artifacts
 download_no_repository=No artifact repository available.
 
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/EngineSession.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/EngineSession.java
index 9ced755..a59fc11 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/EngineSession.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/EngineSession.java
@@ -18,6 +18,8 @@ import org.eclipse.osgi.util.NLS;
 
 public class EngineSession {
 
+	private static final String EMPTY_STRING = ""; //$NON-NLS-1$
+
 	private static class ActionsRecord {
 		Operand operand;
 		List actions = new ArrayList();
@@ -170,21 +172,61 @@ public class EngineSession {
 		phaseActionRecordsPairs.add(new Object[] {currentPhase, currentActionRecords});
 		currentPhase = null;
 		currentActionRecords = null;
+	}
+
+	void recordOperandStart(Operand operand) {
+		if (operand == null)
+			throw new IllegalArgumentException(Messages.null_operand);
+
+		if (currentRecord != null)
+			throw new IllegalStateException(Messages.operand_started);
+
+		currentRecord = new ActionsRecord(operand);
+		currentActionRecords.add(currentRecord);
+	}
+
+	void recordOperandEnd(Operand operand) {
+		if (currentRecord == null)
+			throw new IllegalStateException(Messages.operand_not_started);
+
+		if (currentRecord.operand != operand)
+			throw new IllegalArgumentException(Messages.not_current_operand);
+
 		currentRecord = null;
 	}
 
-	void recordAction(ProvisioningAction action, Operand operand) {
-		if (action == null || operand == null)
-			throw new IllegalArgumentException(Messages.action_or_iu_operand_null);
+	void recordAction(ProvisioningAction action) {
+		if (action == null)
+			throw new IllegalArgumentException(Messages.null_action);
 
-		if (currentRecord == null || operand != currentRecord.operand) {
-			currentRecord = new ActionsRecord(operand);
-			currentActionRecords.add(currentRecord);
-		}
 		currentRecord.actions.add(action);
 
 		Touchpoint touchpoint = action.getTouchpoint();
 		if (touchpoint != null)
 			touchpoints.add(touchpoint);
 	}
+
+	public String getContextString() {
+		return NLS.bind(Messages.session_context, new Object[] {profile.getProfileId(), getCurrentPhaseId(), getCurrentOperandId(), getCurrentActionId()});
+	}
+
+	private Object getCurrentActionId() {
+		if (currentRecord == null || currentRecord.actions.isEmpty())
+			return EMPTY_STRING;
+
+		Object currentAction = currentRecord.actions.get(currentRecord.actions.size() - 1);
+		return currentAction.getClass().getName();
+	}
+
+	private String getCurrentPhaseId() {
+		if (currentPhase == null)
+			return EMPTY_STRING;
+		return currentPhase.getClass().getName();
+	}
+
+	private String getCurrentOperandId() {
+		if (currentRecord == null)
+			return EMPTY_STRING;
+		return currentRecord.operand.toString();
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Messages.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Messages.java
index bb9fee5..96dbb1d 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Messages.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Messages.java
@@ -20,13 +20,13 @@ public class Messages extends NLS {
 	public static String CertificateChecker_KeystoreConnectionError;
 	public static String CertificateChecker_SignedContentIOError;
 	public static String CertificateChecker_SignedContentError;
-	public static String action_or_iu_operand_null;
 	public static String not_current_phase;
 	public static String null_operands;
 	public static String null_phase;
 	public static String null_phases;
 	public static String null_phaseset;
 	public static String null_profile;
+	public static String operand_error;
 	public static String phase_error;
 	public static String phase_not_started;
 	public static String phase_started;
@@ -38,6 +38,13 @@ public class Messages extends NLS {
 	public static String touchpoint_rollback_error;
 	public static String phase_undo_error;
 	public static String session_commit_error;
+	public static String session_rollback_error;
+	public static String null_operand;
+	public static String operand_started;
+	public static String operand_not_started;
+	public static String not_current_operand;
+	public static String null_action;
+	public static String session_context;
 
 	static {
 		// initialize resource bundle
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Phase.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Phase.java
index 3dc828f..a8bb285 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Phase.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/Phase.java
@@ -71,6 +71,7 @@ public abstract class Phase {
 			return result;
 		} else if (status.matches(IStatus.ERROR)) {
 			MultiStatus result = new MultiStatus(EngineActivator.ID, IStatus.ERROR, getProblemMessage(), null);
+			result.add(new Status(IStatus.ERROR, EngineActivator.ID, session.getContextString(), null));
 			result.merge(status);
 			return result;
 		}
@@ -116,6 +117,7 @@ public abstract class Phase {
 			if (!isApplicable(operand))
 				continue;
 
+			session.recordOperandStart(operand);
 			ProvisioningAction[] actions = getActions(operand);
 			Map operandParameters = new HashMap(phaseParameters);
 			operandParameters.put(PARM_OPERAND, operand);
@@ -136,16 +138,18 @@ public abstract class Phase {
 
 						parameters = (Map) touchpointToTouchpointOperandParameters.get(touchpoint);
 					}
-					session.recordAction(action, operand);
+					session.recordAction(action);
 					mergeStatus(status, action.execute(parameters));
 					if (status.matches(IStatus.ERROR | IStatus.CANCEL))
 						return;
+
 				}
 			}
 
 			mergeStatus(status, completeOperand(profile, operand, operandParameters, subMonitor));
 			if (status.matches(IStatus.ERROR | IStatus.CANCEL))
 				return;
+			session.recordOperandEnd(operand);
 			subMonitor.worked(1);
 		}
 	}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/messages.properties b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/messages.properties
index 6529da0..59597c3 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/provisional/p2/engine/messages.properties
@@ -8,7 +8,6 @@
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
-action_or_iu_operand_null=Action and InstallableUnitOperand must not be null.
 not_current_phase=Current phase does not match argument.
 null_operands=Operands must not be null.
 null_phase=Phase must not be null.
@@ -17,6 +16,7 @@ null_phaseset=PhaseSet must not be null.
 null_profile=Profile must not be null.
 touchpoint_commit_error=An error occurred while committing the {0} touchpoint.
 touchpoint_rollback_error=An error occurred while rolling back the {0} touchpoint.
+operand_error=An error occurred processing operand: {0}. 
 phase_error=An error occurred during the {0} phase.
 phase_undo_error=An error occurred while undoing the {0} phase.
 phase_not_started=There is no phase to end.
@@ -24,6 +24,13 @@ phase_started=A phase is already started.
 phaseid_not_positive=Phase weight must be positive.
 phaseid_not_set=Phase id must be set.
 session_commit_error=An error occurred while committing the engine session for profile: {0}.
+session_rollback_error=An error occurred while rolling back the engine session for profile: {0}.
+null_operand=Operand must not be null.
+operand_started=An operand is already started.
+operand_not_started=There is no operand to end.
+not_current_operand=Current operand does not match argument.
+null_action=Action must not be null
+session_context=session context was:(profile={0}, phase={1}, operand={2}, action={3}).
 
 Engine_Operation_Canceled_By_User=Operation canceled by the user.
 InstallableUnitEvent_type_not_install_or_uninstall=type must be either UNINSTALL(0) or INSTALL(1)
