commit 191465b24391074b9bb4b1bef0518ad3e3c9d135
Author: Susan Franklin <sfranklin>
Date:   Tue Feb 12 19:21:43 2008 +0000

    Bug 217001 - [prov] [ui] [metadata] can IU license and copyright properties be URLs?
    Bug 216911 -  [prov] [ui] IUs have only one license

7	0	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/persistence/XMLConstants.java
11	1	bundles/org.eclipse.equinox.p2.director/src/org/eclipse/equinox/internal/p2/director/NewDependencyExpander.java
3	3	bundles/org.eclipse.equinox.p2.metadata.generator/Metadata Generator SDK.launch
10	2	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/MetadataGeneratorHelper.java
103	0	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
28	0	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter.java
19	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/InstallableUnit.java
11	2	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/ResolvedInstallableUnit.java
67	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/Copyright.java
15	25	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/IInstallableUnit.java
144	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/License.java
18	0	bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/MetadataFactory.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
2	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
9	0	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
0	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
3	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUPropertiesGroup.java
0	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
16	15	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
15	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/LicenseManager.java
27	29	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
38	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
0	16	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUGeneralInfoPropertyPage.java
39	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/persistence/XMLConstants.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/persistence/XMLConstants.java
index 0a48d86..607b846 100644
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/persistence/XMLConstants.java
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/persistence/XMLConstants.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.persistence;
 
@@ -40,6 +41,12 @@ public interface XMLConstants {
 	public static final String CLASSIFIER_ATTRIBUTE = "classifier"; //$NON-NLS-1$
 	public static final String DESCRIPTION_ATTRIBUTE = "description"; //$NON-NLS-1$
 	public static final String PROVIDER_ATTRIBUTE = "provider"; //$NON-NLS-1$
+	public static final String URL_ATTRIBUTE = "url"; //$NON-NLS-1$
+
+	// Constants for the license and copyright elements
+	public static final String LICENSES_ELEMENT = "licenses"; //$NON-NLS-1$
+	public static final String LICENSE_ELEMENT = "license"; //$NON-NLS-1$
+	public static final String COPYRIGHT_ELEMENT = "copyright"; //$NON-NLS-1$
 
 	// A constant for the name of an attribute of a collection or array element
 	// specifying the size or length
diff --git a/bundles/org.eclipse.equinox.p2.director/src/org/eclipse/equinox/internal/p2/director/NewDependencyExpander.java b/bundles/org.eclipse.equinox.p2.director/src/org/eclipse/equinox/internal/p2/director/NewDependencyExpander.java
index d1a9af8..c4d13fc 100644
--- a/bundles/org.eclipse.equinox.p2.director/src/org/eclipse/equinox/internal/p2/director/NewDependencyExpander.java
+++ b/bundles/org.eclipse.equinox.p2.director/src/org/eclipse/equinox/internal/p2/director/NewDependencyExpander.java
@@ -4,7 +4,9 @@
  * the Eclipse Public License v1.0 which accompanies this distribution, and is
  * available at http://www.eclipse.org/legal/epl-v10.html
  * 
- * Contributors: IBM Corporation - initial API and implementation
+ * Contributors: 
+ * 	IBM Corporation - initial API and implementation
+ * 	Genuitec, LLC - added license support
  ******************************************************************************/
 package org.eclipse.equinox.internal.p2.director;
 
@@ -214,6 +216,14 @@ public class NewDependencyExpander {
 		public IUpdateDescriptor getUpdateDescriptor() {
 			return wrapped.getUpdateDescriptor();
 		}
+
+		public License getLicense() {
+			return wrapped.getLicense();
+		}
+
+		public Copyright getCopyright() {
+			return wrapped.getCopyright();
+		}
 	}
 
 	static final int OperationWork = 100;
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/Metadata Generator SDK.launch b/bundles/org.eclipse.equinox.p2.metadata.generator/Metadata Generator SDK.launch
index 8649626..2fd1986 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/Metadata Generator SDK.launch	
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/Metadata Generator SDK.launch	
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?xml version="1.0" encoding="UTF-8"?>
 <launchConfiguration type="org.eclipse.pde.ui.EquinoxLauncher">
 <booleanAttribute key="append.args" value="true"/>
 <booleanAttribute key="automaticAdd" value="false"/>
@@ -11,8 +11,8 @@
 <intAttribute key="default_start_level" value="4"/>
 <booleanAttribute key="includeOptional" value="false"/>
 <booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
-<stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jre1.6.0"/>
-<stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-console &#13;&#10;-consolelog&#13;&#10;-application org.eclipse.equinox.p2.metadata.generator.EclipseGenerator&#13;&#10;-metadataRepository file:C:/prov/p2/servers/&#13;&#10;-artifactRepository file:C:/prov/p2/servers/&#13;&#10;-source d:\oldeclipses\3.3\eclipse&#13;&#10;-root sdk&#13;&#10;-rootVersion 3.3.0&#13;&#10;-flavor tooling&#13;&#10;-publishArtifacts&#13;&#10;-append"/>
+<stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/j2sdk1.4.2_08"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-console &#13;&#10;-consolelog&#13;&#10;-application org.eclipse.equinox.p2.metadata.generator.EclipseGenerator&#13;&#10;-metadataRepository file:C:/equinox.p2/servers/&#13;&#10;-artifactRepository file:C:/equinox.p2/servers/&#13;&#10;-source c:\eclipse\latest\eclipse&#13;&#10;-root sdk&#13;&#10;-rootVersion 3.4.0.I20080212withcopyrightlicensechanges&#13;&#10;-flavor tooling&#13;&#10;-publishArtifacts&#13;&#10;-append"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.pde.ui.workbenchClasspathProvider"/>
 <stringAttribute key="pde.version" value="3.3"/>
 <booleanAttribute key="show_selected_only" value="false"/>
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/MetadataGeneratorHelper.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/MetadataGeneratorHelper.java
index 130e097..9d7d42c 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/MetadataGeneratorHelper.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/MetadataGeneratorHelper.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.metadata.generator;
 
@@ -30,7 +31,7 @@ import org.eclipse.osgi.util.ManifestElement;
 import org.osgi.framework.*;
 
 public class MetadataGeneratorHelper {
-	private static final String[] BUNDLE_IU_PROPERTY_MAP = {Constants.BUNDLE_NAME, IInstallableUnit.PROP_NAME, Constants.BUNDLE_DESCRIPTION, IInstallableUnit.PROP_DESCRIPTION, Constants.BUNDLE_VENDOR, IInstallableUnit.PROP_PROVIDER, Constants.BUNDLE_CONTACTADDRESS, IInstallableUnit.PROP_CONTACT, Constants.BUNDLE_COPYRIGHT, IInstallableUnit.PROP_COPYRIGHT, Constants.BUNDLE_DOCURL, IInstallableUnit.PROP_DOC_URL, Constants.BUNDLE_UPDATELOCATION, IInstallableUnit.PROP_UPDATE_SITE};
+	private static final String[] BUNDLE_IU_PROPERTY_MAP = {Constants.BUNDLE_NAME, IInstallableUnit.PROP_NAME, Constants.BUNDLE_DESCRIPTION, IInstallableUnit.PROP_DESCRIPTION, Constants.BUNDLE_VENDOR, IInstallableUnit.PROP_PROVIDER, Constants.BUNDLE_CONTACTADDRESS, IInstallableUnit.PROP_CONTACT, Constants.BUNDLE_DOCURL, IInstallableUnit.PROP_DOC_URL, Constants.BUNDLE_UPDATELOCATION, IInstallableUnit.PROP_UPDATE_SITE};
 
 	private static final String CAPABILITY_TYPE_OSGI_PACKAGES = "osgi.packages"; //$NON-NLS-1$
 	private static final String CAPABILITY_TYPE_OSGI_BUNDLES = "osgi.bundles"; //$NON-NLS-1$
@@ -372,6 +373,10 @@ public class MetadataGeneratorHelper {
 		iu.setId(id);
 		Version version = new Version(feature.getVersion());
 		iu.setVersion(version);
+		if (feature.getLicense() != null)
+			iu.setLicense(new License(feature.getLicenseURL(), feature.getLicense()));
+		if (feature.getCopyright() != null)
+			iu.setCopyright(new Copyright(feature.getCopyrightURL(), feature.getCopyright()));
 
 		// TODO: The required capabilities are specified
 		//		 by the feature group; is this right?
@@ -413,7 +418,10 @@ public class MetadataGeneratorHelper {
 		Version version = new Version(feature.getVersion());
 		iu.setVersion(version);
 		iu.setProperty(IInstallableUnit.PROP_NAME, feature.getLabel());
-
+		if (feature.getLicense() != null)
+			iu.setLicense(new License(feature.getLicenseURL(), feature.getLicense()));
+		if (feature.getCopyright() != null)
+			iu.setCopyright(new Copyright(feature.getCopyrightURL(), feature.getCopyright()));
 		iu.setUpdateDescriptor(MetadataFactory.createUpdateDescriptor(id, VersionRange.emptyRange, IUpdateDescriptor.NORMAL, null));
 
 		FeatureEntry entries[] = feature.getEntries();
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
index 0f16939..c575a18 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.metadata.repository.io;
 
@@ -21,6 +22,7 @@ import org.eclipse.osgi.service.resolver.VersionRange;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.Version;
 import org.xml.sax.Attributes;
+import org.xml.sax.ContentHandler;
 
 public abstract class MetadataParser extends XMLParser implements XMLConstants {
 
@@ -74,6 +76,8 @@ public abstract class MetadataParser extends XMLParser implements XMLConstants {
 		private TouchpointTypeHandler touchpointTypeHandler = null;
 		private TouchpointDataHandler touchpointDataHandler = null;
 		private UpdateDescriptorHandler updateDescriptorHandler = null;
+		private LicensesHandler licensesHandler = null;
+		private CopyrightHandler copyrightHandler = null;
 
 		public InstallableUnitHandler(AbstractHandler parentHandler, Attributes attributes, List units) {
 			super(parentHandler, INSTALLABLE_UNIT_ELEMENT);
@@ -167,6 +171,18 @@ public abstract class MetadataParser extends XMLParser implements XMLConstants {
 			} else if (UPDATE_DESCRIPTOR_ELEMENT.equals(name)) {
 				if (updateDescriptorHandler == null)
 					updateDescriptorHandler = new UpdateDescriptorHandler(this, attributes);
+			} else if (LICENSES_ELEMENT.equals(name)) {
+				if (licensesHandler == null) {
+					licensesHandler = new LicensesHandler(this, attributes);
+				} else {
+					duplicateElement(this, name, attributes);
+				}
+			} else if (COPYRIGHT_ELEMENT.equals(name)) {
+				if (copyrightHandler == null) {
+					copyrightHandler = new CopyrightHandler(this, attributes);
+				} else {
+					duplicateElement(this, name, attributes);
+				}
 			} else {
 				invalidElement(name, attributes);
 			}
@@ -197,6 +213,16 @@ public abstract class MetadataParser extends XMLParser implements XMLConstants {
 					currentUnit.setUpdateDescriptor(MetadataFactory.createUpdateDescriptor(updateFrom, updateRange, IUpdateDescriptor.NORMAL, null));
 				//End of backward compatibility
 
+				if (licensesHandler != null) {
+					License license = licensesHandler.getLicense();
+					currentUnit.setLicense(license);
+				}
+
+				if (copyrightHandler != null) {
+					Copyright copyright = copyrightHandler.getCopyright();
+					currentUnit.setCopyright(copyright);
+				}
+
 				ProvidedCapability[] providedCapabilities = (providedCapabilitiesHandler == null ? new ProvidedCapability[0] : providedCapabilitiesHandler.getProvidedCapabilities());
 				currentUnit.setCapabilities(providedCapabilities);
 				RequiredCapability[] requiredCapabilities = (requiredCapabilitiesHandler == null ? new RequiredCapability[0] : requiredCapabilitiesHandler.getRequiredCapabilities());
@@ -504,4 +530,81 @@ public abstract class MetadataParser extends XMLParser implements XMLConstants {
 			return descriptor;
 		}
 	}
+
+	/**
+	 * 	Handler for a list of licenses.
+	 */
+	protected class LicensesHandler extends AbstractHandler {
+		// Note this handler is set up to handle multiple license elements, but for now
+		// the API for IInstallableUnit only reflects one.
+		// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=216911
+		private List licenses;
+
+		public LicensesHandler(ContentHandler parentHandler, Attributes attributes) {
+			super(parentHandler, LICENSES_ELEMENT);
+			String size = parseOptionalAttribute(attributes, COLLECTION_SIZE_ATTRIBUTE);
+			licenses = (size != null ? new ArrayList(new Integer(size).intValue()) : new ArrayList(2));
+		}
+
+		public License getLicense() {
+			if (licenses.size() == 0)
+				return null;
+			return (License) licenses.get(0);
+		}
+
+		public void startElement(String name, Attributes attributes) {
+			if (name.equals(LICENSE_ELEMENT)) {
+				new LicenseHandler(this, attributes, licenses);
+			} else {
+				invalidElement(name, attributes);
+			}
+		}
+
+	}
+
+	/**
+	 * 	Handler for a license in an list of licenses.
+	 */
+	protected class LicenseHandler extends TextHandler {
+
+		String url = null;
+
+		private final List licenses;
+
+		public LicenseHandler(AbstractHandler parentHandler, Attributes attributes, List licenses) {
+			super(parentHandler, LICENSE_ELEMENT);
+			url = parseOptionalAttribute(attributes, URL_ATTRIBUTE);
+			this.licenses = licenses;
+		}
+
+		protected void finished() {
+			if (isValidXML()) {
+				licenses.add(new License(url, getText()));
+			}
+		}
+	}
+
+	/**
+	 * 	Handler for a copyright.
+	 */
+	protected class CopyrightHandler extends TextHandler {
+
+		String url = null;
+		private Copyright copyright;
+
+		public CopyrightHandler(AbstractHandler parentHandler, Attributes attributes) {
+			super(parentHandler, COPYRIGHT_ELEMENT);
+			url = parseOptionalAttribute(attributes, URL_ATTRIBUTE);
+		}
+
+		protected void finished() {
+			if (isValidXML()) {
+				copyright = new Copyright(url, getText());
+			}
+		}
+
+		public Copyright getCopyright() {
+			return copyright;
+		}
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter.java
index ab9016d..c096ef8 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataWriter.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.metadata.repository.io;
 
@@ -63,6 +64,8 @@ public abstract class MetadataWriter extends XMLWriter implements XMLConstants {
 		writeArtifactKeys(iu.getArtifacts());
 		writeTouchpointType(iu.getTouchpointType());
 		writeTouchpointData(iu.getTouchpointData());
+		writeLicenses(iu.getLicense());
+		writeCopyright(iu.getCopyright());
 
 		end(INSTALLABLE_UNIT_ELEMENT);
 	}
@@ -183,4 +186,29 @@ public abstract class MetadataWriter extends XMLWriter implements XMLConstants {
 			end(element);
 		}
 	}
+
+	private void writeLicenses(License license) {
+		if (license != null) {
+			// In the future there may be more than one license, so we write this 
+			// as a collection of one.
+			// See bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=216911
+			start(LICENSES_ELEMENT);
+			attribute(COLLECTION_SIZE_ATTRIBUTE, 1);
+			start(LICENSE_ELEMENT);
+			attribute(URL_ATTRIBUTE, license.getURL().toExternalForm());
+			cdata(license.getBody(), true);
+			end(LICENSE_ELEMENT);
+			end(LICENSES_ELEMENT);
+		}
+	}
+
+	private void writeCopyright(Copyright copyright) {
+		if (copyright != null) {
+			start(COPYRIGHT_ELEMENT);
+			attribute(URL_ATTRIBUTE, copyright.getURL().toExternalForm());
+			cdata(copyright.getBody(), true);
+			end(COPYRIGHT_ELEMENT);
+		}
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/InstallableUnit.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/InstallableUnit.java
index ea30fdf..943fcc6 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/InstallableUnit.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/InstallableUnit.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.metadata;
 
@@ -42,6 +43,8 @@ public class InstallableUnit implements IInstallableUnit {
 	private Version version;
 
 	private IUpdateDescriptor updateInfo;
+	private License license;
+	private Copyright copyright;
 
 	public InstallableUnit() {
 		super();
@@ -259,4 +262,20 @@ public class InstallableUnit implements IInstallableUnit {
 	public void setUpdateDescriptor(IUpdateDescriptor updateInfo) {
 		this.updateInfo = updateInfo;
 	}
+
+	public void setLicense(License license) {
+		this.license = license;
+	}
+
+	public License getLicense() {
+		return license;
+	}
+
+	public void setCopyright(Copyright copyright) {
+		this.copyright = copyright;
+	}
+
+	public Copyright getCopyright() {
+		return copyright;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/ResolvedInstallableUnit.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/ResolvedInstallableUnit.java
index 861d409..855a434 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/ResolvedInstallableUnit.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/p2/metadata/ResolvedInstallableUnit.java
@@ -5,8 +5,9 @@
  * which accompanies this distribution, and is available at
  * http://www.eclipse.org/legal/epl-v10.html
  *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * Contributors: 
+ * 		IBM Corporation - initial API and implementation
+ * 		Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.metadata;
 
@@ -157,4 +158,12 @@ public class ResolvedInstallableUnit implements IInstallableUnit {
 		return original.getUpdateDescriptor();
 	}
 
+	public License getLicense() {
+		return original.getLicense();
+	}
+
+	public Copyright getCopyright() {
+		return original.getCopyright();
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/Copyright.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/Copyright.java
new file mode 100644
index 0000000..f4d1548
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/Copyright.java
@@ -0,0 +1,67 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.provisional.p2.metadata;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+
+/**
+ * The <code>Copyright</code> class represents a software copyright.  A copyright has 
+ * required body text which may be the full text or an annotation.  An optional URL field can be specified
+ * which links to full text.  
+ */
+public class Copyright {
+	/**
+	 * The <code>body</code> contains the descriptive text for the coypright. This may
+	 * be a summary for a copyright specified in a URL.
+	 */
+	private final String body;
+
+	/**
+	 * The <code>url</code> is the URL of the copyright.
+	 */
+	private URL url;
+
+	/**
+	 * Creates a new copyright.
+	 * The body should contain the full text of the copyright.
+	 * @param urlString the string describing the URL of the full copyright text, may be <code>null</code>
+	 * @param body the copyright body, cannot be <code>null</code>
+	 * @throws IllegalArgumentException when the <code>body</code> is <code>null</code>
+	 */
+	public Copyright(String urlString, String body) {
+		if (body == null)
+			throw new IllegalArgumentException("body cannot be null"); //$NON-NLS-1$
+		if (urlString != null)
+			try {
+				url = new URL(urlString);
+			} catch (MalformedURLException e) {
+				url = null;
+			}
+		this.body = body;
+	}
+
+	/**
+	 * Returns the URL containing the full description of the license.
+	 * May be <code>null</code>.
+	 */
+	public URL getURL() {
+		return url;
+	}
+
+	/**
+	 * Returns the license body.
+	 * @return the license body, never <code>null</code>
+	 */
+	public String getBody() {
+		return body;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/IInstallableUnit.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/IInstallableUnit.java
index 2453f81..945a317 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/IInstallableUnit.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/IInstallableUnit.java
@@ -4,7 +4,9 @@
  * the Eclipse Public License v1.0 which accompanies this distribution, and is
  * available at http://www.eclipse.org/legal/epl-v10.html
  * 
- * Contributors: IBM Corporation - initial API and implementation
+ * Contributors: 
+ * 		IBM Corporation - initial API and implementation
+ * 		Genuitec, LLC - added license support
  ******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.metadata;
 
@@ -53,13 +55,6 @@ public interface IInstallableUnit extends Comparable {
 	 */
 	public static final String PROP_CONTACT = "equinox.p2.contact"; //$NON-NLS-1$
 	/**
-	 * A property key (value <code>"equinox.p2.copyright"</code>) representing a 
-	 * String property containing copyright information about the installable unit.
-	 * 
-	 * @see #getProperty(String)
-	 */
-	public static final String PROP_COPYRIGHT = "equinox.p2.copyright"; //$NON-NLS-1$
-	/**
 	 * A property key (value <code>"equinox.p2.description"</code>) representing a 
 	 * String property containing a human-readable description of the installable unit.
 	 * 
@@ -73,23 +68,6 @@ public interface IInstallableUnit extends Comparable {
 	 * @see #getProperty(String)
 	 */
 	public static final String PROP_DOC_URL = "equinox.p2.doc.url"; //$NON-NLS-1$
-	/**
-	 * A property key (value <code>"equinox.p2.license"</code>) representing a 
-	 * String property containing license information about the installable unit.
-	 * 
-	 * @see #getProperty(String)
-	 */
-	public static final String PROP_LICENSE = "equinox.p2.license"; //$NON-NLS-1$
-	/**
-	 * A property key (value <code>"equinox.p2.license.id"</code>) representing a 
-	 * String property containing a unique id for the specified license.  The id
-	 * is used when remembering which licenses have already been accepted.  If the license
-	 * for an installable unit changes, its id should also be changed so that the
-	 * user must accept it again.
-	 * 
-	 * @see #getProperty(String)
-	 */
-	public static final String PROP_LICENSE_ID = "equinox.p2.license.id"; //$NON-NLS-1$
 
 	/**
 	 * A property key (value <code>"equinox.p2.name"</code>) representing a 
@@ -192,4 +170,16 @@ public interface IInstallableUnit extends Comparable {
 	 * @return The lineage information about the installable unit
 	 */
 	public IUpdateDescriptor getUpdateDescriptor();
+
+	/**
+	 * Returns the license that applies to this installable unit.
+	 * @return the license that applies to this installable unit or <code>null</code>
+	 */
+	public License getLicense();
+
+	/**
+	 * Returns the copyright that applies to this installable unit.
+	 * @return the copyright that applies to this installable unit or <code>null</code>
+	 */
+	public Copyright getCopyright();
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/License.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/License.java
new file mode 100644
index 0000000..325098c
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/License.java
@@ -0,0 +1,144 @@
+/*******************************************************************************
+ * Copyright (c) 2008 Genuitec, LLC and others. All rights reserved. This
+ * program and the accompanying materials are made available under the terms of
+ * the Eclipse Public License v1.0 which accompanies this distribution, and is
+ * available at http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors: 
+ * 		Genuitec, LLC - initial API and implementation
+ * 		IBM Corporation - optional URL field instead of required name
+ ******************************************************************************/
+package org.eclipse.equinox.internal.provisional.p2.metadata;
+
+import java.io.UnsupportedEncodingException;
+import java.math.BigInteger;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+
+/**
+ * The <code>License</code> class represents a software license.  A license has required body text
+ * which may be the full text or an annotation.  An optional URL field can be specified
+ * which links to full text.  Licenses can be easily compared using their digests.
+ */
+public class License {
+	private static final String SPACES_REPLACE = "$1 $2"; //$NON-NLS-1$
+	private static final String SPACES_REGEX = "(\\S)[\\s]+(\\S)"; //$NON-NLS-1$
+	private static final String LINE_FEED = "\n"; //$NON-NLS-1$
+	private static final String ONE_SPACE = " "; //$NON-NLS-1$
+	private static final String CARRAGE_RETURN_LINE_FEED = "\r\n"; //$NON-NLS-1$
+	/**
+	 * The <code>body</code> contains the descriptive text for the license. This may
+	 * be a summary for a full license specified in a URL.
+	 */
+	private final String body;
+
+	/**
+	 * The <code>url</code> is the URL of the license.
+	 */
+	private URL url;
+
+	/**
+	 * The <code>digest</code> is the cached message digest of the normalized body
+	 */
+	private BigInteger digest;
+
+	/**
+	 * Creates a new license object which is identified by users using the <code>body</code> field.
+	 * The body should contain either the full text of the license or an annotation for a license
+	 * fully specified in the URL at urlString.
+	 * @param urlString the string describing the URL of the full license, may be <code>null</code>
+	 * @param body the license body, cannot be <code>null</code>
+	 * @throws IllegalArgumentException when the <code>body</code> is <code>null</code>
+	 */
+	public License(String urlString, String body) {
+		if (body == null)
+			throw new IllegalArgumentException("body cannot be null"); //$NON-NLS-1$
+		if (urlString != null)
+			try {
+				url = new URL(urlString);
+			} catch (MalformedURLException e) {
+				url = null;
+			}
+		this.body = body;
+	}
+
+	/**
+	 * Returns the URL containing the full description of the license.
+	 * May be <code>null</code>.
+	 */
+	public URL getURL() {
+		return url;
+	}
+
+	/**
+	 * Returns the license body.
+	 * @return the license body, never <code>null</code>
+	 */
+	public String getBody() {
+		return body;
+	}
+
+	/**
+	 * Returns the message digest of the license body.  The digest is calculated on a normalized
+	 * version of the license where all whitespace has been reduced to one space.
+	 * @return the message digest as a <code>BigInteger</code>, never <code>null</code>
+	 */
+	public BigInteger getDigest() {
+		if (digest == null) {
+			synchronized (this) {
+				if (digest == null) {
+					digest = calculateLicenseDigest();
+				}
+			}
+		}
+		return digest;
+	}
+
+	/* (non-Javadoc)
+	 * @see java.lang.Object#equals(java.lang.Object)
+	 */
+	public boolean equals(Object obj) {
+		if (obj == this)
+			return true;
+		if (obj == null)
+			return false;
+		if (obj instanceof License) {
+			License other = (License) obj;
+			if (other.getDigest().equals(getDigest()))
+				return true;
+		}
+		return false;
+	}
+
+	/* (non-Javadoc)
+	 * @see java.lang.Object#hashCode()
+	 */
+	public int hashCode() {
+		return getDigest().hashCode();
+	}
+
+	private BigInteger calculateLicenseDigest() {
+		String message = normalize(getBody());
+		try {
+			MessageDigest algorithm = MessageDigest.getInstance("MD5"); //$NON-NLS-1$
+			algorithm.reset();
+			algorithm.update(message.getBytes("UTF-8")); //$NON-NLS-1$
+			byte[] digestBytes = algorithm.digest();
+			return new BigInteger(1, digestBytes);
+		} catch (NoSuchAlgorithmException e) {
+			throw new RuntimeException(e);
+		} catch (UnsupportedEncodingException e) {
+			throw new RuntimeException(e);
+		}
+	}
+
+	private String normalize(String license) {
+		String text = license.trim();
+		text = text.replaceAll(CARRAGE_RETURN_LINE_FEED, ONE_SPACE);
+		text = text.replaceAll(LINE_FEED, ONE_SPACE);
+		text = text.replaceAll(SPACES_REGEX, SPACES_REPLACE);
+		return text;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/MetadataFactory.java b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/MetadataFactory.java
index d7f49f5..96e4b25 100644
--- a/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/MetadataFactory.java
+++ b/bundles/org.eclipse.equinox.p2.metadata/src/org/eclipse/equinox/internal/provisional/p2/metadata/MetadataFactory.java
@@ -7,6 +7,7 @@
  * 
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.metadata;
 
@@ -52,6 +53,14 @@ public class MetadataFactory {
 			unit().setId(id);
 		}
 
+		public void setLicense(License license) {
+			unit().setLicense(license);
+		}
+
+		public void setCopyright(Copyright copyright) {
+			unit().setCopyright(copyright);
+		}
+
 		public void setProperty(String key, String value) {
 			unit().setProperty(key, value);
 		}
@@ -231,4 +240,13 @@ public class MetadataFactory {
 	public static IUpdateDescriptor createUpdateDescriptor(String id, VersionRange range, int severity, String description) {
 		return new UpdateDescriptor(id, range, severity, description);
 	}
+
+	public static License createLicense(String url, String licenseBody) {
+		return new License(url, licenseBody);
+	}
+
+	public static Copyright createCopyright(String url, String copyrightBody) {
+		return new Copyright(url, copyrightBody);
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
index e5771d6..78c3787 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin;
 
@@ -80,7 +81,7 @@ public class MetadataRepositoriesView extends RepositoriesView {
 
 	protected void makeActions() {
 		super.makeActions();
-		installAction = new InstallAction(viewer, null, getProfileChooser(), null, getShell());
+		installAction = new InstallAction(viewer, null, getProfileChooser(), ProvAdminUIActivator.getDefault().getLicenseManager(), getShell());
 		revertAction = new RevertAction(viewer, null, getProfileChooser(), getShell());
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index 8901f69..892c093 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin;
 
@@ -111,7 +112,7 @@ public class ProfilesView extends ProvView {
 
 	protected void configureViewer(TreeViewer treeViewer) {
 		super.configureViewer(treeViewer);
-		InstallIUDropAdapter adapter = new InstallIUDropAdapter(treeViewer, null);
+		InstallIUDropAdapter adapter = new InstallIUDropAdapter(treeViewer, ProvAdminUIActivator.getDefault().getLicenseManager());
 		adapter.setFeedbackEnabled(false);
 		Transfer[] transfers = new Transfer[] {org.eclipse.jface.util.LocalSelectionTransfer.getTransfer()};
 		treeViewer.addDropSupport(DND.DROP_COPY, transfers, adapter);
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
index e9a2a72..862d20e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIActivator.java
@@ -10,6 +10,8 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin;
 
+import org.eclipse.equinox.internal.provisional.p2.ui.LicenseManager;
+import org.eclipse.equinox.internal.provisional.p2.ui.SimpleLicenseManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.query.IQueryProvider;
 import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
@@ -27,6 +29,7 @@ public class ProvAdminUIActivator extends AbstractUIPlugin {
 	public static final String PERSPECTIVE_ID = "org.eclipse.equinox.internal.provisional.p2.ui.admin.ProvisioningPerspective"; //$NON-NLS-1$
 
 	private IQueryProvider queryProvider;
+	private LicenseManager licenseManager;
 
 	public static BundleContext getContext() {
 		return context;
@@ -78,4 +81,10 @@ public class ProvAdminUIActivator extends AbstractUIPlugin {
 			queryProvider = new ProvAdminQueryProvider();
 		return queryProvider;
 	}
+
+	public LicenseManager getLicenseManager() {
+		if (licenseManager == null)
+			licenseManager = new SimpleLicenseManager();
+		return licenseManager;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
index 9b77e9a..8bc5906 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
@@ -78,9 +78,7 @@ public class ProvAdminUIMessages extends NLS {
 	public static String IUGroup_Version;
 	public static String IUProfilePropertiesGroup_InvalidProfileID;
 
-	public static String IUPropertiesGroup_CopyrightProviderLabel;
 	public static String IUPropertiesGroup_DescriptionPropertyLabel;
-	public static String IUPropertiesGroup_LicenseProviderLabel;
 	public static String IUPropertiesGroup_NamePropertyLabel;
 	public static String IUPropertiesGroup_ProviderPropertyLabel;
 	public static String No_Property_Item_Selected;
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUPropertiesGroup.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUPropertiesGroup.java
index 95a7064..cad114a 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUPropertiesGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUPropertiesGroup.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
 
@@ -61,8 +62,8 @@ public class IUPropertiesGroup extends IUGroup {
 		if (iuElement == null) {
 			return;
 		}
-		String[] propNames = new String[] {IInstallableUnit.PROP_NAME, IInstallableUnit.PROP_DESCRIPTION, IInstallableUnit.PROP_PROVIDER, IInstallableUnit.PROP_COPYRIGHT, IInstallableUnit.PROP_LICENSE};
-		String[] userPropNames = new String[] {ProvAdminUIMessages.IUPropertiesGroup_NamePropertyLabel, ProvAdminUIMessages.IUPropertiesGroup_DescriptionPropertyLabel, ProvAdminUIMessages.IUPropertiesGroup_ProviderPropertyLabel, ProvAdminUIMessages.IUPropertiesGroup_CopyrightProviderLabel, ProvAdminUIMessages.IUPropertiesGroup_LicenseProviderLabel};
+		String[] propNames = new String[] {IInstallableUnit.PROP_NAME, IInstallableUnit.PROP_DESCRIPTION, IInstallableUnit.PROP_PROVIDER};
+		String[] userPropNames = new String[] {ProvAdminUIMessages.IUPropertiesGroup_NamePropertyLabel, ProvAdminUIMessages.IUPropertiesGroup_DescriptionPropertyLabel, ProvAdminUIMessages.IUPropertiesGroup_ProviderPropertyLabel};
 		for (int i = 0; i < propNames.length; i++) {
 			TableItem item = new TableItem(propertiesTable, SWT.NULL);
 			String value = getIU().getProperty(propNames[i]);
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
index 51546cf..3c7d818 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
@@ -57,9 +57,7 @@ IUGroup_RequiredCapabilities=&Required capabilities:
 IUGroup_ProvidedCapabilities=&Provided capabilities:
 IUGroup_IU_ID_Required=Must set an IU ID
 IUProfilePropertiesGroup_InvalidProfileID=Profile id {0} not valid.
-IUPropertiesGroup_CopyrightProviderLabel=Copyright
 IUPropertiesGroup_DescriptionPropertyLabel=Description
-IUPropertiesGroup_LicenseProviderLabel=License
 IUPropertiesGroup_NamePropertyLabel=Name
 IUPropertiesGroup_ProviderPropertyLabel=Provider
 ProfileGroup_ID=Profile &id:
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 4f18b99..9c74405 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -39,6 +39,7 @@ public class ProvUIMessages extends NLS {
 	public static String ChooseProfileDialog_DefaultDialogTitle;
 	public static String InstallDialog_InstallSelectionMessage;
 	public static String IUCopyrightPropertyPage_NoCopyright;
+	public static String IUCopyrightPropertyPage_ViewLinkLabel;
 	public static String IUDetailsLabelProvider_KB;
 	public static String IUDetailsLabelProvider_Bytes;
 	public static String IUDetailsLabelProvider_ComputingSize;
@@ -52,6 +53,7 @@ public class ProvUIMessages extends NLS {
 	public static String IUGeneralInfoPropertyPage_ProviderLabel;
 	public static String IUGeneralInfoPropertyPage_VersionLabel;
 	public static String IULicensePropertyPage_NoLicense;
+	public static String IULicensePropertyPage_ViewLicenseLabel;
 	public static String ProfileElement_InvalidProfile;
 	public static String ProfileModificationAction_NullPlan;
 	public static String ProfileModificationWizardPage_DetailsLabel;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
index b019c3b..43ab830 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
@@ -16,9 +16,10 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider;
 import org.eclipse.equinox.internal.p2.ui.viewers.StaticContentProvider;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.internal.provisional.p2.metadata.License;
 import org.eclipse.equinox.internal.provisional.p2.ui.LicenseManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
-import org.eclipse.equinox.internal.provisional.p2.ui.viewers.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.viewers.IUColumnConfig;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.wizard.WizardPage;
@@ -36,7 +37,7 @@ import org.eclipse.swt.widgets.*;
 public class AcceptLicensesWizardPage extends WizardPage {
 
 	TableViewer iuViewer;
-	Text license;
+	Text licenseTextBox;
 	Button acceptButton;
 	Button declineButton;
 	private IInstallableUnit[] ius;
@@ -149,15 +150,15 @@ public class AcceptLicensesWizardPage extends WizardPage {
 
 		Label label = new Label(composite, SWT.NONE);
 		label.setText(ProvUIMessages.AcceptLicensesWizardPage_LicenseTextLabel);
-		license = new Text(composite, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL | SWT.WRAP | SWT.READ_ONLY);
-		license.setBackground(license.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
+		licenseTextBox = new Text(composite, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL | SWT.WRAP | SWT.READ_ONLY);
+		licenseTextBox.setBackground(licenseTextBox.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
 		gd = new GridData(GridData.FILL_BOTH);
-		license.setLayoutData(gd);
+		licenseTextBox.setLayoutData(gd);
 
 		createLicenseAcceptSection(composite, !singleLicense);
 
 		if (singleLicense) {
-			license.setText(getLicense(ius[0]));
+			licenseTextBox.setText(getLicenseBody(ius[0]));
 			setControl(composite);
 		}
 	}
@@ -166,7 +167,7 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		if (!selection.isEmpty()) {
 			Object selected = selection.getFirstElement();
 			if (selected instanceof IInstallableUnit)
-				license.setText(getLicense((IInstallableUnit) selected));
+				licenseTextBox.setText(getLicenseBody((IInstallableUnit) selected));
 		}
 	}
 
@@ -202,12 +203,12 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		}
 	}
 
-	private String getLicense(IInstallableUnit iu) {
-		String licenseText = iu.getProperty(IInstallableUnit.PROP_LICENSE);
-		if (licenseText != null)
-			return licenseText;
+	private String getLicenseBody(IInstallableUnit iu) {
+		License license = iu.getLicense();
+		if (license != null && license.getBody() != null)
+			return license.getBody();
 		// shouldn't happen because we already reduced the list to those
-		// that have licenses
+		// that have licenses and bodies are required.
 		return ""; //$NON-NLS-1$
 	}
 
@@ -215,9 +216,9 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		List unaccepted = new ArrayList();
 		for (int i = 0; i < allIUs.length; i++) {
 			IInstallableUnit iu = allIUs[i];
-			String licenseText = iu.getProperty(IInstallableUnit.PROP_LICENSE);
+			License license = iu.getLicense();
 			// It has a license, is it already accepted?
-			if (licenseText != null && licenseText.length() > 0) {
+			if (license != null) {
 				if (licenseManager == null || !licenseManager.isAccepted(iu))
 					unaccepted.add(iu);
 			}
@@ -228,7 +229,7 @@ public class AcceptLicensesWizardPage extends WizardPage {
 	private void rememberAcceptedLicenses() {
 		for (int i = 0; i < ius.length; i++) {
 			if (licenseManager != null)
-				licenseManager.acceptLicense(ius[i]);
+				licenseManager.accept(ius[i]);
 		}
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
index b733d7f..85f874e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/IUPropertyPage.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
+import java.net.URL;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
@@ -18,6 +19,10 @@ import org.eclipse.swt.SWT;
 import org.eclipse.swt.graphics.FontMetrics;
 import org.eclipse.swt.graphics.GC;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.browser.IWebBrowser;
+import org.eclipse.ui.browser.IWorkbenchBrowserSupport;
 import org.eclipse.ui.dialogs.PropertyPage;
 
 /**
@@ -50,4 +55,14 @@ public abstract class IUPropertyPage extends PropertyPage {
 	}
 
 	protected abstract Control createIUPage(Composite parent, IInstallableUnit iu);
+
+	protected void showURL(URL url) {
+		IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();
+		try {
+			IWebBrowser browser = support.getExternalBrowser();
+			browser.openURL(url);
+		} catch (PartInitException e) {
+			ProvUI.handleException(e, ProvUIMessages.IUGeneralInfoPropertyPage_CouldNotOpenBrowser);
+		}
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
index fa764a0..85bdc30 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
@@ -7,6 +7,7 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
@@ -52,6 +53,7 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 	}
 
 	public boolean performFinish() {
+		licensePage.performFinish();
 		return mainPage.performFinish();
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index c910005..36bcba0 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -62,6 +62,7 @@ ProvDropAdapter_UnsupportedDropOperation=Unsupported drop operation
 ProvElementQueryResult_CouldNotInstantiateElement=Could not instantiate UI element class {0}
 
 IUCopyrightPropertyPage_NoCopyright=No copyright information has been provided.
+IUCopyrightPropertyPage_ViewLinkLabel=View full copyright:
 IUPropertyPage_NoIUSelected=There was nothing selected to show in the properties.
 IUDetailsLabelProvider_KB={0} KB
 IUDetailsLabelProvider_Bytes={0} Bytes
@@ -76,6 +77,7 @@ IUGeneralInfoPropertyPage_NameLabel=Name:
 IUGeneralInfoPropertyPage_ProviderLabel=Provider:
 IUGeneralInfoPropertyPage_VersionLabel=Version:
 IULicensePropertyPage_NoLicense=No license information has been provided.
+IULicensePropertyPage_ViewLicenseLabel=View full license:
 
 RepositoryPropertyPage_DescriptionFieldLabel=Description:
 RepositoryPropertyPage_NoRepoSelected=There was no repository selected
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/LicenseManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/LicenseManager.java
index ab2a080..754cacd 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/LicenseManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/LicenseManager.java
@@ -19,9 +19,9 @@ import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
  */
 public abstract class LicenseManager {
 
-	public abstract boolean acceptLicense(IInstallableUnit iu);
+	public abstract boolean accept(IInstallableUnit iu);
 
-	public abstract boolean rejectLicense(IInstallableUnit iu);
+	public abstract boolean reject(IInstallableUnit iu);
 
 	public abstract boolean isAccepted(IInstallableUnit iu);
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
index 601ac55..d9498a2 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/SimpleLicenseManager.java
@@ -7,21 +7,23 @@
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Genuitec, LLC - added license support
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui;
 
 import java.io.*;
-import java.util.HashSet;
-import java.util.Set;
+import java.math.BigInteger;
+import java.util.*;
 import javax.xml.parsers.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.internal.provisional.p2.metadata.License;
 import org.w3c.dom.*;
 import org.xml.sax.SAXException;
 
 /**
  * SimpleLicenseManager is a license manager that keeps track of 
- * IInstallableUnit licenses by using the IU's license id property.
+ * IInstallableUnit licenses by using the digests of the IU's licenses.
  * It can read and write its accepted list to a stream.
  * 
  * @since 3.4
@@ -29,27 +31,25 @@ import org.xml.sax.SAXException;
 public class SimpleLicenseManager extends LicenseManager {
 	java.util.Set accepted = new HashSet();
 
-	public boolean acceptLicense(IInstallableUnit iu) {
-		String id = getLicenseId(iu);
-		if (id != null) {
-			accepted.add(id);
-			return true;
-		}
-		return false;
+	public boolean accept(IInstallableUnit iu) {
+		License license = iu.getLicense();
+		if (license != null)
+			accepted.add(license.getDigest());
+		return true;
 	}
 
-	public boolean rejectLicense(IInstallableUnit iu) {
-		String id = getLicenseId(iu);
-		if (id != null)
-			return accepted.remove(id);
-		return false;
+	public boolean reject(IInstallableUnit iu) {
+		License license = iu.getLicense();
+		if (license != null)
+			accepted.remove(license.getDigest());
+		return true;
 	}
 
 	public boolean isAccepted(IInstallableUnit iu) {
-		String id = getLicenseId(iu);
-		if (id != null)
-			return accepted.contains(id);
-		return false;
+		License license = iu.getLicense();
+		if (license == null)
+			return true;
+		return accepted.contains(license.getDigest());
 	}
 
 	public boolean hasAcceptedLicenses() {
@@ -79,9 +79,9 @@ public class SimpleLicenseManager extends LicenseManager {
 			writer = new PrintWriter(osw);
 			writer.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"); //$NON-NLS-1$
 			writer.println("<licenses>"); //$NON-NLS-1$
-			String[] licenses = (String[]) accepted.toArray(new String[accepted.size()]);
-			for (int i = 0; i < accepted.size(); i++) {
-				writer.print("    " + "<license id=\"" + licenses[i] + "\"/>"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			for (Iterator i = accepted.iterator(); i.hasNext();) {
+				BigInteger digest = (BigInteger) i.next();
+				writer.print("    " + "<license digest=\"" + digest.toString(16) + "\"/>"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ 
 			}
 		} finally {
 			writer.println("</licenses>"); //$NON-NLS-1$
@@ -92,10 +92,6 @@ public class SimpleLicenseManager extends LicenseManager {
 		}
 	}
 
-	private String getLicenseId(IInstallableUnit iu) {
-		return iu.getProperty(IInstallableUnit.PROP_LICENSE_ID);
-	}
-
 	private void processRoot(Node root, Set licenses) {
 		if (root.getNodeName().equals("licenses")) { //$NON-NLS-1$
 			NodeList children = root.getChildNodes();
@@ -109,9 +105,11 @@ public class SimpleLicenseManager extends LicenseManager {
 			if (child.getNodeType() == Node.ELEMENT_NODE) {
 				if (child.getNodeName().equals("license")) { //$NON-NLS-1$
 					NamedNodeMap atts = child.getAttributes();
-					Node att = atts.getNamedItem("id"); //$NON-NLS-1$
-					if (att != null)
-						licenses.add(att.getNodeValue());
+					Node digestAtt = atts.getNamedItem("digest"); //$NON-NLS-1$
+					if (digestAtt != null) {
+						BigInteger digest = new BigInteger(digestAtt.getNodeValue(), 16);
+						licenses.add(digest);
+					}
 				}
 			}
 		}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
index c5e8e0c..495a91e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUCopyrightPropertyPage.java
@@ -12,28 +12,59 @@ package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.IUPropertyPage;
+import org.eclipse.equinox.internal.provisional.p2.metadata.Copyright;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
+import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.SelectionAdapter;
+import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 
 /**
- * PropertyPage that shows an IU's properties
+ * PropertyPage that shows an IU's copyright
  * 
  * @since 3.4
  */
 public class IUCopyrightPropertyPage extends IUPropertyPage {
 
 	protected Control createIUPage(Composite parent, IInstallableUnit iu) {
-		String copyrightText = iu.getProperty(IInstallableUnit.PROP_COPYRIGHT);
-		if (copyrightText != null && copyrightText.length() > 0) {
-			Text text = new Text(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER | SWT.WRAP);
-			GridData gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
+		final Copyright copyright = iu.getCopyright();
+		if (copyright != null && copyright.getBody().length() > 0) {
+			Composite composite = new Composite(parent, SWT.NONE);
+			GridLayout layout = new GridLayout();
+			layout.marginWidth = 0;
+			layout.marginHeight = 0;
+			composite.setLayout(layout);
+
+			Text text = new Text(composite, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER | SWT.WRAP);
+			GridData gd = new GridData(SWT.FILL, SWT.FILL, false, true);
 			gd.widthHint = computeWidthLimit(text, 80);
+			gd.grabExcessVerticalSpace = true;
 			text.setLayoutData(gd);
-			text.setText(copyrightText);
+			text.setText(copyright.getBody());
 			text.setEditable(false);
-			return text;
+
+			// If an URL was specified, provide a link to it
+			String filename = (copyright.getURL() != null) ? copyright.getURL().getFile() : null;
+			if (filename != null & (filename.endsWith(".htm") || filename.endsWith(".html"))) { //$NON-NLS-1$ //$NON-NLS-2$
+				Label label = new Label(composite, SWT.NONE);
+				label.setText(ProvUIMessages.IUCopyrightPropertyPage_ViewLinkLabel);
+				// Create a link to the copyright URL
+				Link link = new Link(composite, SWT.LEFT | SWT.WRAP);
+				link.setText(NLS.bind("<a>{0}</a>", copyright.getURL().toExternalForm())); //$NON-NLS-1$
+				gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
+				gd.widthHint = computeWidthLimit(link, 80);
+				link.setLayoutData(gd);
+				link.addSelectionListener(new SelectionAdapter() {
+					public void widgetSelected(SelectionEvent e) {
+						showURL(copyright.getURL());
+					}
+				});
+			}
+
+			return composite;
 		}
 		Label label = new Label(parent, SWT.NULL);
 		label.setText(ProvUIMessages.IUCopyrightPropertyPage_NoCopyright);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUGeneralInfoPropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUGeneralInfoPropertyPage.java
index eae0fd6..9334aca 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUGeneralInfoPropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IUGeneralInfoPropertyPage.java
@@ -15,7 +15,6 @@ import java.net.URL;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.IUPropertyPage;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.events.SelectionAdapter;
@@ -23,10 +22,6 @@ import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.PartInitException;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.browser.IWebBrowser;
-import org.eclipse.ui.browser.IWorkbenchBrowserSupport;
 
 /**
  * PropertyPage that shows an IU's properties
@@ -40,7 +35,6 @@ public class IUGeneralInfoPropertyPage extends IUPropertyPage {
 		GridLayout layout = new GridLayout();
 		layout.marginWidth = 0;
 		layout.marginHeight = 0;
-		layout.verticalSpacing = 15;
 		composite.setLayout(layout);
 
 		createGeneralSection(composite, iu);
@@ -138,14 +132,4 @@ public class IUGeneralInfoPropertyPage extends IUPropertyPage {
 		}
 		return result.toString();
 	}
-
-	void showURL(URL url) {
-		IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();
-		try {
-			IWebBrowser browser = support.getExternalBrowser();
-			browser.openURL(url);
-		} catch (PartInitException e) {
-			ProvUI.handleException(e, ProvUIMessages.IUGeneralInfoPropertyPage_CouldNotOpenBrowser);
-		}
-	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
index c689642..941519b 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/IULicensePropertyPage.java
@@ -13,27 +13,59 @@ package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.IUPropertyPage;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.internal.provisional.p2.metadata.License;
+import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.SelectionAdapter;
+import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 
 /**
- * PropertyPage that shows an IU's properties
+ * PropertyPage that shows an IU's license
  * 
  * @since 3.4
  */
 public class IULicensePropertyPage extends IUPropertyPage {
 
 	protected Control createIUPage(Composite parent, IInstallableUnit iu) {
-		String licenseText = iu.getProperty(IInstallableUnit.PROP_LICENSE);
-		if (licenseText != null && licenseText.length() > 0) {
-			Text text = new Text(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER | SWT.WRAP);
-			GridData gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
+
+		final License license = iu.getLicense();
+		if (license != null && license.getBody().length() > 0) {
+			Composite composite = new Composite(parent, SWT.NONE);
+			GridLayout layout = new GridLayout();
+			layout.marginWidth = 0;
+			layout.marginHeight = 0;
+			composite.setLayout(layout);
+
+			Text text = new Text(composite, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER | SWT.WRAP);
+			GridData gd = new GridData(SWT.FILL, SWT.FILL, false, true);
 			gd.widthHint = computeWidthLimit(text, 80);
+			gd.grabExcessVerticalSpace = true;
 			text.setLayoutData(gd);
-			text.setText(licenseText);
+			text.setText(license.getBody());
 			text.setEditable(false);
-			return text;
+
+			// If an URL was specified, provide a link to it
+			String filename = (license.getURL() != null) ? license.getURL().getFile() : null;
+			if (filename != null & (filename.endsWith(".htm") || filename.endsWith(".html"))) { //$NON-NLS-1$ //$NON-NLS-2$
+				Label label = new Label(composite, SWT.NONE);
+				label.setText(ProvUIMessages.IULicensePropertyPage_ViewLicenseLabel);
+				// Create a link to the license URL
+				Link link = new Link(composite, SWT.LEFT | SWT.WRAP);
+				link.setText(NLS.bind("<a>{0}</a>", license.getURL().toExternalForm())); //$NON-NLS-1$
+				gd = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING);
+				gd.widthHint = computeWidthLimit(link, 80);
+				link.setLayoutData(gd);
+				link.addSelectionListener(new SelectionAdapter() {
+					public void widgetSelected(SelectionEvent e) {
+						showURL(license.getURL());
+					}
+				});
+			}
+
+			return composite;
 		}
 		Label label = new Label(parent, SWT.NULL);
 		label.setText(ProvUIMessages.IULicensePropertyPage_NoLicense);
