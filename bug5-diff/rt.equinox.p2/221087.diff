commit db293703679f7a047f20d9c145a67e2da70bad7d
Author: Susan Franklin <sfranklin>
Date:   Tue Apr 8 19:58:10 2008 +0000

    Bug 221087 - [ui] Size dialog seems to create a new plan

1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
3	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
17	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
80	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
3	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
17	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
5	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
23	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/CategoryElement.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUElement.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUVersionsElement.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/InstalledIUElement.java
2	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/RollbackProfileElement.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index d1392ce..96fd0c8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -153,5 +153,6 @@ public class ProvUIMessages extends NLS {
 	public static String UpdateManagerCompatibility_UnableToOpenFindAndInstall;
 	public static String UpdateManagerCompatibility_UnableToOpenManageConfiguration;
 	public static String UpdateOperation_NothingToUpdate;
+	public static String UpdateOrInstallWizardPage_Size;
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
index 0b83949..f293a12 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
@@ -37,6 +37,8 @@ public class InstallWizardPage extends UpdateOrInstallWizardPage {
 		for (int i = 0; i < selected.length; i++) {
 			changeRequest.setInstallableUnitProfileProperty(selected[i], IInstallableUnit.PROP_PROFILE_ROOT_IU, Boolean.toString(true));
 		}
-		return ProvisioningUtil.getProvisioningPlan(changeRequest, getProvisioningContext(), monitor);
+		ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(changeRequest, getProvisioningContext(), monitor);
+		computeSizing(plan, getProfileId());
+		return plan;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index 4d8cfe6..f47cbeb 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -42,7 +42,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 	private static final int DEFAULT_HEIGHT = 20;
 	private static final int DEFAULT_WIDTH = 120;
 	private static final int DEFAULT_DESCRIPTION_HEIGHT = 4;
-	private static final int DEFAULT_COLUMN_WIDTH = 50;
+	private static final int DEFAULT_COLUMN_WIDTH = 60;
 	private static final int DEFAULT_SMALL_COLUMN_WIDTH = 20;
 	private static final String NESTING_INDENT = "  "; //$NON-NLS-1$
 	private static final IStatus NULL_PLAN_STATUS = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, 0, ProvUIMessages.ProfileModificationWizardPage_UnexpectedError, null);
@@ -122,22 +122,33 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		else
 			currentStatus = currentPlan.getStatus();
 
+		createSizingInfo(composite);
+
 		// The text area shows a description of the selected IU, or error detail if applicable.
 		Group group = new Group(composite, SWT.NONE);
 		group.setText(ProvUIMessages.ProfileModificationWizardPage_DetailsLabel);
 		group.setLayout(new GridLayout());
 		group.setLayoutData(new GridData(GridData.FILL_BOTH));
-		detailsArea = new Text(group, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY | SWT.WRAP);
-		data = new GridData(SWT.FILL, SWT.FILL, true, true);
-		data.heightHint = convertHeightInCharsToPixels(DEFAULT_DESCRIPTION_HEIGHT);
-		data.widthHint = convertWidthInCharsToPixels(DEFAULT_WIDTH);
-		detailsArea.setLayoutData(data);
+
+		createDetailsArea(group);
 
 		updateStatus();
 		setControl(composite);
 		Dialog.applyDialogFont(composite);
 	}
 
+	protected void createSizingInfo(Composite parent) {
+		// Default is to do nothing
+	}
+
+	protected void createDetailsArea(Composite parent) {
+		detailsArea = new Text(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY | SWT.WRAP);
+		GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);
+		data.heightHint = convertHeightInCharsToPixels(DEFAULT_DESCRIPTION_HEIGHT);
+		data.widthHint = convertWidthInCharsToPixels(DEFAULT_WIDTH);
+		detailsArea.setLayoutData(data);
+	}
+
 	protected void makeElements(IInstallableUnit[] iusToShow, List list) {
 		for (int i = 0; i < iusToShow.length; i++) {
 			list.add(new AvailableIUElement(iusToShow[i], getProfileId()));
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
index ec37407..1a5bd12 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
@@ -10,30 +10,108 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
+import java.text.NumberFormat;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
+import org.eclipse.equinox.internal.provisional.p2.engine.phases.Sizing;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.internal.provisional.p2.ui.viewers.IUColumnConfig;
+import org.eclipse.equinox.internal.provisional.p2.ui.model.IUElement;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Label;
 
 public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizardPage {
 
 	protected UpdateOrInstallWizard wizard;
-	private static final int DEFAULT_COLUMN_WIDTH = 150;
+	// private static final int DEFAULT_COLUMN_WIDTH = 150;
+	protected Label sizeInfo;
+	protected Sizing sizing;
 
 	protected UpdateOrInstallWizardPage(String id, IInstallableUnit[] ius, String profileId, ProvisioningPlan plan, UpdateOrInstallWizard wizard) {
 		super(id, ius, profileId, plan);
+		computeSizing(plan, profileId);
 		this.wizard = wizard;
 	}
 
+	// This method is removed to improve performance
+	// See https://bugs.eclipse.org/bugs/show_bug.cgi?id=221087
+	/*
 	protected IUColumnConfig[] getColumnConfig() {
 		initializeDialogUnits(getShell());
 		int pixels = convertHorizontalDLUsToPixels(DEFAULT_COLUMN_WIDTH);
 		return new IUColumnConfig[] {new IUColumnConfig(ProvUIMessages.ProvUI_NameColumnTitle, IUColumnConfig.COLUMN_NAME, pixels), new IUColumnConfig(ProvUIMessages.ProvUI_VersionColumnTitle, IUColumnConfig.COLUMN_VERSION, pixels), new IUColumnConfig(ProvUIMessages.ProvUI_SizeColumnTitle, IUColumnConfig.COLUMN_SIZE, pixels / 2)};
 	}
+	*/
+
+	protected void computeSizing(final ProvisioningPlan plan, final String profileId) {
+		sizing = null;
+		if (sizeInfo != null)
+			if (!getShell().isDisposed()) {
+				getShell().getDisplay().asyncExec(new Runnable() {
+					public void run() {
+						updateSizingInfo();
+					}
+
+				});
+			}
+		Job job = new Job("Computing size") {
+			protected IStatus run(IProgressMonitor monitor) {
+				try {
+					sizing = ProvisioningUtil.getSizeInfo(plan, profileId, monitor);
+				} catch (ProvisionException e) {
+					return e.getStatus();
+				}
+				if (monitor.isCanceled())
+					return Status.CANCEL_STATUS;
+				if (!getShell().isDisposed()) {
+					getShell().getDisplay().asyncExec(new Runnable() {
+						public void run() {
+							updateSizingInfo();
+						}
+
+					});
+				}
+				return Status.OK_STATUS;
+			}
+
+		};
+		job.schedule();
+	}
+
+	protected void createSizingInfo(Composite parent) {
+		sizeInfo = new Label(parent, SWT.NONE);
+		updateSizingInfo();
+	}
 
 	protected void checkedIUsChanged() {
 		wizard.iusChanged(getCheckedIUs());
 		super.checkedIUsChanged();
 	}
 
+	protected void updateSizingInfo() {
+		long size = IUElement.SIZE_UNAVAILABLE;
+		if (sizing != null) {
+			size = sizing.getDiskSize();
+			if (size == 0)
+				size = IUElement.SIZE_UNAVAILABLE;
+		}
+		if (sizeInfo != null && !sizeInfo.isDisposed())
+			sizeInfo.setText(NLS.bind(ProvUIMessages.UpdateOrInstallWizardPage_Size, getFormattedSize(size)));
+	}
+
+	protected String getFormattedSize(long size) {
+		if (size == IUElement.SIZE_UNKNOWN || size == IUElement.SIZE_UNAVAILABLE)
+			return ProvUIMessages.IUDetailsLabelProvider_Unknown;
+		if (size > 1000L) {
+			long kb = size / 1000L;
+			return NLS.bind(ProvUIMessages.IUDetailsLabelProvider_KB, NumberFormat.getInstance().format(new Long(kb)));
+		}
+		return NLS.bind(ProvUIMessages.IUDetailsLabelProvider_Bytes, NumberFormat.getInstance().format(new Long(size)));
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 0acaeb4..3e25b65 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -57,7 +57,9 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
 		request.removeInstallableUnits(getIUsToReplace(selectedElements));
 		request.addInstallableUnits(elementsToIUs(selectedElements));
-		return ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
+		ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
+		computeSizing(plan, getProfileId());
+		return plan;
 	}
 
 	protected void setInitialCheckState() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index b73ed70..12516a6 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -93,6 +93,7 @@ AddRepositoryDialog_InvalidURL=The provided URL is not valid
 UpdateAction_UpdatesAvailableMessage=Review and confirm that the checked updates will be installed.
 UpdateAction_UpdatesAvailableTitle=Available Updates
 UpdateOperation_NothingToUpdate=There is nothing to update.
+UpdateOrInstallWizardPage_Size=Size: {0}
 URLValidator_UnrecognizedURL=The URL {0} is not recognized.
 UpdateManagerCompatibility_UnableToOpenFindAndInstall=Unable to open the Update Manager Find and Install Wizard.
 UpdateManagerCompatibility_UnableToOpenManageConfiguration=Unable to open the Update Manager Configuration Manager.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
index 7f2c673..e9fdc6f 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
@@ -10,9 +10,12 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.model;
 
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.SubMonitor;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.director.*;
+import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.engine.phases.Sizing;
@@ -31,6 +34,12 @@ import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUti
 public class AvailableIUElement extends ProvElement implements IUElement {
 
 	IInstallableUnit iu;
+	// Currently this variable is not settable due to the
+	// poor performance of sizing, but it is kept here for future improvement.
+	// If we reinstate the ability to compute individual sizes we would
+	// probably refer to some preference or policy to decide what to do.
+	// See https://bugs.eclipse.org/bugs/show_bug.cgi?id=221087
+	private static boolean shouldShowSize = false;
 	long size = IUElement.SIZE_UNKNOWN;
 	String profileID;
 
@@ -74,12 +83,13 @@ public class AvailableIUElement extends ProvElement implements IUElement {
 		return size;
 	}
 
-	public void computeSize() {
+	public void computeSize(IProgressMonitor monitor) {
 		if (profileID == null)
 			return;
 		try {
-			ProvisioningPlan plan = getSizingPlan();
-			Sizing info = ProvisioningUtil.getSizeInfo(plan, profileID, null);
+			SubMonitor mon = SubMonitor.convert(monitor, 100);
+			ProvisioningPlan plan = getSizingPlan(mon.newChild(50));
+			Sizing info = ProvisioningUtil.getSizeInfo(plan, profileID, mon.newChild(50));
 			if (info == null)
 				size = IUElement.SIZE_UNAVAILABLE;
 			else
@@ -94,10 +104,10 @@ public class AvailableIUElement extends ProvElement implements IUElement {
 		return ProvisioningUtil.getProfile(profileID);
 	}
 
-	protected ProvisioningPlan getSizingPlan() throws ProvisionException {
+	protected ProvisioningPlan getSizingPlan(IProgressMonitor monitor) throws ProvisionException {
 		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(profileID);
 		request.addInstallableUnits(new IInstallableUnit[] {getIU()});
-		return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), null);
+		return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
 	}
 
 	public IInstallableUnit getIU() {
@@ -105,7 +115,7 @@ public class AvailableIUElement extends ProvElement implements IUElement {
 	}
 
 	public boolean shouldShowSize() {
-		return true;
+		return shouldShowSize;
 	}
 
 	public boolean shouldShowVersion() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
index a9bbdfa..e85b377 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
@@ -10,8 +10,10 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.model;
 
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
-import org.eclipse.equinox.internal.provisional.p2.director.*;
+import org.eclipse.equinox.internal.provisional.p2.director.ProfileChangeRequest;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
@@ -36,10 +38,10 @@ public class AvailableUpdateElement extends AvailableIUElement {
 		return iuToBeUpdated;
 	}
 
-	protected ProvisioningPlan getSizingPlan() throws ProvisionException {
+	protected ProvisioningPlan getSizingPlan(IProgressMonitor monitor) throws ProvisionException {
 		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(profileID);
 		request.removeInstallableUnits(new IInstallableUnit[] {iuToBeUpdated});
 		request.addInstallableUnits(new IInstallableUnit[] {getIU()});
-		return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), null);
+		return ProvisioningUtil.getProvisioningPlan(request, new ProvisioningContext(), monitor);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
index c16c2b4..7666cdb 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
@@ -13,6 +13,7 @@ package org.eclipse.equinox.internal.p2.ui.viewers;
 
 import java.text.NumberFormat;
 import java.util.HashMap;
+import java.util.Iterator;
 import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.jobs.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
@@ -129,21 +130,29 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 			Job resolveJob = new Job(element.getIU().getId()) {
 
 				protected IStatus run(IProgressMonitor monitor) {
+					if (monitor.isCanceled())
+						return Status.CANCEL_STATUS;
+
 					if (shell == null || shell.isDisposed())
-						return Status.OK_STATUS;
+						return Status.CANCEL_STATUS;
+
+					element.computeSize(monitor);
 
-					element.computeSize();
+					if (monitor.isCanceled())
+						return Status.CANCEL_STATUS;
 
 					// If we still could not compute size, give up
 					if (element.getSize() == IUElement.SIZE_UNKNOWN)
 						return Status.OK_STATUS;
 
 					if (shell == null || shell.isDisposed())
-						return Status.OK_STATUS;
+						return Status.CANCEL_STATUS;
+
 					shell.getDisplay().asyncExec(new Runnable() {
 
 						public void run() {
-							fireLabelProviderChanged(new LabelProviderChangedEvent(IUDetailsLabelProvider.this, element));
+							if (shell != null || !shell.isDisposed())
+								fireLabelProviderChanged(new LabelProviderChangedEvent(IUDetailsLabelProvider.this, element));
 						}
 					});
 
@@ -196,4 +205,14 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 		}
 		return null;
 	}
+
+	public void dispose() {
+		super.dispose();
+		Iterator iter = jobs.values().iterator();
+		while (iter.hasNext()) {
+			Job job = (Job) iter.next();
+			job.cancel();
+		}
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/CategoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/CategoryElement.java
index dd5aad7..a8348b9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/CategoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/CategoryElement.java
@@ -11,6 +11,7 @@
 package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
 import java.util.*;
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.model.RemoteQueriedElement;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.metadata.RequiredCapability;
@@ -71,7 +72,7 @@ public class CategoryElement extends RemoteQueriedElement implements IUElement {
 		return false;
 	}
 
-	public void computeSize() {
+	public void computeSize(IProgressMonitor monitor) {
 		// Should never be called, since shouldShowSize() returns false
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUElement.java
index e454d45..7a672c5 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUElement.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 
 /**
@@ -38,5 +39,5 @@ public interface IUElement {
 
 	public long getSize();
 
-	public void computeSize();
+	public void computeSize(IProgressMonitor monitor);
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUVersionsElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUVersionsElement.java
index a8f27ca..159d1af 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUVersionsElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/IUVersionsElement.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.model.CachedQueryElement;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUIImages;
@@ -67,7 +68,7 @@ public class IUVersionsElement extends CachedQueryElement implements IUElement {
 		return true;
 	}
 
-	public void computeSize() {
+	public void computeSize(IProgressMonitor monitor) {
 		// Should never be called, since shouldShowSize() returns false
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/InstalledIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/InstalledIUElement.java
index eff87bb..acd7c38 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/InstalledIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/InstalledIUElement.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUIImages;
@@ -71,7 +72,7 @@ public class InstalledIUElement extends ProvElement implements IUElement {
 		return false;
 	}
 
-	public void computeSize() {
+	public void computeSize(IProgressMonitor monitor) {
 		// Should never be called, as long as shouldShowSize() returns false
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/RollbackProfileElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/RollbackProfileElement.java
index 1fcc1a0..5fc04b1 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/RollbackProfileElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/model/RollbackProfileElement.java
@@ -12,6 +12,7 @@ package org.eclipse.equinox.internal.provisional.p2.ui.model;
 
 import java.text.DateFormat;
 import java.util.*;
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.metadata.RequiredCapability;
@@ -81,7 +82,7 @@ public class RollbackProfileElement extends ProvElement implements IUElement {
 		return null;
 	}
 
-	public void computeSize() {
+	public void computeSize(IProgressMonitor monitor) {
 		// Should never be called, since shouldShowSize() returns false
 	}
 
commit c4bf977f27e52e5d2e3564081d6f12b8018add3f
Author: Susan Franklin <sfranklin>
Date:   Tue Apr 8 20:13:09 2008 +0000

    Bug 221087 - [ui] Size dialog seems to create a new plan

17	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
index 1a5bd12..a9e6455 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
@@ -12,7 +12,7 @@ package org.eclipse.equinox.internal.p2.ui.dialogs;
 
 import java.text.NumberFormat;
 import org.eclipse.core.runtime.*;
-import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.core.runtime.jobs.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
@@ -31,6 +31,7 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 	// private static final int DEFAULT_COLUMN_WIDTH = 150;
 	protected Label sizeInfo;
 	protected Sizing sizing;
+	private Job sizingJob;
 
 	protected UpdateOrInstallWizardPage(String id, IInstallableUnit[] ius, String profileId, ProvisioningPlan plan, UpdateOrInstallWizard wizard) {
 		super(id, ius, profileId, plan);
@@ -59,7 +60,9 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 
 				});
 			}
-		Job job = new Job("Computing size") {
+		if (sizingJob != null)
+			sizingJob.cancel();
+		sizingJob = new Job("Computing size") {
 			protected IStatus run(IProgressMonitor monitor) {
 				try {
 					sizing = ProvisioningUtil.getSizeInfo(plan, profileId, monitor);
@@ -80,7 +83,12 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 			}
 
 		};
-		job.schedule();
+		sizingJob.schedule();
+		sizingJob.addJobChangeListener(new JobChangeAdapter() {
+			public void done(IJobChangeEvent event) {
+				sizingJob = null;
+			}
+		});
 	}
 
 	protected void createSizingInfo(Composite parent) {
@@ -114,4 +122,10 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 		return NLS.bind(ProvUIMessages.IUDetailsLabelProvider_Bytes, NumberFormat.getInstance().format(new Long(size)));
 	}
 
+	public void dispose() {
+		if (sizingJob != null) {
+			sizingJob.cancel();
+			sizingJob = null;
+		}
+	}
 }
