commit edec76b14c13faeb7189471a28a84671854d3add
Author: Susan Franklin <sfranklin>
Date:   Wed May 21 22:39:50 2008 +0000

    Bug 218532 - [ui] IUs below the root that have licenses need to be surfaced to user
    Bug 228542 - [ui] Check for updates presents wrong licenses to be accepted
    Bug 232992 - [ui] Incorrect update plan when changing selection in update wizard

1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
73	27	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
3	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
12	10	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
7	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
25	11	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
12	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstallWizard.java
5	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateWizard.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index ab334da..e20c652 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -32,6 +32,7 @@ public class ProvUIMessages extends NLS {
 	public static String AcceptLicensesWizardPage_NoLicensesDescription;
 	public static String AcceptLicensesWizardPage_RejectMultiple;
 	public static String AcceptLicensesWizardPage_RejectSingle;
+	public static String AcceptLicensesWizardPage_ReviewExtraLicensesDescription;
 	public static String AcceptLicensesWizardPage_ReviewLicensesDescription;
 	public static String AcceptLicensesWizardPage_Title;
 	public static String ApplyProfileChangesDialog_ApplyChanges;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
index 7589cd6..f2cc772 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/AcceptLicensesWizardPage.java
@@ -15,6 +15,9 @@ import java.util.List;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider;
 import org.eclipse.equinox.internal.p2.ui.viewers.StaticContentProvider;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
+import org.eclipse.equinox.internal.provisional.p2.engine.InstallableUnitOperand;
+import org.eclipse.equinox.internal.provisional.p2.engine.Operand;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.metadata.License;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
@@ -40,23 +43,24 @@ public class AcceptLicensesWizardPage extends WizardPage {
 	Text licenseTextBox;
 	Button acceptButton;
 	Button declineButton;
-	private IInstallableUnit[] ius;
+	private IInstallableUnit[] originalIUs;
+	private IInstallableUnit[] iusWithUnacceptedLicenses;
 	private LicenseManager licenseManager;
 	private static final int DEFAULT_COLUMN_WIDTH = 40;
 
-	public AcceptLicensesWizardPage(IInstallableUnit[] ius, LicenseManager licenseManager) {
+	public AcceptLicensesWizardPage(IInstallableUnit[] ius, LicenseManager licenseManager, ProvisioningPlan plan) {
 		super("AcceptLicenses"); //$NON-NLS-1$
 		setTitle(ProvUIMessages.AcceptLicensesWizardPage_Title);
 		this.licenseManager = licenseManager;
-		update(ius);
+		update(ius, plan);
 	}
 
 	public void createControl(Composite parent) {
 		initializeDialogUnits(parent);
-		if (ius.length == 0) {
+		if (iusWithUnacceptedLicenses.length == 0) {
 			Label label = new Label(parent, SWT.NONE);
 			setControl(label);
-		} else if (ius.length == 1) {
+		} else if (iusWithUnacceptedLicenses.length == 1) {
 			createLicenseSection(parent, true);
 		} else {
 			SashForm composite = new SashForm(parent, SWT.HORIZONTAL);
@@ -87,15 +91,11 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		label.setText(ProvUIMessages.AcceptLicensesWizardPage_ItemsLabel);
 		iuViewer = new TableViewer(composite, SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
 		setTableColumns(iuViewer.getTable());
-		iuViewer.setContentProvider(new StaticContentProvider(new Object[0]));
-		iuViewer.setInput(ius);
+		iuViewer.setContentProvider(new StaticContentProvider(iusWithUnacceptedLicenses));
 		iuViewer.setLabelProvider(new IUDetailsLabelProvider());
-		iuViewer.setComparator(new ViewerComparator(new Comparator() {
-			// This comparator sorts in reverse order so that we see the newest configs first
-			public int compare(Object o1, Object o2) {
-				return ((String) o2).compareTo((String) o1);
-			}
-		}));
+		iuViewer.setComparator(new ViewerComparator());
+		iuViewer.setInput(iusWithUnacceptedLicenses);
+
 		iuViewer.addSelectionChangedListener(new ISelectionChangedListener() {
 			public void selectionChanged(SelectionChangedEvent event) {
 				handleSelectionChanged((IStructuredSelection) event.getSelection());
@@ -162,7 +162,7 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		createLicenseAcceptSection(composite, !singleLicense);
 
 		if (singleLicense) {
-			licenseTextBox.setText(getLicenseBody(ius[0]));
+			licenseTextBox.setText(getLicenseBody(iusWithUnacceptedLicenses[0]));
 			setControl(composite);
 		}
 	}
@@ -193,13 +193,14 @@ public class AcceptLicensesWizardPage extends WizardPage {
 	}
 
 	public boolean hasLicensesToAccept() {
-		return ius.length > 0;
+		return iusWithUnacceptedLicenses.length > 0;
 	}
 
-	public void update(IInstallableUnit[] theIUs) {
-		this.ius = iusWithUnacceptedLicenses(theIUs);
+	public void update(IInstallableUnit[] theIUs, ProvisioningPlan currentPlan) {
+		this.originalIUs = theIUs;
+		this.iusWithUnacceptedLicenses = iusWithUnacceptedLicenses(theIUs, currentPlan);
 		setDescription();
-		setPageComplete(ius.length == 0);
+		setPageComplete(iusWithUnacceptedLicenses.length == 0);
 		if (getControl() != null) {
 			Composite parent = getControl().getParent();
 			getControl().dispose();
@@ -217,31 +218,76 @@ public class AcceptLicensesWizardPage extends WizardPage {
 		return ""; //$NON-NLS-1$
 	}
 
-	private IInstallableUnit[] iusWithUnacceptedLicenses(IInstallableUnit[] allIUs) {
+	private IInstallableUnit[] iusWithUnacceptedLicenses(IInstallableUnit[] selectedIUs, ProvisioningPlan currentPlan) {
+		IInstallableUnit[] iusToCheck;
+		if (currentPlan == null)
+			iusToCheck = selectedIUs;
+		else {
+			List allIUs = new ArrayList();
+			Operand[] operands = currentPlan.getOperands();
+			for (int i = 0; i < operands.length; i++)
+				if (operands[i] instanceof InstallableUnitOperand) {
+					IInstallableUnit addedIU = ((InstallableUnitOperand) operands[i]).second();
+					if (addedIU != null)
+						allIUs.add(addedIU);
+				}
+			iusToCheck = (IInstallableUnit[]) allIUs.toArray(new IInstallableUnit[allIUs.size()]);
+		}
+
+		// See https://bugs.eclipse.org/bugs/show_bug.cgi?id=218532
+		// Current metadata generation can result with a feature group IU and the feature jar IU
+		// having the same name and license.  We will weed out duplicates if the license and name are both
+		// the same.  
+		// Note this algorithm is not generalized...we only save the first iu of any name found and this
+		// algorithm would allow duplicates if subsequent licenses found for an iu name did not match the
+		// first license yet still duplicated each other. Since this is not likely to happen we keep it
+		// simple.  The UI for licenses will soon be reworked.
+		HashMap iusByName = new HashMap();
 		List unaccepted = new ArrayList();
-		for (int i = 0; i < allIUs.length; i++) {
-			IInstallableUnit iu = allIUs[i];
+		// We can't be sure that the viewer is created or the right label provider has been installed, so make another one.
+		IUDetailsLabelProvider labelProvider = new IUDetailsLabelProvider();
+		for (int i = 0; i < iusToCheck.length; i++) {
+			IInstallableUnit iu = iusToCheck[i];
+			String name = labelProvider.getText(iu);
 			License license = iu.getLicense();
 			// It has a license, is it already accepted?
 			if (license != null) {
-				if (licenseManager == null || !licenseManager.isAccepted(iu))
-					unaccepted.add(iu);
+				if (licenseManager == null || !licenseManager.isAccepted(iu)) {
+					// Have we already found an IU with this user name?
+					IInstallableUnit potentialDuplicate = (IInstallableUnit) iusByName.get(name);
+					// If we have no duplicate or the duplicate's license doesn't match, add it
+					if (potentialDuplicate == null || !potentialDuplicate.getLicense().equals(license))
+						unaccepted.add(iu);
+					// We didn't have a duplicate, need to record this one
+					if (potentialDuplicate == null)
+						iusByName.put(name, iu);
+				}
 			}
 		}
+		// Wasn't that fun?
 		return (IInstallableUnit[]) unaccepted.toArray(new IInstallableUnit[unaccepted.size()]);
 	}
 
 	private void rememberAcceptedLicenses() {
-		for (int i = 0; i < ius.length; i++) {
+		for (int i = 0; i < iusWithUnacceptedLicenses.length; i++) {
 			if (licenseManager != null)
-				licenseManager.accept(ius[i]);
+				licenseManager.accept(iusWithUnacceptedLicenses[i]);
 		}
 	}
 
 	private void setDescription() {
-		if (ius.length == 0)
+		// No licenses but the page is open.  Shouldn't happen, but just in case...
+		if (iusWithUnacceptedLicenses.length == 0)
 			setDescription(ProvUIMessages.AcceptLicensesWizardPage_NoLicensesDescription);
-		else
+		// We have licenses.  Use a generic message if we think we aren't showing
+		// licenses from required IU's.  This check is not entirely accurate, for example
+		// one root IU could have no license and the next one has two different
+		// IU's with different licenses.  But this cheaply catches the common cases.
+		else if (iusWithUnacceptedLicenses.length <= originalIUs.length)
 			setDescription(ProvUIMessages.AcceptLicensesWizardPage_ReviewLicensesDescription);
+		else {
+			// Without a doubt we know we are showing extra licenses.
+			setDescription(ProvUIMessages.AcceptLicensesWizardPage_ReviewExtraLicensesDescription);
+		}
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index 05f45d5..4733569 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -165,7 +165,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return false;
 	}
 
-	private Object[] getCheckedElements() {
+	protected Object[] getCheckedElements() {
 		return listViewer.getCheckedElements();
 	}
 
@@ -188,10 +188,6 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		return units[0];
 	}
 
-	protected IInstallableUnit[] getCheckedIUs() {
-		return elementsToIUs(getCheckedElements());
-	}
-
 	protected String getProfileId() {
 		return profileId;
 	}
@@ -206,7 +202,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 
 	protected void checkedIUsChanged() {
 		try {
-			final IInstallableUnit[] selections = getCheckedIUs();
+			final Object[] selections = getCheckedElements();
 			if (selections.length == 0) {
 				currentPlan = null;
 				currentStatus = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, IStatusCodes.EXPECTED_NOTHING_TO_DO, ProvUIMessages.ProfileModificationWizardPage_NothingSelected, null);
@@ -216,7 +212,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 						try {
 							currentPlan = computeProvisioningPlan(selections, monitor);
 							if (currentPlan != null)
-								currentStatus = PlanStatusHelper.computeStatus(currentPlan, selections);
+								currentStatus = PlanStatusHelper.computeStatus(currentPlan, elementsToIUs(selections));
 							else
 								currentStatus = NULL_PLAN_STATUS;
 						} catch (ProvisionException e) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
index b562e6e..45c4980 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
@@ -11,6 +11,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.LicenseManager;
 import org.eclipse.jface.wizard.IWizardPage;
@@ -23,9 +24,9 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 
 	UpdateOrInstallWizardPage mainPage;
 	AcceptLicensesWizardPage licensePage;
-	String profileId;
-	IInstallableUnit[] ius;
-	LicenseManager licenseManager;
+	protected String profileId;
+	protected IInstallableUnit[] ius;
+	protected LicenseManager licenseManager;
 
 	public UpdateOrInstallWizard(String profileId, IInstallableUnit[] ius, LicenseManager licenseManager) {
 		super();
@@ -37,11 +38,12 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 	}
 
 	public void addPages() {
-		mainPage = createMainPage(profileId, ius);
-		addPage(mainPage);
-		addPage(licensePage = new AcceptLicensesWizardPage(ius, licenseManager));
+		addPage(mainPage = createMainPage());
+		addPage(licensePage = createLicensesPage());
 	}
 
+	protected abstract AcceptLicensesWizardPage createLicensesPage();
+
 	/*
 	 * (non-Javadoc)
 	 * @see org.eclipse.jface.wizard.Wizard#getNextPage(org.eclipse.jface.wizard.IWizardPage)
@@ -57,11 +59,11 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 		return mainPage.performFinish();
 	}
 
-	public void iusChanged(IInstallableUnit[] theIUs) {
-		this.ius = theIUs;
-		licensePage.update(ius);
+	public void planChanged(IInstallableUnit[] selectedIUs, ProvisioningPlan plan) {
+		this.ius = selectedIUs;
+		licensePage.update(selectedIUs, plan);
 	}
 
-	protected abstract UpdateOrInstallWizardPage createMainPage(String theProfileId, IInstallableUnit[] theIUs);
+	protected abstract UpdateOrInstallWizardPage createMainPage();
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
index f901457..272a26f 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
@@ -99,8 +99,14 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 	}
 
 	protected void checkedIUsChanged() {
-		wizard.iusChanged(getCheckedIUs());
+		// First ensure that a new plan is computed.
 		super.checkedIUsChanged();
+		// Now update the license page accordingly.  This requires the plan so
+		// that licenses for required items can also be checked.
+		wizard.planChanged(elementsToIUs(getCheckedElements()), currentPlan);
+		// status of license page could change status of wizard next button
+		getContainer().updateButtons();
+
 	}
 
 	protected void updateSizingInfo() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 3e25b65..c37baa8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -26,6 +26,26 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 	IInstallableUnit[] suggestedReplacements;
 	Object[] initialSelections = new Object[0];
 
+	public static IInstallableUnit[] getIUsToReplace(Object[] replacementElements) {
+		Set iusToReplace = new HashSet();
+		for (int i = 0; i < replacementElements.length; i++) {
+			if (replacementElements[i] instanceof AvailableUpdateElement) {
+				iusToReplace.add(((AvailableUpdateElement) replacementElements[i]).getIUToBeUpdated());
+			}
+		}
+		return (IInstallableUnit[]) iusToReplace.toArray(new IInstallableUnit[iusToReplace.size()]);
+	}
+
+	public static IInstallableUnit[] getReplacementIUs(Object[] replacementElements) {
+		Set replacements = new HashSet();
+		for (int i = 0; i < replacementElements.length; i++) {
+			if (replacementElements[i] instanceof AvailableUpdateElement) {
+				replacements.add(((AvailableUpdateElement) replacementElements[i]).getIU());
+			}
+		}
+		return (IInstallableUnit[]) replacements.toArray(new IInstallableUnit[replacements.size()]);
+	}
+
 	public UpdateWizardPage(IInstallableUnit[] iusToReplace, AvailableUpdateElement[] elements, Object[] initialSelections, String profileId, ProvisioningPlan plan, UpdateOrInstallWizard wizard) {
 		super("UpdateWizardPage", iusToReplace, profileId, plan, wizard); //$NON-NLS-1$
 		this.updateElements = elements;
@@ -35,20 +55,14 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 	}
 
 	protected void makeElements(IInstallableUnit[] ius, List elements) {
+		// ignore the originally selected ius, we want to use the
+		// update elements computed by the creator of the wizard,
+		// which contains both the elements to be replaced, and the
+		// replacements
 		for (int i = 0; i < updateElements.length; i++)
 			elements.add(updateElements[i]);
 	}
 
-	private IInstallableUnit[] getIUsToReplace(Object[] replacementElements) {
-		Set iusToReplace = new HashSet();
-		for (int i = 0; i < replacementElements.length; i++) {
-			if (replacementElements[i] instanceof AvailableUpdateElement) {
-				iusToReplace.add(((AvailableUpdateElement) replacementElements[i]).getIUToBeUpdated());
-			}
-		}
-		return (IInstallableUnit[]) iusToReplace.toArray(new IInstallableUnit[iusToReplace.size()]);
-	}
-
 	protected String getOperationLabel() {
 		return ProvUIMessages.UpdateIUOperationLabel;
 	}
@@ -56,7 +70,7 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 	protected ProvisioningPlan computeProvisioningPlan(Object[] selectedElements, IProgressMonitor monitor) throws ProvisionException {
 		ProfileChangeRequest request = ProfileChangeRequest.createByProfileId(getProfileId());
 		request.removeInstallableUnits(getIUsToReplace(selectedElements));
-		request.addInstallableUnits(elementsToIUs(selectedElements));
+		request.addInstallableUnits(getReplacementIUs(selectedElements));
 		ProvisioningPlan plan = ProvisioningUtil.getProvisioningPlan(request, getProvisioningContext(), monitor);
 		computeSizing(plan, getProfileId());
 		return plan;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index c1d18d2..4dc9b6d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -91,6 +91,7 @@ AcceptLicensesWizardPage_LicenseTextLabel=&License text:
 AcceptLicensesWizardPage_NoLicensesDescription=There are no licenses to review.  Either the software does not specify a license, or the license has already been reviewed and approved.
 AcceptLicensesWizardPage_RejectMultiple=I &do not accept the terms of the license agreements
 AcceptLicensesWizardPage_RejectSingle=I &do not accept the terms of the license agreement
+AcceptLicensesWizardPage_ReviewExtraLicensesDescription=Licenses must be reviewed before the software can be installed.  This includes licenses for software required to complete the install.
 AcceptLicensesWizardPage_ReviewLicensesDescription=Licenses must be reviewed and accepted before the software can be installed.
 AcceptLicensesWizardPage_Title=Review Licenses
 AddRepositoryDialog_Title=Add Repository
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
index 98adcbb..d65c01c 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/viewers/IUDetailsLabelProvider.java
@@ -43,6 +43,7 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 	private String toolTipProperty = null;
 	private FilteredTree filteredTree;
 	private boolean useBoldFont = false;
+	private boolean showingId = false;
 
 	private IUColumnConfig[] columnConfig;
 	Shell shell;
@@ -58,6 +59,11 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 			this.columnConfig = ProvUI.getIUColumnConfig();
 		else
 			this.columnConfig = columnConfig;
+		for (int i = 0; i < this.columnConfig.length; i++)
+			if (this.columnConfig[i].columnField == IUColumnConfig.COLUMN_ID) {
+				showingId = true;
+				break;
+			}
 		this.shell = shell;
 	}
 
@@ -93,7 +99,12 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 				String name = IUPropertyUtils.getIUProperty(iu, IInstallableUnit.PROP_NAME);
 				if (name != null)
 					return name;
-				return BLANK;
+				// If the iu name is not available, we return blank if we know know we are
+				// showing id in another column.  Otherwise we return id so the user doesn't
+				// see blank iu's.  
+				if (showingId)
+					return BLANK;
+				return iu.getId();
 			case IUColumnConfig.COLUMN_VERSION :
 				// If it's an element, determine if version should be shown
 				if (element instanceof IUElement) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstallWizard.java
index c605240..a12516e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstallWizard.java
@@ -31,7 +31,11 @@ public class InstallWizard extends UpdateOrInstallWizard {
 		this.plan = initialProvisioningPlan;
 	}
 
-	protected UpdateOrInstallWizardPage createMainPage(String profileId, IInstallableUnit[] ius) {
+	protected UpdateOrInstallWizardPage createMainPage() {
 		return new InstallWizardPage(ius, profileId, plan, this);
 	}
+
+	protected AcceptLicensesWizardPage createLicensesPage() {
+		return new AcceptLicensesWizardPage(ius, licenseManager, plan);
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateWizard.java
index e9a229b..afd7179 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateWizard.java
@@ -36,7 +36,11 @@ public class UpdateWizard extends UpdateOrInstallWizard {
 		this.initialSelections = initialSelections;
 	}
 
-	protected UpdateOrInstallWizardPage createMainPage(String profileId, IInstallableUnit[] ius) {
+	protected UpdateOrInstallWizardPage createMainPage() {
 		return new UpdateWizardPage(ius, elements, initialSelections, profileId, plan, this);
 	}
+
+	protected AcceptLicensesWizardPage createLicensesPage() {
+		return new AcceptLicensesWizardPage(UpdateWizardPage.getReplacementIUs(initialSelections), licenseManager, plan);
+	}
 }
