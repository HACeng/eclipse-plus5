commit 90202be67d5663e21cbd9e4c8cdcce38322adc6d
Author: Susan Franklin <sfranklin>
Date:   Wed Feb 20 23:30:44 2008 +0000

    Bug 212461 - [prov] [ui] - admin UI creates duplicate category nodes after adding a repo from end user UI

7	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
11	5	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvView.java
7	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
1	1	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
15	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
16	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
4	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index e6bab42..af4eab8 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -103,7 +103,13 @@ public class ProfilesView extends ProvView {
 
 	protected void addListeners() {
 		super.addListeners();
-		listener = new StructuredViewerProvisioningListener(viewer, StructuredViewerProvisioningListener.PROV_EVENT_IU | StructuredViewerProvisioningListener.PROV_EVENT_PROFILE, ProvAdminUIActivator.getDefault().getQueryProvider());
+		listener = new StructuredViewerProvisioningListener(viewer, StructuredViewerProvisioningListener.PROV_EVENT_IU | StructuredViewerProvisioningListener.PROV_EVENT_PROFILE, ProvAdminUIActivator.getDefault().getQueryProvider()) {
+			protected void refreshAll() {
+				// The content provider maintains the same deferred content manager
+				// unless input changes, so a viewer.refresh() is not enough.
+				ProfilesView.this.refreshAll();
+			}
+		};
 		ProvUI.addProvisioningListener(listener);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvView.java
index 2c00540..8cb78d5 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvView.java
@@ -122,8 +122,7 @@ abstract class ProvView extends ViewPart {
 		undoRedoGroup = new UndoRedoActionGroup(getSite(), ProvUI.getProvisioningUndoContext(), true);
 		refreshAction = new Action(ProvAdminUIMessages.ProvView_RefreshCommandLabel) {
 			public void run() {
-				refreshUnderlyingModel();
-				viewer.refresh();
+				refreshAll();
 			}
 		};
 		refreshAction.setToolTipText(ProvAdminUIMessages.ProvView_RefreshCommandTooltip);
@@ -155,9 +154,7 @@ abstract class ProvView extends ViewPart {
 
 			public void propertyChange(PropertyChangeEvent event) {
 				if (getVisualProperties().contains(event.getProperty())) {
-					// Refresh all model content.  The SDK query provider will provide an updated
-					// query for content based on these pref changes.
-					viewer.refresh();
+					ProvView.this.refreshAll();
 				}
 			}
 
@@ -224,4 +221,13 @@ abstract class ProvView extends ViewPart {
 		list.add(PreferenceConstants.PREF_SHOW_GROUPS_ONLY);
 		return list;
 	}
+
+	final void refreshAll() {
+		// Refresh the underlying elements
+		refreshUnderlyingModel();
+		// We then reset the input to ensure that anything the content providers 
+		// are caching gets reset also.  The net effect is that everything 
+		// will get queried again.
+		viewer.setInput(getInput());
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
index 76232bc..4756f53 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
@@ -82,7 +82,13 @@ abstract class RepositoriesView extends ProvView {
 
 	protected void addListeners() {
 		super.addListeners();
-		listener = new StructuredViewerProvisioningListener(viewer, StructuredViewerProvisioningListener.PROV_EVENT_REPOSITORY, ProvAdminUIActivator.getDefault().getQueryProvider());
+		listener = new StructuredViewerProvisioningListener(viewer, StructuredViewerProvisioningListener.PROV_EVENT_REPOSITORY, ProvAdminUIActivator.getDefault().getQueryProvider()) {
+			protected void refreshAll() {
+				// The content provider maintains the same deferred content manager
+				// unless input changes, so a viewer.refresh() is not enough.
+				RepositoriesView.this.refreshAll();
+			}
+		};
 		ProvUI.addProvisioningListener(listener);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index c0f0445..b89a296 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -91,7 +91,7 @@ public class UpdateAndInstallDialog extends TrayDialog {
 				if (event.getProperty().equals(PreferenceConstants.PREF_AUTO_UPDATE_ENABLED))
 					checkBox.setSelection(store.getBoolean(PreferenceConstants.PREF_AUTO_UPDATE_ENABLED));
 				if (event.getProperty().equals(PreferenceConstants.PREF_SHOW_LATEST_VERSION))
-					group.getAvailableIUViewer().refresh();
+					group.getAvailableIUGroup().refreshAll();
 			}
 		};
 		store.addPropertyChangeListener(preferenceListener);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
index cec20cc..62d3cf8 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AvailableIUGroup.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
 import org.eclipse.equinox.internal.p2.ui.dialogs.StructuredIUGroup;
-import org.eclipse.equinox.internal.p2.ui.viewers.AvailableIUContentProvider;
 import org.eclipse.equinox.internal.p2.ui.viewers.IUDetailsLabelProvider;
 import org.eclipse.equinox.internal.provisional.p2.engine.ProvisioningContext;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
@@ -64,8 +63,8 @@ public class AvailableIUGroup extends StructuredIUGroup {
 		availableIUViewer.setComparer(new ProvElementComparer());
 
 		// Now the content.
-		availableIUViewer.setContentProvider(new AvailableIUContentProvider(getQueryProvider()));
-		availableIUViewer.setInput(new MetadataRepositories(getProvisioningContext().getMetadataRepositories()));
+		availableIUViewer.setContentProvider(new DeferredQueryContentProvider(getQueryProvider()));
+		availableIUViewer.setInput(getInput());
 
 		// Now the presentation, columns before label provider.
 		setTreeColumns(availableIUViewer.getTree());
@@ -73,9 +72,7 @@ public class AvailableIUGroup extends StructuredIUGroup {
 
 		final StructuredViewerProvisioningListener listener = new StructuredViewerProvisioningListener(availableIUViewer, StructuredViewerProvisioningListener.PROV_EVENT_REPOSITORY, getQueryProvider()) {
 			protected void refreshAll() {
-				// The content provider caches the children unless input changes,
-				// so a viewer.refresh() is not enough.
-				availableIUViewer.setInput(new MetadataRepositories(getProvisioningContext().getMetadataRepositories()));
+				AvailableIUGroup.this.refreshAll();
 			}
 		};
 		ProvUIActivator.getDefault().addProvisioningListener(listener);
@@ -99,4 +96,16 @@ public class AvailableIUGroup extends StructuredIUGroup {
 			tc.setWidth(convertHorizontalDLUsToPixels(columns[i].defaultColumnWidth));
 		}
 	}
+
+	Object getInput() {
+		MetadataRepositories input = new MetadataRepositories(getProvisioningContext().getMetadataRepositories());
+		input.setQueryType(IQueryProvider.AVAILABLE_IUS);
+		return input;
+	}
+
+	public void refreshAll() {
+		// The content provider caches the children unless input changes,
+		// so a viewer.refresh() is not enough.
+		getStructuredViewer().setInput(getInput());
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
index e8c804b..e8d9a56 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/InstalledIUGroup.java
@@ -66,13 +66,17 @@ public class InstalledIUGroup extends StructuredIUGroup {
 
 		// Now the content.
 		installedIUViewer.setContentProvider(new DeferredQueryContentProvider(getQueryProvider()));
-		installedIUViewer.setInput(new ProfileElement(profileId));
+		installedIUViewer.setInput(getInput());
 
 		// Now the visuals, columns before labels.
 		setTableColumns(installedIUViewer.getTable());
 		installedIUViewer.setLabelProvider(new IUDetailsLabelProvider());
 
-		final StructuredViewerProvisioningListener listener = new StructuredViewerProvisioningListener(installedIUViewer, StructuredViewerProvisioningListener.PROV_EVENT_IU | StructuredViewerProvisioningListener.PROV_EVENT_PROFILE, getQueryProvider());
+		final StructuredViewerProvisioningListener listener = new StructuredViewerProvisioningListener(installedIUViewer, StructuredViewerProvisioningListener.PROV_EVENT_IU | StructuredViewerProvisioningListener.PROV_EVENT_PROFILE, getQueryProvider()) {
+			protected void refreshAll() {
+				InstalledIUGroup.this.refreshAll();
+			}
+		};
 		ProvUIActivator.getDefault().addProvisioningListener(listener);
 		installedIUViewer.getControl().addDisposeListener(new DisposeListener() {
 			public void widgetDisposed(DisposeEvent e) {
@@ -93,4 +97,14 @@ public class InstalledIUGroup extends StructuredIUGroup {
 			tc.setWidth(convertHorizontalDLUsToPixels(columns[i].defaultColumnWidth));
 		}
 	}
+
+	Object getInput() {
+		return new ProfileElement(profileId);
+	}
+
+	public void refreshAll() {
+		// The content provider caches the children unless input changes,
+		// so a viewer.refresh() is not enough.
+		getStructuredViewer().setInput(getInput());
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
index bc58cb7..7a8bd40 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
@@ -330,11 +330,11 @@ public class UpdateAndInstallGroup {
 		return Dialog.convertVerticalDLUsToPixels(fm, dlus);
 	}
 
-	public StructuredViewer getAvailableIUViewer() {
-		return availableIUGroup.getStructuredViewer();
+	public AvailableIUGroup getAvailableIUGroup() {
+		return availableIUGroup;
 	}
 
-	public StructuredViewer getInstalledIUViewer() {
-		return installedIUGroup.getStructuredViewer();
+	public InstalledIUGroup getInstalledIUGroup() {
+		return installedIUGroup;
 	}
 }
