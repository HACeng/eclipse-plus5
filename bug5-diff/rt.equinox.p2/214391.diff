commit 2200d202919805e23fd51cec10adb2e57980d18e
Author: Susan Franklin <sfranklin>
Date:   Fri Jan 4 22:06:49 2008 +0000

    Bug 214391 - [prov] [ui] - all references to profiles should be by ID

1	0	bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
8	5	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
26	9	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
1	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
2	0	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
15	26	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
16	1	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
4	5	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
2	0	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
4	5	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
2	2	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
7	7	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
7	8	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
7	8	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
5	5	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
4	5	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
12	13	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
5	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
18	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
6	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
5	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
2	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
2	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
2	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/IProfileChooser.java
6	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
7	8	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
6	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
5	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RevertWizard.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallWizard.java
12	29	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
4	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
10	15	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
19	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/ProfileElement.java
5	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/RollbackRepositoryElement.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileModificationOperation.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileOperation.java
14	14	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProvisioningUtil.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/InstalledIUCollector.java
1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/ProfileElementCollector.java
8	8	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
10	7	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementComparer.java
10	7	bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateChecker.java
5	6	bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateEvent.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
index 3b2b619..d1af3b8 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/META-INF/MANIFEST.MF
@@ -11,6 +11,7 @@ Bundle-RequiredExecutionEnvironment: J2SE-1.4,
 Import-Package: org.eclipse.equinox.internal.p2.core.helpers,
  org.eclipse.equinox.internal.p2.ui.model,
  org.eclipse.equinox.p2.artifact.repository,
+ org.eclipse.equinox.p2.core,
  org.eclipse.equinox.p2.core.eventbus,
  org.eclipse.equinox.p2.core.repository,
  org.eclipse.equinox.p2.engine,
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
index 631809d..5810434 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
@@ -90,14 +90,14 @@ public class MetadataRepositoriesView extends RepositoriesView {
 	private IProfileChooser getProfileChooser() {
 		return new IProfileChooser() {
 
-			public Profile getProfile(Shell shell) {
+			public String getProfileId(Shell shell) {
 				// TODO would be nice if the profile chooser dialog let you
 				// create a new profile
 				DeferredQueryContentProvider provider = new DeferredQueryContentProvider(ProvAdminUIActivator.getDefault().getQueryProvider());
 				if (provider.getElements(new Profiles()).length == 0) {
-					AddProfileDialog dialog = new AddProfileDialog(shell, new Profile[0]);
+					AddProfileDialog dialog = new AddProfileDialog(shell, new String[0]);
 					if (dialog.open() == Window.OK) {
-						return dialog.getAddedProfile();
+						return dialog.getAddedProfileId();
 					}
 					return null;
 				}
@@ -109,8 +109,11 @@ public class MetadataRepositoriesView extends RepositoriesView {
 				dialog.setContentProvider(provider);
 				dialog.open();
 				Object[] result = dialog.getResult();
-				if (result != null && result.length > 0)
-					return (Profile) ProvUI.getAdapter(result[0], Profile.class);
+				if (result != null && result.length > 0) {
+					Profile profile = (Profile) ProvUI.getAdapter(result[0], Profile.class);
+					if (profile != null)
+						return profile.getProfileId();
+				}
 				return null;
 			}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
index d3f0e09..4cbf484 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProfilesView.java
@@ -15,6 +15,7 @@ import java.util.List;
 import org.eclipse.equinox.internal.p2.ui.admin.dialogs.AddProfileDialog;
 import org.eclipse.equinox.internal.p2.ui.admin.dialogs.UpdateAndInstallDialog;
 import org.eclipse.equinox.internal.p2.ui.admin.preferences.PreferenceConstants;
+import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.actions.UninstallAction;
@@ -22,8 +23,7 @@ import org.eclipse.equinox.p2.ui.actions.UpdateAction;
 import org.eclipse.equinox.p2.ui.admin.ProvAdminUIActivator;
 import org.eclipse.equinox.p2.ui.model.InstalledIUElement;
 import org.eclipse.equinox.p2.ui.model.Profiles;
-import org.eclipse.equinox.p2.ui.operations.ProfileOperation;
-import org.eclipse.equinox.p2.ui.operations.RemoveProfilesOperation;
+import org.eclipse.equinox.p2.ui.operations.*;
 import org.eclipse.equinox.p2.ui.viewers.*;
 import org.eclipse.jface.action.*;
 import org.eclipse.jface.viewers.*;
@@ -76,7 +76,7 @@ public class ProfilesView extends ProvView {
 		}
 
 		public void run() {
-			new AddProfileDialog(viewer.getControl().getShell(), ((ITreeContentProvider) viewer.getContentProvider()).getElements(getInput())).open();
+			new AddProfileDialog(viewer.getControl().getShell(), getKnownProfileIds()).open();
 		}
 	}
 
@@ -87,9 +87,9 @@ public class ProfilesView extends ProvView {
 		}
 
 		public void run() {
-			Profile profile = getProfileChooser().getProfile(getShell());
-			if (profile != null) {
-				UpdateAndInstallDialog dialog = new UpdateAndInstallDialog(getShell(), profile);
+			String profileId = getProfileChooser().getProfileId(getShell());
+			if (profileId != null) {
+				UpdateAndInstallDialog dialog = new UpdateAndInstallDialog(getShell(), profileId);
 				dialog.open();
 			}
 		}
@@ -212,12 +212,15 @@ public class ProfilesView extends ProvView {
 
 	IProfileChooser getProfileChooser() {
 		return new IProfileChooser() {
-			public Profile getProfile(Shell shell) {
+			public String getProfileId(Shell shell) {
 				Object firstElement = getSelection().getFirstElement();
 				if (firstElement instanceof InstalledIUElement) {
-					return ((InstalledIUElement) firstElement).getProfile();
+					return ((InstalledIUElement) firstElement).getProfileId();
 				}
-				return (Profile) ProvUI.getAdapter(firstElement, Profile.class);
+				Profile profile = (Profile) ProvUI.getAdapter(firstElement, Profile.class);
+				if (profile != null)
+					return profile.getProfileId();
+				return null;
 			}
 
 			public String getLabel() {
@@ -231,4 +234,18 @@ public class ProfilesView extends ProvView {
 		list.add(PreferenceConstants.PREF_SHOW_INSTALL_ROOTS_ONLY);
 		return list;
 	}
+
+	private String[] getKnownProfileIds() {
+		try {
+			Profile[] allProfiles = ProvisioningUtil.getProfiles();
+			String[] ids = new String[allProfiles.length];
+			for (int i = 0; i < allProfiles.length; i++)
+				ids[i] = allProfiles[i].getProfileId();
+			return ids;
+		} catch (ProvisionException e) {
+			ProvUI.handleException(e, ProvAdminUIMessages.ProfilesView_0);
+			return new String[0];
+		}
+
+	}
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
index efbb4a8..5682478 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminQueryProvider.java
@@ -59,7 +59,7 @@ public class ProvAdminQueryProvider implements IProvElementQueryProvider {
 			case IProvElementQueryProvider.AVAILABLE_IUS :
 				// Is it a rollback repository?
 				if (element instanceof RollbackRepositoryElement) {
-					Query profileQuery = new InstallableUnitQuery(((RollbackRepositoryElement) element).getProfile().getProfileId());
+					Query profileQuery = new InstallableUnitQuery(((RollbackRepositoryElement) element).getProfileId());
 					return new ElementQueryDescriptor(element.getQueryable(), profileQuery, new AvailableIUCollector(this, element.getQueryable(), false));
 				}
 				// It is a regular repository.
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
index 40e3fd6..d4f8736 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ProvAdminUIMessages.java
@@ -37,6 +37,7 @@ public class ProvAdminUIMessages extends NLS {
 	public static String ArtifactRepositoriesView_AddRepositoryLabel;
 	public static String ArtifactRepositoriesView_RemoveRepositoryTooltip;
 	public static String ArtifactRepositoriesView_RemoveRepositoryOperationLabel;
+	public static String ProfilesView_0;
 	public static String ProfilesView_AddProfileTooltip;
 	public static String ProfilesView_AddProfileLabel;
 	public static String ProfilesView_RemoveProfileLabel;
@@ -75,6 +76,7 @@ public class ProvAdminUIMessages extends NLS {
 	public static String IUGroup_TouchpointData;
 	public static String IUGroup_TouchpointType;
 	public static String IUGroup_Version;
+	public static String IUProfilePropertiesGroup_InvalidProfileID;
 
 	public static String No_Property_Item_Selected;
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
index ae92d10..69ff942 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddProfileDialog.java
@@ -10,12 +10,10 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
 
-import java.util.ArrayList;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.equinox.internal.p2.ui.admin.ProvAdminUIMessages;
 import org.eclipse.equinox.p2.engine.Profile;
-import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.p2.ui.admin.ProvAdminUIActivator;
 import org.eclipse.equinox.p2.ui.operations.AddProfileOperation;
@@ -35,13 +33,13 @@ public class AddProfileDialog extends StatusDialog {
 
 	private ProfileGroup profileGroup;
 	private Button okButton;
-	private Profile[] knownProfiles;
-	private Profile addedProfile;
+	private String[] knownProfileIds;
+	private String addedProfileId;
 
-	public AddProfileDialog(Shell parentShell, Object[] knownProfileElements) {
+	public AddProfileDialog(Shell parentShell, String[] knownProfiles) {
 
 		super(parentShell);
-		recordProfiles(knownProfileElements);
+		this.knownProfileIds = knownProfiles;
 		setTitle(ProvAdminUIMessages.AddProfileDialog_Title);
 	}
 
@@ -70,11 +68,12 @@ public class AddProfileDialog extends StatusDialog {
 	 */
 	private void addProfile() {
 		profileGroup.updateProfile();
-		addedProfile = profileGroup.getProfile();
-		if (addedProfile == null) {
+		Profile profile = profileGroup.getProfile();
+		if (profile == null) {
 			return;
 		}
-		ProvisioningOperationRunner.schedule(new AddProfileOperation(ProvAdminUIMessages.AddProfileDialog_OperationLabel, addedProfile), getShell());
+		addedProfileId = profile.getProfileId();
+		ProvisioningOperationRunner.schedule(new AddProfileOperation(ProvAdminUIMessages.AddProfileDialog_OperationLabel, profile), getShell());
 	}
 
 	void verifyComplete() {
@@ -96,12 +95,12 @@ public class AddProfileDialog extends StatusDialog {
 	}
 
 	private boolean isDuplicate() {
-		if (knownProfiles == null) {
+		if (knownProfileIds == null) {
 			return false;
 		}
 
-		for (int i = 0; i < knownProfiles.length; i++) {
-			if (knownProfiles[i].getProfileId().equals(profileGroup.getProfileId())) {
+		for (int i = 0; i < knownProfileIds.length; i++) {
+			if (knownProfileIds[i].equals(profileGroup.getProfileId())) {
 				setOkEnablement(false);
 				this.updateStatus(new Status(IStatus.ERROR, ProvAdminUIActivator.PLUGIN_ID, IStatus.OK, ProvAdminUIMessages.AddProfileDialog_DuplicateProfileID, null));
 				return true;
@@ -110,16 +109,6 @@ public class AddProfileDialog extends StatusDialog {
 		return false;
 	}
 
-	private void recordProfiles(Object[] profileElements) {
-		java.util.ArrayList profiles = new ArrayList();
-		for (int i = 0; i < profileElements.length; i++) {
-			Profile profile = (Profile) ProvUI.getAdapter(profileElements[i], Profile.class);
-			if (profile != null)
-				profiles.add(profile);
-		}
-		knownProfiles = (Profile[]) profiles.toArray(new Profile[profiles.size()]);
-	}
-
 	protected void updateButtonsEnableState(IStatus status) {
 		setOkEnablement(!status.matches(IStatus.ERROR));
 	}
@@ -130,13 +119,13 @@ public class AddProfileDialog extends StatusDialog {
 	}
 
 	/**
-	 * Return the profile that was added with this dialog, or null
+	 * Return the profile id that was added with this dialog, or null
 	 * if no profile has been added.  This method will not return
 	 * a valid profile until the user has pressed OK and the profile
 	 * has been added to the profile registry.
-	 * @return the added profile
+	 * @return the added profile's id
 	 */
-	public Profile getAddedProfile() {
-		return addedProfile;
+	public String getAddedProfileId() {
+		return addedProfileId;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
index 6370cf0..b37e3eb 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/IUProfilePropertiesGroup.java
@@ -11,9 +11,14 @@
 package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.admin.ProvAdminUIMessages;
+import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.dialogs.IUGroup;
 import org.eclipse.equinox.p2.ui.model.InstalledIUElement;
+import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
+import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.events.ModifyListener;
 import org.eclipse.swt.layout.GridData;
@@ -67,9 +72,19 @@ public class IUProfilePropertiesGroup extends IUGroup {
 		String[] userPropNames = new String[] {ProvAdminUIMessages.ProfileRootPropertyName};
 		for (int i = 0; i < propNames.length; i++) {
 			TableItem item = new TableItem(propertiesTable, SWT.NULL);
-			String value = ((InstalledIUElement) iuElement).getProfile().getInstallableUnitProfileProperty(getIU(), propNames[i]);
+			Profile profile = getProfile((InstalledIUElement) iuElement);
+			String value = profile == null ? null : profile.getInstallableUnitProfileProperty(getIU(), propNames[i]);
 			if (value != null)
 				item.setText(new String[] {userPropNames[i], value});
 		}
 	}
+
+	private Profile getProfile(InstalledIUElement element) {
+		try {
+			return ProvisioningUtil.getProfile(element.getProfileId());
+		} catch (ProvisionException e) {
+			ProvUI.handleException(e, NLS.bind(ProvAdminUIMessages.IUProfilePropertiesGroup_InvalidProfileID, element.getProfileId()));
+			return null;
+		}
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
index fdd273d..888906d 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/UpdateAndInstallDialog.java
@@ -11,7 +11,6 @@
 package org.eclipse.equinox.internal.p2.ui.admin.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.admin.ProvAdminUIMessages;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.ui.admin.ProvAdminUIActivator;
 import org.eclipse.equinox.p2.ui.dialogs.UpdateAndInstallGroup;
 import org.eclipse.jface.dialogs.Dialog;
@@ -28,15 +27,15 @@ import org.eclipse.swt.widgets.*;
  */
 public class UpdateAndInstallDialog extends TrayDialog {
 
-	private Profile profile;
+	private String profileId;
 
 	/**
 	 * Create an instance of this Dialog.
 	 * 
 	 */
-	public UpdateAndInstallDialog(Shell shell, Profile profile) {
+	public UpdateAndInstallDialog(Shell shell, String profileId) {
 		super(shell);
-		this.profile = profile;
+		this.profileId = profileId;
 	}
 
 	protected void configureShell(Shell shell) {
@@ -50,7 +49,7 @@ public class UpdateAndInstallDialog extends TrayDialog {
 		FontMetrics fontMetrics = gc.getFontMetrics();
 		gc.dispose();
 
-		UpdateAndInstallGroup group = new UpdateAndInstallGroup(parent, profile, ProvAdminUIMessages.UpdateAndInstallDialog_InstalledIUsPageLabel, ProvAdminUIMessages.UpdateAndInstallDialog_AvailableIUsPageLabel, null, null, ProvAdminUIActivator.getDefault().getQueryProvider(), null, fontMetrics);
+		UpdateAndInstallGroup group = new UpdateAndInstallGroup(parent, profileId, ProvAdminUIMessages.UpdateAndInstallDialog_InstalledIUsPageLabel, ProvAdminUIMessages.UpdateAndInstallDialog_AvailableIUsPageLabel, null, null, ProvAdminUIActivator.getDefault().getQueryProvider(), null, fontMetrics);
 		Dialog.applyDialogFont(group.getTabFolder());
 		return group.getTabFolder();
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
index 80419b7..bdcd44a 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/messages.properties
@@ -31,6 +31,7 @@ ArtifactRepositoriesView_AddRepositoryLabel=Add repository...
 ArtifactRepositoriesView_AddRepositoryTooltip=Add a new artifact repository
 ArtifactRepositoriesView_RemoveRepositoryTooltip=Remove the selected artifact repositories
 ArtifactRepositoriesView_RemoveRepositoryOperationLabel=Remove Artifact Repositories
+ProfilesView_0=Error retrieving profiles
 ProfilesView_AddProfileTooltip=Add a new profile
 ProvView_RefreshCommandTooltip=Refresh the items in the view.
 ProfilesView_AddProfileLabel=Add profile...
@@ -55,6 +56,7 @@ IUGroup_TouchpointData=Touchpoint &data:
 IUGroup_RequiredCapabilities=&Required capabilities:
 IUGroup_ProvidedCapabilities=&Provided capabilities:
 IUGroup_IU_ID_Required=Must set an IU ID
+IUProfilePropertiesGroup_InvalidProfileID=Profile id {0} not valid.
 ProfileGroup_ID=Profile &id:
 ProfileGroup_Browse=&Browse...
 ProfileGroup_Browse2=B&rowse...
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
index f461271..6636647 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AutomaticUpdateScheduler.java
@@ -16,7 +16,6 @@ import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
 import org.eclipse.equinox.internal.p2.ui.sdk.updates.AutomaticUpdater;
 import org.eclipse.equinox.p2.core.ProvisionException;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.updatechecker.IUpdateListener;
 import org.eclipse.equinox.p2.updatechecker.UpdateChecker;
 import org.eclipse.ui.IStartup;
@@ -39,7 +38,7 @@ public class AutomaticUpdateScheduler implements IStartup {
 
 	private IUpdateListener listener = null;
 	private UpdateChecker checker = null;
-	private Profile profile;
+	private String profileId;
 
 	/**
 	 * The constructor.
@@ -54,9 +53,9 @@ public class AutomaticUpdateScheduler implements IStartup {
 			return;
 		}
 		try {
-			profile = ProvSDKUIActivator.getAnyProfile();
+			profileId = ProvSDKUIActivator.getProfileId();
 		} catch (ProvisionException e) {
-			profile = null;
+			profileId = null;
 			IStatus status = new Status(IStatus.ERROR, ProvSDKUIActivator.PLUGIN_ID, ProvSDKMessages.UpdateHandler_NoProfilesDefined, e);
 			StatusManager.getManager().handle(status, StatusManager.LOG);
 			return;
@@ -98,7 +97,7 @@ public class AutomaticUpdateScheduler implements IStartup {
 			poll = computePoll(pref);
 		}
 		listener = new AutomaticUpdater();
-		checker.addUpdateCheck(profile.getProfileId(), delay, poll, listener);
+		checker.addUpdateCheck(profileId, delay, poll, listener);
 
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
index dc8a973..f5ad9c3 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKQueryProvider.java
@@ -46,7 +46,7 @@ public class ProvSDKQueryProvider implements IProvElementQueryProvider {
 				return new ElementQueryDescriptor(queryable, new RepositoryPropertyQuery(IRepository.IMPLEMENTATION_ONLY_KEY, Boolean.toString(true), false), new QueriedElementCollector(this, queryable));
 			case IProvElementQueryProvider.AVAILABLE_IUS :
 				if (element instanceof RollbackRepositoryElement) {
-					Query profileIdQuery = new InstallableUnitQuery(((RollbackRepositoryElement) element).getProfile().getProfileId());
+					Query profileIdQuery = new InstallableUnitQuery(((RollbackRepositoryElement) element).getProfileId());
 					Query rollbackIUQuery = new IUPropertyQuery(IInstallableUnit.PROP_PROFILE_IU_KEY, Boolean.toString(true));
 					return new ElementQueryDescriptor(element.getQueryable(), new CompoundQuery(new Query[] {profileIdQuery, rollbackIUQuery}, true), new RollbackIUCollector(this, element.getQueryable()));
 				}
@@ -86,7 +86,7 @@ public class ProvSDKQueryProvider implements IProvElementQueryProvider {
 					public boolean isMatch(Object candidate) {
 						return ProvUI.getAdapter(candidate, Profile.class) != null;
 					}
-				}, new QueriedElementCollector(this, queryable));
+				}, new ProfileElementCollector(this, null));
 			default :
 				return null;
 		}
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
index a60bc76..44ac8126 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
@@ -127,24 +127,24 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 	}
 
 	/**
-	 * Get a profile for the running system.  If not available, get
+	 * Get the id of the profile for the running system.  If not available, get
 	 * any available profile.  Getting any profile allows testing of the
 	 * UI even when the system is not self hosting.  Error reporting is
 	 * left to the client, who must check for a null return.
 	 */
-	public static Profile getAnyProfile() throws ProvisionException {
-		Profile profile = null;
+	public static String getProfileId() throws ProvisionException {
+		String profileId = null;
 		// Get the profile of the running system.
-		profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
+		Profile profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
 		if (profile == null) {
 			StatusManager.getManager().handle(getNoSelfProfileStatus(), StatusManager.LOG);
 			Profile[] profiles = ProvisioningUtil.getProfiles();
 			if (profiles.length > 0)
-				return profiles[0];
-			return ProfileFactory.makeProfile(DEFAULT_PROFILE_ID);
+				return profiles[0].getProfileId();
+			return ProfileFactory.makeProfile(DEFAULT_PROFILE_ID).getProfileId();
 
 		}
-		return profile;
+		return profile.getProfileId();
 	}
 
 	void setScheduler(AutomaticUpdateScheduler scheduler) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index 15cb5b1..8a67a08 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -11,7 +11,6 @@
 package org.eclipse.equinox.internal.p2.ui.sdk;
 
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.ui.IProfileChooser;
 import org.eclipse.equinox.p2.ui.IRepositoryManipulator;
 import org.eclipse.equinox.p2.ui.dialogs.RevertWizard;
@@ -43,16 +42,16 @@ public class UpdateAndInstallDialog extends TrayDialog {
 
 	private static final String DIALOG_SETTINGS_SECTION = "UpdateAndInstallDialog"; //$NON-NLS-1$
 	private static final String SELECTED_TAB_SETTING = "SelectedTab"; //$NON-NLS-1$
-	Profile profile;
+	String profileId;
 	UpdateAndInstallGroup group;
 
 	/**
 	 * Create an instance of this Dialog.
 	 * 
 	 */
-	public UpdateAndInstallDialog(Shell shell, Profile profile) {
+	public UpdateAndInstallDialog(Shell shell, String profileId) {
 		super(shell);
-		this.profile = profile;
+		this.profileId = profileId;
 		setShellStyle(SWT.DIALOG_TRIM | SWT.MODELESS | SWT.MAX | SWT.RESIZE | getDefaultOrientation());
 		setBlockOnOpen(false);
 	}
@@ -76,7 +75,7 @@ public class UpdateAndInstallDialog extends TrayDialog {
 		FontMetrics fontMetrics = gc.getFontMetrics();
 		gc.dispose();
 
-		group = new UpdateAndInstallGroup(comp, profile, ProvSDKMessages.UpdateAndInstallDialog_InstalledFeatures, ProvSDKMessages.UpdateAndInstallDialog_AvailableFeatures, getRepositoryManipulator(), getProfileChooser(), ProvSDKUIActivator.getDefault().getQueryProvider(), ProvSDKUIActivator.getDefault().getLicenseManager(), fontMetrics);
+		group = new UpdateAndInstallGroup(comp, profileId, ProvSDKMessages.UpdateAndInstallDialog_InstalledFeatures, ProvSDKMessages.UpdateAndInstallDialog_AvailableFeatures, getRepositoryManipulator(), getProfileChooser(), ProvSDKUIActivator.getDefault().getQueryProvider(), ProvSDKUIActivator.getDefault().getLicenseManager(), fontMetrics);
 		final Button checkBox = new Button(comp, SWT.CHECK);
 		final IPreferenceStore store = ProvSDKUIActivator.getDefault().getPreferenceStore();
 		checkBox.setText(ProvSDKMessages.UpdateAndInstallDialog_AlertCheckbox);
@@ -150,13 +149,13 @@ public class UpdateAndInstallDialog extends TrayDialog {
 
 			}
 
-			public Profile getProfile(Shell shell) {
-				RevertWizard wizard = new RevertWizard(profile, ProvSDKUIActivator.getDefault().getQueryProvider());
+			public String getProfileId(Shell shell) {
+				RevertWizard wizard = new RevertWizard(profileId, ProvSDKUIActivator.getDefault().getQueryProvider());
 				WizardDialog dialog = new WizardDialog(shell, wizard);
 				dialog.create();
 				dialog.getShell().setSize(600, 500);
 				if (dialog.open() == Window.OK)
-					return profile;
+					return profileId;
 				return null;
 			}
 		};
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
index 0ed03b6..8c07a24 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateHandler.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.internal.p2.ui.sdk;
 
 import org.eclipse.core.commands.*;
 import org.eclipse.equinox.p2.core.ProvisionException;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.handlers.HandlerUtil;
@@ -36,16 +35,16 @@ public class UpdateHandler extends AbstractHandler {
 	 */
 	public Object execute(ExecutionEvent event) throws ExecutionException {
 		Shell shell = HandlerUtil.getActiveWorkbenchWindowChecked(event).getShell();
-		Profile profile;
+		String profileId;
 		String message = null;
 		try {
-			profile = ProvSDKUIActivator.getAnyProfile();
+			profileId = ProvSDKUIActivator.getProfileId();
 		} catch (ProvisionException e) {
-			profile = null;
+			profileId = null;
 			message = ProvSDKMessages.UpdateHandler_NoProfilesDefined;
 		}
-		if (profile != null) {
-			openDialog(shell, profile);
+		if (profileId != null) {
+			openDialog(shell, profileId);
 		} else {
 			if (message == null)
 				message = ProvSDKMessages.UpdateHandler_NoProfileInstanceDefined;
@@ -54,8 +53,8 @@ public class UpdateHandler extends AbstractHandler {
 		return null;
 	}
 
-	protected void openDialog(Shell shell, Profile profile) {
-		UpdateAndInstallDialog dialog = new UpdateAndInstallDialog(shell, profile);
+	protected void openDialog(Shell shell, String profileId) {
+		UpdateAndInstallDialog dialog = new UpdateAndInstallDialog(shell, profileId);
 		dialog.open();
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
index a0f721e..0edad41 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdater.java
@@ -49,15 +49,15 @@ public class AutomaticUpdater implements IUpdateListener {
 			if (download) {
 				IInstallableUnit[] replacements = ProvisioningUtil.updatesFor(toUpdate, null);
 				if (replacements.length > 0) {
-					final ProvisioningPlan plan = ProvisioningUtil.getPlanner().getReplacePlan(toUpdate, replacements, event.getProfile(), null, null);
-					Job job = ProvisioningOperationRunner.schedule(new ProfileModificationOperation(ProvSDKMessages.AutomaticUpdater_AutomaticDownloadOperationName, event.getProfile().getProfileId(), plan, new DownloadPhaseSet(), false), null);
+					final ProvisioningPlan plan = ProvisioningUtil.getPlanner().getReplacePlan(toUpdate, replacements, ProvisioningUtil.getProfile(event.getProfileId()), null, null);
+					Job job = ProvisioningOperationRunner.schedule(new ProfileModificationOperation(ProvSDKMessages.AutomaticUpdater_AutomaticDownloadOperationName, event.getProfileId(), plan, new DownloadPhaseSet(), false), null);
 					job.addJobChangeListener(new JobChangeAdapter() {
 						public void done(IJobChangeEvent jobEvent) {
 							IStatus status = jobEvent.getResult();
 							if (status.isOK()) {
 								PlatformUI.getWorkbench().getDisplay().asyncExec(new Runnable() {
 									public void run() {
-										new AutomaticUpdatesPopup(toUpdate, event.getProfile(), true, prefs).open();
+										new AutomaticUpdatesPopup(toUpdate, event.getProfileId(), true, prefs).open();
 									}
 								});
 							} else if (status.getSeverity() != IStatus.CANCEL) {
@@ -69,7 +69,7 @@ public class AutomaticUpdater implements IUpdateListener {
 			} else {
 				PlatformUI.getWorkbench().getDisplay().asyncExec(new Runnable() {
 					public void run() {
-						new AutomaticUpdatesPopup(toUpdate, event.getProfile(), false, prefs).open();
+						new AutomaticUpdatesPopup(toUpdate, event.getProfileId(), false, prefs).open();
 					}
 				});
 			}
@@ -93,7 +93,7 @@ public class AutomaticUpdater implements IUpdateListener {
 				return result;
 			}
 		};
-		ProfileElement element = new ProfileElement(event.getProfile());
+		ProfileElement element = new ProfileElement(event.getProfileId());
 		ElementQueryDescriptor descriptor = ProvSDKUIActivator.getDefault().getQueryProvider().getQueryDescriptor(element, IProvElementQueryProvider.AVAILABLE_UPDATES);
 		Object[] elements = rootQueryable.query(descriptor.query, descriptor.result, null).toArray(Object.class);
 		IInstallableUnit[] result = new IInstallableUnit[elements.length];
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
index 0a5dc75..4824858 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/updates/AutomaticUpdatesPopup.java
@@ -16,7 +16,6 @@ import org.eclipse.core.runtime.Preferences.PropertyChangeEvent;
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.equinox.internal.p2.ui.sdk.*;
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
 import org.eclipse.equinox.p2.ui.dialogs.UpdateWizard;
@@ -55,15 +54,15 @@ public class AutomaticUpdatesPopup extends PopupDialog {
 	IPropertyChangeListener listener;
 	WorkbenchJob remindJob;
 	IInstallableUnit[] toUpdate;
-	Profile profile;
+	String profileId;
 	boolean downloaded;
 	boolean hidden = false;
 	StatusLineCLabelContribution item;
 
-	public AutomaticUpdatesPopup(IInstallableUnit[] toUpdate, Profile profile, boolean alreadyDownloaded, Preferences prefs) {
+	public AutomaticUpdatesPopup(IInstallableUnit[] toUpdate, String profileId, boolean alreadyDownloaded, Preferences prefs) {
 		super((Shell) null, PopupDialog.INFOPOPUPRESIZE_SHELLSTYLE | SWT.MODELESS, false, true, false, false, ProvSDKMessages.AutomaticUpdatesDialog_UpdatesAvailableTitle, null);
 		downloaded = alreadyDownloaded;
-		this.profile = profile;
+		this.profileId = profileId;
 		this.toUpdate = toUpdate;
 		this.prefs = prefs;
 		remindDelay = computeRemindDelay();
@@ -94,7 +93,7 @@ public class AutomaticUpdatesPopup extends PopupDialog {
 			infoLink.setText(ProvSDKMessages.AutomaticUpdatesDialog_ClickToReviewNotDownloaded);
 		infoLink.addSelectionListener(new SelectionAdapter() {
 			public void widgetSelected(SelectionEvent e) {
-				UpdateWizard wizard = new UpdateWizard(profile, toUpdate, ProvSDKUIActivator.getDefault().getLicenseManager());
+				UpdateWizard wizard = new UpdateWizard(profileId, toUpdate, ProvSDKUIActivator.getDefault().getLicenseManager());
 				WizardDialog dialog = new WizardDialog(getShell(), wizard);
 				dialog.open();
 			}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 1fbea3d..0d7a7e6 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -47,6 +47,8 @@ public class ProvUIMessages extends NLS {
 	public static String IUDetailsLabelProvider_Unknown;
 	public static String IUPropertiesGroup_NameProperty;
 	public static String IUPropertiesGroup_ProviderProperty;
+	public static String ProfileElement_InvalidProfile;
+	public static String ProfileModificationWizardPage_ProfileNotFound;
 	// utility error messages
 	public static String ProvisioningUtil_NoRepositoryManager;
 	public static String ProvisioningUtil_AddRepositoryFailure;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
index 86ebf29..cff020a 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/actions/ProfileModificationAction.java
@@ -16,7 +16,6 @@ import java.util.ArrayList;
 import java.util.List;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.jface.dialogs.ProgressMonitorDialog;
@@ -26,13 +25,13 @@ import org.eclipse.swt.widgets.Shell;
 
 public abstract class ProfileModificationAction extends ProvisioningAction {
 
-	Profile profile;
+	String profileId;
 	IProfileChooser profileChooser;
 	LicenseManager licenseManager;
 
-	protected ProfileModificationAction(String text, ISelectionProvider selectionProvider, Profile profile, IProfileChooser profileChooser, LicenseManager licenseManager, Shell shell) {
+	protected ProfileModificationAction(String text, ISelectionProvider selectionProvider, String profileId, IProfileChooser profileChooser, LicenseManager licenseManager, Shell shell) {
 		super(text, selectionProvider, shell);
-		this.profile = profile;
+		this.profileId = profileId;
 		this.profileChooser = profileChooser;
 		this.licenseManager = licenseManager;
 	}
@@ -40,12 +39,12 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 	public void run() {
 		// If the profile was not provided, see if we have a
 		// viewer element that can tell us.
-		Profile targetProfile = profile;
-		if (targetProfile == null && profileChooser != null) {
-			targetProfile = profileChooser.getProfile(getShell());
+		String targetProfileId = profileId;
+		if (targetProfileId == null && profileChooser != null) {
+			targetProfileId = profileChooser.getProfileId(getShell());
 		}
 		// We could not figure out a profile to operate on, so return
-		if (targetProfile == null) {
+		if (targetProfileId == null) {
 			return;
 		}
 
@@ -60,10 +59,10 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 
 		final IInstallableUnit[] ius = (IInstallableUnit[]) iusList.toArray(new IInstallableUnit[iusList.size()]);
 		final IStatus[] status = new IStatus[1];
-		final Profile prof = targetProfile;
+		final String id = targetProfileId;
 		IRunnableWithProgress runnable = new IRunnableWithProgress() {
 			public void run(IProgressMonitor monitor) {
-				status[0] = validateOperation(ius, prof, monitor);
+				status[0] = validateOperation(ius, id, monitor);
 			}
 		};
 		try {
@@ -75,7 +74,7 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 		}
 
 		if (status[0].isOK())
-			performOperation(ius, prof);
+			performOperation(ius, id);
 		else
 			ProvUI.reportStatus(status[0]);
 
@@ -84,12 +83,12 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 	/*
 	 * Validate whether the proposed profile modification operation can run.
 	 */
-	protected abstract IStatus validateOperation(IInstallableUnit[] ius, Profile targetProfile, IProgressMonitor monitor);
+	protected abstract IStatus validateOperation(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor);
 
 	/*
 	 * Run the operation, opening any dialogs, etc. 
 	 */
-	protected abstract void performOperation(IInstallableUnit[] ius, Profile targetProfile);
+	protected abstract void performOperation(IInstallableUnit[] ius, String targetProfileId);
 
 	protected abstract String getTaskName();
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
index e67e875..827fc2f 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/InstallWizardPage.java
@@ -14,7 +14,6 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.engine.phases.Sizing;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
@@ -23,8 +22,8 @@ import org.eclipse.equinox.p2.ui.operations.*;
 
 public class InstallWizardPage extends UpdateOrInstallWizardPage {
 
-	public InstallWizardPage(IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
-		super("InstallWizardPage", ius, profile, wizard); //$NON-NLS-1$
+	public InstallWizardPage(IInstallableUnit[] ius, String profileId, UpdateOrInstallWizard wizard) {
+		super("InstallWizardPage", ius, profileId, wizard); //$NON-NLS-1$
 		setTitle(ProvUIMessages.InstallIUOperationLabel);
 		setDescription(ProvUIMessages.InstallDialog_InstallSelectionMessage);
 	}
@@ -34,8 +33,8 @@ public class InstallWizardPage extends UpdateOrInstallWizardPage {
 		SubMonitor sub = SubMonitor.convert(monitor);
 		sub.setWorkRemaining(100);
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {iu}, getProfile(), sub.newChild(50));
-			Sizing info = ProvisioningUtil.getSizeInfo(plan, getProfile(), sub.newChild(50));
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {iu}, getProfileId(), sub.newChild(50));
+			Sizing info = ProvisioningUtil.getSizeInfo(plan, getProfileId(), sub.newChild(50));
 			if (info == null)
 				size = IUElement.SIZE_UNKNOWN;
 			else
@@ -53,7 +52,7 @@ public class InstallWizardPage extends UpdateOrInstallWizardPage {
 	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
 			IInstallableUnit[] selected = elementsToIUs(selectedElements);
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(selected, getProfile(), monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(selected, getProfileId(), monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
 				return new InstallOperation(getOperationLabel(), getProfile().getProfileId(), plan, selected);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
index 5c6f370..6017d1e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/ProfileModificationWizardPage.java
@@ -14,13 +14,16 @@ import java.lang.reflect.InvocationTargetException;
 import java.util.ArrayList;
 import java.util.List;
 import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement;
+import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
+import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.p2.ui.viewers.*;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
@@ -37,14 +40,14 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 	private static final int DEFAULT_COLUMN_WIDTH = 50;
 	private static final int DEFAULT_SMALL_COLUMN_WIDTH = 20;
 	private IInstallableUnit[] ius;
-	private Profile profile;
+	private String profileId;
 	CheckboxTableViewer listViewer;
 	StaticContentProvider contentProvider;
 
-	protected ProfileModificationWizardPage(String id, IInstallableUnit[] ius, Profile profile) {
+	protected ProfileModificationWizardPage(String id, IInstallableUnit[] ius, String profileID) {
 		super(id);
 		this.ius = ius;
-		this.profile = profile;
+		this.profileId = profileID;
 	}
 
 	public void createControl(Composite parent) {
@@ -95,7 +98,7 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 
 	protected void makeElements(IInstallableUnit[] iusToShow, List list) {
 		for (int i = 0; i < iusToShow.length; i++) {
-			list.add(new AvailableIUElement(iusToShow[i], profile.getProfileId()));
+			list.add(new AvailableIUElement(iusToShow[i], getProfileId()));
 		}
 	}
 
@@ -135,7 +138,16 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 	}
 
 	protected Profile getProfile() {
-		return profile;
+		try {
+			return ProvisioningUtil.getProfile(profileId);
+		} catch (ProvisionException e) {
+			ProvUI.handleException(e, ProvUIMessages.ProfileModificationWizardPage_ProfileNotFound);
+		}
+		return null;
+	}
+
+	protected String getProfileId() {
+		return profileId;
 	}
 
 	protected IInstallableUnit[] getIUs() {
@@ -162,4 +174,4 @@ public abstract class ProfileModificationWizardPage extends WizardPage {
 		// what they want before this page opens.
 		listViewer.setAllChecked(true);
 	}
-}
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
index eb9539a..6790123 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/RevertProfileWizardPage.java
@@ -17,7 +17,6 @@ import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
@@ -45,15 +44,15 @@ public class RevertProfileWizardPage extends WizardPage {
 
 	private TableViewer configsViewer;
 	private TableViewer configContentsViewer;
-	Profile profile;
+	String profileId;
 	IProvElementQueryProvider queryProvider;
 	private static final int DEFAULT_COLUMN_WIDTH = 150;
 
-	public RevertProfileWizardPage(Profile profile, IProvElementQueryProvider queryProvider) {
+	public RevertProfileWizardPage(String profileId, IProvElementQueryProvider queryProvider) {
 		super("RevertConfiguration"); //$NON-NLS-1$
 		setTitle(ProvUIMessages.RevertDialog_PageTitle);
 		setDescription(ProvUIMessages.RevertDialog_Description);
-		this.profile = profile;
+		this.profileId = profileId;
 		this.queryProvider = queryProvider;
 
 	}
@@ -129,7 +128,7 @@ public class RevertProfileWizardPage extends WizardPage {
 
 	private Object getInput() {
 		try {
-			RollbackRepositoryElement element = new RollbackRepositoryElement(ProvisioningUtil.getRollbackRepository(null), profile);
+			RollbackRepositoryElement element = new RollbackRepositoryElement(ProvisioningUtil.getRollbackRepository(null), profileId);
 			element.setQueryProvider(queryProvider);
 			return element;
 		} catch (ProvisionException e) {
@@ -185,7 +184,7 @@ public class RevertProfileWizardPage extends WizardPage {
 		IRunnableWithProgress runnable = new IRunnableWithProgress() {
 			public void run(IProgressMonitor monitor) {
 				try {
-					plan[0] = ProvisioningUtil.getRevertPlan(iu, profile, monitor);
+					plan[0] = ProvisioningUtil.getRevertPlan(iu, profileId, monitor);
 				} catch (ProvisionException e) {
 					ProvUI.handleException(e, ProvUIMessages.RevertDialog_RevertError);
 				}
@@ -193,7 +192,7 @@ public class RevertProfileWizardPage extends WizardPage {
 		};
 		try {
 			getContainer().run(true, true, runnable);
-			ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertDialog_RevertOperationLabel, profile.getProfileId(), plan[0]);
+			ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertDialog_RevertOperationLabel, profileId, plan[0]);
 			Job job = ProvisioningOperationRunner.schedule(op, getShell());
 			job.join();
 		} catch (InterruptedException e) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
index 1223094..9d7e0c7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UninstallWizardPage.java
@@ -15,7 +15,6 @@ import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
@@ -23,18 +22,18 @@ import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 
 public class UninstallWizardPage extends ProfileModificationWizardPage {
 
-	public UninstallWizardPage(IInstallableUnit[] ius, Profile profile) {
-		super("UninstallWizard", ius, profile); //$NON-NLS-1$
+	public UninstallWizardPage(IInstallableUnit[] ius, String profileId) {
+		super("UninstallWizard", ius, profileId); //$NON-NLS-1$
 		setTitle(ProvUIMessages.UninstallIUOperationLabel);
 		setDescription(ProvUIMessages.UninstallDialog_UninstallMessage);
 	}
 
 	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(elementsToIUs(selectedElements), getProfile(), monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(elementsToIUs(selectedElements), getProfileId(), monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
-				return new ProfileModificationOperation(ProvUIMessages.UninstallIUOperationLabel, getProfile().getProfileId(), plan);
+				return new ProfileModificationOperation(ProvUIMessages.UninstallIUOperationLabel, getProfileId(), plan);
 			ProvUI.reportStatus(status);
 		} catch (ProvisionException e) {
 			ProvUI.handleException(e, null);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
index 5b97122..21f7a92 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizard.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.LicenseManager;
 import org.eclipse.jface.wizard.Wizard;
@@ -22,21 +21,21 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 
 	UpdateOrInstallWizardPage mainPage;
 	AcceptLicensesWizardPage licensePage;
-	Profile profile;
+	String profileId;
 	IInstallableUnit[] ius;
 	LicenseManager licenseManager;
 
-	public UpdateOrInstallWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
+	public UpdateOrInstallWizard(String profileId, IInstallableUnit[] ius, LicenseManager licenseManager) {
 		super();
 		setForcePreviousAndNextButtons(true);
 		setNeedsProgressMonitor(true);
-		this.profile = profile;
+		this.profileId = profileId;
 		this.ius = ius;
 		this.licenseManager = licenseManager;
 	}
 
 	public void addPages() {
-		mainPage = createMainPage(profile, ius);
+		mainPage = createMainPage(profileId, ius);
 		addPage(mainPage);
 		addPage(licensePage = new AcceptLicensesWizardPage(ius, licenseManager));
 	}
@@ -50,6 +49,6 @@ public abstract class UpdateOrInstallWizard extends Wizard {
 		licensePage.update(ius);
 	}
 
-	protected abstract UpdateOrInstallWizardPage createMainPage(Profile theProfile, IInstallableUnit[] theIUs);
+	protected abstract UpdateOrInstallWizardPage createMainPage(String theProfileId, IInstallableUnit[] theIUs);
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
index 2f38f28..b1ff422 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateOrInstallWizardPage.java
@@ -11,7 +11,6 @@
 package org.eclipse.equinox.internal.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.viewers.IUColumnConfig;
 
@@ -19,8 +18,8 @@ public abstract class UpdateOrInstallWizardPage extends ProfileModificationWizar
 
 	protected UpdateOrInstallWizard wizard;
 
-	protected UpdateOrInstallWizardPage(String id, IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
-		super(id, ius, profile);
+	protected UpdateOrInstallWizardPage(String id, IInstallableUnit[] ius, String profileId, UpdateOrInstallWizard wizard) {
+		super(id, ius, profileId);
 		this.wizard = wizard;
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
index 50962d6..1a76910 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/dialogs/UpdateWizardPage.java
@@ -17,7 +17,6 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
@@ -25,8 +24,8 @@ import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 
 public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 
-	public UpdateWizardPage(IInstallableUnit[] ius, Profile profile, UpdateOrInstallWizard wizard) {
-		super("UpdateWizardPage", ius, profile, wizard); //$NON-NLS-1$
+	public UpdateWizardPage(IInstallableUnit[] ius, String profileId, UpdateOrInstallWizard wizard) {
+		super("UpdateWizardPage", ius, profileId, wizard); //$NON-NLS-1$
 		setTitle(ProvUIMessages.UpdateAction_UpdatesAvailableTitle);
 		setDescription(ProvUIMessages.UpdateAction_UpdatesAvailableMessage);
 	}
@@ -60,7 +59,7 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 
 	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(getIUsToReplace(selectedElements), elementsToIUs(selectedElements), getProfile(), monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(getIUsToReplace(selectedElements), elementsToIUs(selectedElements), getProfileId(), monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
 				return new ProfileModificationOperation(getOperationLabel(), getProfile().getProfileId(), plan);
@@ -77,4 +76,4 @@ public class UpdateWizardPage extends UpdateOrInstallWizardPage {
 		// TODO when not showing the latest version we eventually
 		// want to select only the latest version.
 	}
-}
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index d4022ee..2adec12 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -9,6 +9,8 @@
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 
+ProfileElement_InvalidProfile=Invalid profile ID {0}
+ProfileModificationWizardPage_ProfileNotFound=Could not resolve profile ID.
 ProvisioningUtil_NoRepositoryManager=No repository manager was found
 ProvisioningUtil_AddRepositoryFailure=Unable to add repository {0}
 ProvisioningUtil_CreateRepositoryFailure=Unable to create repository {0}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
index b6ce9b0..3d6dceb 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
@@ -79,7 +79,7 @@ public class AvailableIUElement extends ProvElement implements IUElement {
 			return;
 		try {
 			ProvisioningPlan plan = getSizingPlan();
-			Sizing info = ProvisioningUtil.getSizeInfo(plan, getProfile(), null);
+			Sizing info = ProvisioningUtil.getSizeInfo(plan, profileID, null);
 			size = info.getDiskSize();
 		} catch (ProvisionException e) {
 			ProvUI.handleException(e, ProvUIMessages.AvailableIUElement_ProfileNotFound);
@@ -91,7 +91,7 @@ public class AvailableIUElement extends ProvElement implements IUElement {
 	}
 
 	protected ProvisioningPlan getSizingPlan() throws ProvisionException {
-		return ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {getIU()}, getProfile(), null);
+		return ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {getIU()}, profileID, null);
 	}
 
 	public IInstallableUnit getIU() {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
index 637cbf3..b494f18 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableUpdateElement.java
@@ -36,6 +36,6 @@ public class AvailableUpdateElement extends AvailableIUElement {
 	}
 
 	protected ProvisioningPlan getSizingPlan() throws ProvisionException {
-		return ProvisioningUtil.getReplacePlan(new IInstallableUnit[] {iuToBeUpdated}, new IInstallableUnit[] {getIU()}, getProfile(), null);
+		return ProvisioningUtil.getReplacePlan(new IInstallableUnit[] {iuToBeUpdated}, new IInstallableUnit[] {getIU()}, profileID, null);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/IProfileChooser.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/IProfileChooser.java
index 7b4f4c3..6deb8db 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/IProfileChooser.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/IProfileChooser.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui;
 
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.swt.widgets.Shell;
 
 /**
@@ -23,10 +22,10 @@ import org.eclipse.swt.widgets.Shell;
 
 public interface IProfileChooser {
 	/**
-	 * Return a chosen profile, or <code>null</code> if there is no profile
+	 * Return a chosen profile id, or <code>null</code> if there is no profile
 	 * chosen.
 	 */
-	public Profile getProfile(Shell shell);
+	public String getProfileId(Shell shell);
 
 	/**
 	 * Return a String that could be used to label this chooser.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
index ac73a98..9d41a61 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/InstallAction.java
@@ -17,7 +17,6 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.dialogs.InstallWizard;
@@ -29,8 +28,8 @@ import org.eclipse.swt.widgets.Shell;
 
 public class InstallAction extends ProfileModificationAction {
 
-	public InstallAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
-		super(ProvUI.INSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, licenseManager, shell);
+	public InstallAction(ISelectionProvider selectionProvider, String profileId, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
+		super(ProvUI.INSTALL_COMMAND_LABEL, selectionProvider, profileId, chooser, licenseManager, shell);
 		setToolTipText(ProvUI.INSTALL_COMMAND_TOOLTIP);
 	}
 
@@ -61,15 +60,15 @@ public class InstallAction extends ProfileModificationAction {
 		return ProvUIMessages.InstallIUProgress;
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, Profile targetProfile) {
-		InstallWizard wizard = new InstallWizard(targetProfile, ius, getLicenseManager());
+	protected void performOperation(IInstallableUnit[] ius, String targetProfileId) {
+		InstallWizard wizard = new InstallWizard(targetProfileId, ius, getLicenseManager());
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
 		dialog.open();
 	}
 
-	protected IStatus validateOperation(IInstallableUnit[] ius, Profile targetProfile, IProgressMonitor monitor) {
+	protected IStatus validateOperation(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(ius, targetProfile, monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(ius, targetProfileId, monitor);
 			return plan.getStatus();
 		} catch (ProvisionException e) {
 			return ProvUI.handleException(e, null);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
index c0df261..f63cd14 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/RevertAction.java
@@ -16,7 +16,6 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.operations.*;
@@ -26,15 +25,15 @@ import org.eclipse.swt.widgets.Shell;
 
 public class RevertAction extends ProfileModificationAction {
 
-	public RevertAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.REVERT_COMMAND_LABEL, selectionProvider, profile, chooser, null, shell);
+	public RevertAction(ISelectionProvider selectionProvider, String profileId, IProfileChooser chooser, Shell shell) {
+		super(ProvUI.REVERT_COMMAND_LABEL, selectionProvider, profileId, chooser, null, shell);
 		setToolTipText(ProvUI.REVERT_COMMAND_TOOLTIP);
 	}
 
-	protected IStatus validateOperation(IInstallableUnit[] toRevert, Profile targetProfile, IProgressMonitor monitor) {
+	protected IStatus validateOperation(IInstallableUnit[] toRevert, String targetProfileId, IProgressMonitor monitor) {
 		if (toRevert.length == 1) {
 			try {
-				ProvisioningPlan plan = ProvisioningUtil.getRevertPlan(toRevert[0], targetProfile, monitor);
+				ProvisioningPlan plan = ProvisioningUtil.getRevertPlan(toRevert[0], targetProfileId, monitor);
 				return plan.getStatus();
 			} catch (ProvisionException e) {
 				return ProvUI.handleException(e, null);
@@ -44,11 +43,11 @@ public class RevertAction extends ProfileModificationAction {
 		return Status.OK_STATUS;
 	}
 
-	protected void performOperation(IInstallableUnit[] toBecome, Profile targetProfile) {
+	protected void performOperation(IInstallableUnit[] toBecome, String targetProfileId) {
 		// TODO bogus because we do this twice...
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getRevertPlan(toBecome[0], targetProfile, null);
-			ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertIUOperationLabel, targetProfile.getProfileId(), plan);
+			ProvisioningPlan plan = ProvisioningUtil.getRevertPlan(toBecome[0], targetProfileId, null);
+			ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertIUOperationLabel, targetProfileId, plan);
 			ProvisioningOperationRunner.schedule(op, getShell());
 		} catch (ProvisionException e) {
 			ProvUI.handleException(e, null);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
index 069215c..0443f7e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UninstallAction.java
@@ -17,7 +17,6 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.IProfileChooser;
 import org.eclipse.equinox.p2.ui.ProvUI;
@@ -31,8 +30,8 @@ import org.eclipse.swt.widgets.Shell;
 
 public class UninstallAction extends ProfileModificationAction {
 
-	public UninstallAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, Shell shell) {
-		super(ProvUI.UNINSTALL_COMMAND_LABEL, selectionProvider, profile, chooser, null, shell);
+	public UninstallAction(ISelectionProvider selectionProvider, String profileId, IProfileChooser chooser, Shell shell) {
+		super(ProvUI.UNINSTALL_COMMAND_LABEL, selectionProvider, profileId, chooser, null, shell);
 		setToolTipText(ProvUI.UNINSTALL_COMMAND_TOOLTIP);
 	}
 
@@ -70,15 +69,15 @@ public class UninstallAction extends ProfileModificationAction {
 		return ProvUIMessages.UninstallIUProgress;
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, Profile targetProfile) {
-		UninstallWizard wizard = new UninstallWizard(targetProfile, ius);
+	protected void performOperation(IInstallableUnit[] ius, String targetProfileId) {
+		UninstallWizard wizard = new UninstallWizard(targetProfileId, ius);
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
 		dialog.open();
 	}
 
-	protected IStatus validateOperation(IInstallableUnit[] ius, Profile targetProfile, IProgressMonitor monitor) {
+	protected IStatus validateOperation(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(ius, targetProfile, monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(ius, targetProfileId, monitor);
 			return plan.getStatus();
 		} catch (ProvisionException e) {
 			return ProvUI.handleException(e, null);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
index 0ffd2ae..5e54922 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/UpdateAction.java
@@ -16,7 +16,6 @@ import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.actions.ProfileModificationAction;
 import org.eclipse.equinox.p2.core.ProvisionException;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.dialogs.UpdateWizard;
@@ -29,12 +28,12 @@ import org.eclipse.swt.widgets.Shell;
 
 public class UpdateAction extends ProfileModificationAction {
 
-	public UpdateAction(ISelectionProvider selectionProvider, Profile profile, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
-		super(ProvUI.UPDATE_COMMAND_LABEL, selectionProvider, profile, chooser, licenseManager, shell);
+	public UpdateAction(ISelectionProvider selectionProvider, String profileId, IProfileChooser chooser, LicenseManager licenseManager, Shell shell) {
+		super(ProvUI.UPDATE_COMMAND_LABEL, selectionProvider, profileId, chooser, licenseManager, shell);
 		setToolTipText(ProvUI.UPDATE_COMMAND_TOOLTIP);
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, Profile targetProfile) {
+	protected void performOperation(IInstallableUnit[] ius, String targetProfileId) {
 		// Collect the replacements for each IU individually so that 
 		// the user can decide what to update
 		try {
@@ -46,7 +45,7 @@ public class UpdateAction extends ProfileModificationAction {
 			}
 			if (iusWithUpdates.size() > 0) {
 
-				UpdateWizard wizard = new UpdateWizard(targetProfile, (IInstallableUnit[]) iusWithUpdates.toArray(new IInstallableUnit[iusWithUpdates.size()]), getLicenseManager());
+				UpdateWizard wizard = new UpdateWizard(targetProfileId, (IInstallableUnit[]) iusWithUpdates.toArray(new IInstallableUnit[iusWithUpdates.size()]), getLicenseManager());
 				WizardDialog dialog = new WizardDialog(getShell(), wizard);
 				dialog.open();
 			}
@@ -55,7 +54,7 @@ public class UpdateAction extends ProfileModificationAction {
 		}
 	}
 
-	protected IStatus validateOperation(IInstallableUnit[] ius, Profile targetProfile, IProgressMonitor monitor) {
+	protected IStatus validateOperation(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) {
 		try {
 			IInstallableUnit[] updates = ProvisioningUtil.updatesFor(ius, monitor);
 			if (updates.length <= 0) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
index 6b836ba..48f2cb7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallWizard.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.*;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.LicenseManager;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
@@ -22,13 +21,13 @@ import org.eclipse.equinox.p2.ui.ProvUIImages;
  */
 public class InstallWizard extends UpdateOrInstallWizard {
 
-	public InstallWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
-		super(profile, ius, licenseManager);
+	public InstallWizard(String profileId, IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super(profileId, ius, licenseManager);
 		setWindowTitle(ProvUIMessages.InstallIUOperationLabel);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_INSTALL));
 	}
 
-	protected UpdateOrInstallWizardPage createMainPage(Profile profile, IInstallableUnit[] ius) {
-		return new InstallWizardPage(ius, profile, this);
+	protected UpdateOrInstallWizardPage createMainPage(String profileId, IInstallableUnit[] ius) {
+		return new InstallWizardPage(ius, profileId, this);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RevertWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RevertWizard.java
index 70b94d4..66e4f49 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RevertWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/RevertWizard.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.RevertProfileWizardPage;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
 import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
 import org.eclipse.jface.wizard.Wizard;
@@ -23,19 +22,19 @@ import org.eclipse.jface.wizard.Wizard;
 public class RevertWizard extends Wizard {
 
 	RevertProfileWizardPage page;
-	Profile profile;
+	String profileId;
 	IProvElementQueryProvider queryProvider;
 
-	public RevertWizard(Profile profile, IProvElementQueryProvider queryProvider) {
+	public RevertWizard(String profileId, IProvElementQueryProvider queryProvider) {
 		super();
 		setWindowTitle(ProvUIMessages.RevertDialog_Title);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_REVERT));
-		this.profile = profile;
+		this.profileId = profileId;
 		this.queryProvider = queryProvider;
 	}
 
 	public void addPages() {
-		page = new RevertProfileWizardPage(profile, queryProvider);
+		page = new RevertProfileWizardPage(profileId, queryProvider);
 		addPage(page);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallWizard.java
index 84e7478..f4c7c1d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallWizard.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.UninstallWizardPage;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
 import org.eclipse.jface.wizard.Wizard;
@@ -23,19 +22,19 @@ import org.eclipse.jface.wizard.Wizard;
 public class UninstallWizard extends Wizard {
 
 	UninstallWizardPage page;
-	Profile profile;
+	String profileId;
 	IInstallableUnit[] ius;
 
-	public UninstallWizard(Profile profile, IInstallableUnit[] ius) {
+	public UninstallWizard(String profileId, IInstallableUnit[] ius) {
 		super();
 		setWindowTitle(ProvUIMessages.UninstallIUOperationLabel);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_UNINSTALL));
-		this.profile = profile;
+		this.profileId = profileId;
 		this.ius = ius;
 	}
 
 	public void addPages() {
-		page = new UninstallWizardPage(ius, profile);
+		page = new UninstallWizardPage(ius, profileId);
 		addPage(page);
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
index 28fd0c2..f4929c9 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateAndInstallGroup.java
@@ -13,14 +13,11 @@ package org.eclipse.equinox.p2.ui.dialogs;
 import org.eclipse.core.runtime.Assert;
 import org.eclipse.equinox.internal.p2.ui.PropertyDialogAction;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.p2.core.ProvisionException;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.*;
 import org.eclipse.equinox.p2.ui.actions.*;
 import org.eclipse.equinox.p2.ui.model.MetadataRepositories;
 import org.eclipse.equinox.p2.ui.model.ProfileElement;
-import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
 import org.eclipse.equinox.p2.ui.viewers.*;
 import org.eclipse.jface.action.Action;
@@ -53,7 +50,7 @@ public class UpdateAndInstallGroup {
 	TabFolder tabFolder;
 	TableViewer installedIUViewer;
 	TreeViewer availableIUViewer;
-	Profile profile;
+	String profileId;
 	IRepositoryManipulator repositoryManipulator;
 	IProfileChooser profileChooser;
 	LicenseManager licenseManager;
@@ -64,9 +61,9 @@ public class UpdateAndInstallGroup {
 	 * Create an instance of this group.
 	 * 
 	 */
-	public UpdateAndInstallGroup(Composite parent, Profile profile, String installedString, String availableString, IRepositoryManipulator repositoryManipulator, IProfileChooser profileChooser, IProvElementQueryProvider queryProvider, LicenseManager licenseManager, FontMetrics fm) {
+	public UpdateAndInstallGroup(Composite parent, String profileId, String installedString, String availableString, IRepositoryManipulator repositoryManipulator, IProfileChooser profileChooser, IProvElementQueryProvider queryProvider, LicenseManager licenseManager, FontMetrics fm) {
 
-		this.profile = profile;
+		this.profileId = profileId;
 		this.repositoryManipulator = repositoryManipulator;
 		this.profileChooser = profileChooser;
 		this.licenseManager = licenseManager;
@@ -191,7 +188,7 @@ public class UpdateAndInstallGroup {
 		availablePropButton = createVerticalButton(composite, ProvUIMessages.UpdateAndInstallGroup_Properties, false);
 		availablePropButton.setData(BUTTONACTION, new PropertyDialogAction(new SameShellProvider(parent.getShell()), availableIUViewer));
 		installButton = createVerticalButton(composite, ProvUIMessages.InstallIUCommandLabel, false);
-		installButton.setData(BUTTONACTION, new InstallAction(availableIUViewer, profile, null, licenseManager, parent.getShell()));
+		installButton.setData(BUTTONACTION, new InstallAction(availableIUViewer, profileId, null, licenseManager, parent.getShell()));
 		if (repositoryManipulator != null) {
 			Button repoButton = createVerticalButton(composite, repositoryManipulator.getLabel(), false);
 			repoButton.setData(BUTTONACTION, new Action() {
@@ -226,21 +223,7 @@ public class UpdateAndInstallGroup {
 		composite.setLayout(layout);
 
 		// Table of installed IU's
-		installedIUViewer = new TableViewer(composite, SWT.MULTI | SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER) {
-			public void refresh() {
-				// TODO this is a hack to deal with the fact that profile instances can
-				// get stale under the new profile event scheme.
-				if (this.getInput() != null)
-					try {
-						ProfileElement element = (ProfileElement) this.getInput();
-						profile = ProvisioningUtil.getProfile(profile.getProfileId());
-						element.setQueryable(profile);
-					} catch (ProvisionException e) {
-						ProvUI.handleException(e, null);
-					}
-				super.refresh();
-			}
-		};
+		installedIUViewer = new TableViewer(composite, SWT.MULTI | SWT.FULL_SELECTION | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER);
 
 		// Filters and sorters before establishing content, so we don't refresh unnecessarily.
 		installedIUViewer.setComparator(new IUComparator(IUComparator.IU_NAME));
@@ -248,7 +231,7 @@ public class UpdateAndInstallGroup {
 
 		// Now the content.
 		installedIUViewer.setContentProvider(new DeferredQueryContentProvider(queryProvider));
-		installedIUViewer.setInput(new ProfileElement(profile));
+		installedIUViewer.setInput(new ProfileElement(profileId));
 
 		// Now the visuals, columns before labels.
 		setTableColumns(installedIUViewer.getTable());
@@ -301,17 +284,17 @@ public class UpdateAndInstallGroup {
 		installedPropButton = createVerticalButton(composite, ProvUIMessages.UpdateAndInstallGroup_Properties, false);
 		installedPropButton.setData(BUTTONACTION, new PropertyDialogAction(new SameShellProvider(parent.getShell()), installedIUViewer));
 		uninstallButton = createVerticalButton(composite, ProvUIMessages.UninstallIUCommandLabel, false);
-		uninstallButton.setData(BUTTONACTION, new UninstallAction(installedIUViewer, profile, null, parent.getShell()));
+		uninstallButton.setData(BUTTONACTION, new UninstallAction(installedIUViewer, profileId, null, parent.getShell()));
 		updateButton = createVerticalButton(composite, ProvUIMessages.UpdateIUCommandLabel, false);
-		updateButton.setData(BUTTONACTION, new UpdateAction(installedIUViewer, profile, null, licenseManager, parent.getShell()));
+		updateButton.setData(BUTTONACTION, new UpdateAction(installedIUViewer, profileId, null, licenseManager, parent.getShell()));
 		if (profileChooser != null) {
 			Button profileButton = createVerticalButton(composite, profileChooser.getLabel(), false);
 			profileButton.setData(BUTTONACTION, new Action() {
 				public void runWithEvent(Event event) {
-					Profile chosenProfile = profileChooser.getProfile(tabFolder.getShell());
-					if (chosenProfile != null) {
-						profile = chosenProfile;
-						installedIUViewer.setInput(new ProfileElement(profile));
+					String chosenProfileId = profileChooser.getProfileId(tabFolder.getShell());
+					if (chosenProfileId != null) {
+						profileId = chosenProfileId;
+						installedIUViewer.setInput(new ProfileElement(profileId));
 					}
 				}
 			});
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
index 97a07f7..1e85538 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateWizard.java
@@ -12,7 +12,6 @@ package org.eclipse.equinox.p2.ui.dialogs;
 
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.dialogs.*;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.LicenseManager;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
@@ -22,13 +21,13 @@ import org.eclipse.equinox.p2.ui.ProvUIImages;
  */
 public class UpdateWizard extends UpdateOrInstallWizard {
 
-	public UpdateWizard(Profile profile, IInstallableUnit[] ius, LicenseManager licenseManager) {
-		super(profile, ius, licenseManager);
+	public UpdateWizard(String profileId, IInstallableUnit[] ius, LicenseManager licenseManager) {
+		super(profileId, ius, licenseManager);
 		setWindowTitle(ProvUIMessages.UpdateAction_UpdatesAvailableTitle);
 		setDefaultPageImageDescriptor(ProvUIImages.getImageDescriptor(ProvUIImages.WIZARD_BANNER_UPDATE));
 	}
 
-	protected UpdateOrInstallWizardPage createMainPage(Profile profile, IInstallableUnit[] ius) {
-		return new UpdateWizardPage(ius, profile, this);
+	protected UpdateOrInstallWizardPage createMainPage(String profileId, IInstallableUnit[] ius) {
+		return new UpdateWizardPage(ius, profileId, this);
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
index 6bce015..91a8592 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
@@ -11,7 +11,6 @@
 package org.eclipse.equinox.p2.ui.model;
 
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
 
@@ -23,11 +22,11 @@ import org.eclipse.equinox.p2.ui.ProvUIImages;
  */
 public class InstalledIUElement extends ProvElement implements IUElement {
 
-	Profile parent;
+	String profileId;
 	IInstallableUnit iu;
 
-	public InstalledIUElement(Profile parent, IInstallableUnit iu) {
-		this.parent = parent;
+	public InstalledIUElement(String profileId, IInstallableUnit iu) {
+		this.profileId = profileId;
 		this.iu = iu;
 	}
 
@@ -40,15 +39,6 @@ public class InstalledIUElement extends ProvElement implements IUElement {
 		return ProvUIImages.IMG_IU;
 	}
 
-	/*
-	 * (non-Javadoc)
-	 * 
-	 * @see org.eclipse.ui.model.IWorkbenchAdapter#getParent(java.lang.Object)
-	 */
-	public Object getParent(Object o) {
-		return parent;
-	}
-
 	public String getLabel(Object o) {
 		return iu.getId();
 	}
@@ -63,8 +53,8 @@ public class InstalledIUElement extends ProvElement implements IUElement {
 		return super.getAdapter(adapter);
 	}
 
-	public Profile getProfile() {
-		return parent;
+	public String getProfileId() {
+		return profileId;
 	}
 
 	public IInstallableUnit getIU() {
@@ -88,4 +78,9 @@ public class InstalledIUElement extends ProvElement implements IUElement {
 	public boolean shouldShowVersion() {
 		return true;
 	}
+
+	public Object getParent(Object o) {
+		// we do not know the element
+		return null;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/ProfileElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/ProfileElement.java
index a1e87b4..e5260e1 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/ProfileElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/ProfileElement.java
@@ -10,10 +10,16 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.model;
 
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.RemoteQueriedElement;
+import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.engine.Profile;
+import org.eclipse.equinox.p2.query.IQueryable;
+import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
+import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
+import org.eclipse.osgi.util.NLS;
 
 /**
  * Element wrapper class for a profile that uses the query
@@ -22,9 +28,10 @@ import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
  * @since 3.4
  */
 public class ProfileElement extends RemoteQueriedElement {
+	String profileId;
 
-	public ProfileElement(Profile profile) {
-		setQueryable(profile);
+	public ProfileElement(String profileId) {
+		this.profileId = profileId;
 	}
 
 	public Object getAdapter(Class adapter) {
@@ -38,13 +45,22 @@ public class ProfileElement extends RemoteQueriedElement {
 	}
 
 	public String getLabel(Object o) {
-		return ((Profile) getQueryable()).getProfileId();
+		return profileId;
 	}
 
 	protected int getQueryType() {
 		return IProvElementQueryProvider.INSTALLED_IUS;
 	}
 
+	public IQueryable getQueryable() {
+		try {
+			return ProvisioningUtil.getProfile(profileId);
+		} catch (ProvisionException e) {
+			ProvUI.handleException(e, NLS.bind(ProvUIMessages.ProfileElement_InvalidProfile, profileId));
+			return null;
+		}
+	}
+
 	/*
 	 * Overridden to check the children so that profiles
 	 * showing in profile views accurately reflect if they
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/RollbackRepositoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/RollbackRepositoryElement.java
index 07418b7..7900fda 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/RollbackRepositoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/RollbackRepositoryElement.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.model;
 
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
 
 /**
@@ -20,14 +19,14 @@ import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
  */
 public class RollbackRepositoryElement extends MetadataRepositoryElement {
 
-	Profile profile;
+	String profileId;
 
-	public RollbackRepositoryElement(IMetadataRepository repo, Profile profile) {
+	public RollbackRepositoryElement(IMetadataRepository repo, String profileId) {
 		super(repo);
-		this.profile = profile;
+		this.profileId = profileId;
 	}
 
-	public Profile getProfile() {
-		return profile;
+	public String getProfileId() {
+		return profileId;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileModificationOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileModificationOperation.java
index e696c77..0433b7a 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileModificationOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileModificationOperation.java
@@ -46,7 +46,7 @@ public class ProfileModificationOperation extends ProvisioningOperation {
 		return profileId;
 	}
 
-	public Profile getProfile() {
+	protected Profile getProfile() {
 		try {
 			return ProvisioningUtil.getProfile(profileId);
 		} catch (ProvisionException e) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileOperation.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileOperation.java
index 990e35b..d6a31a4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileOperation.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProfileOperation.java
@@ -22,6 +22,7 @@ import org.eclipse.equinox.p2.engine.Profile;
 public abstract class ProfileOperation extends UndoableProvisioningOperation {
 
 	String[] profileIds;
+	// We cache profiles along with ids in case we have to recreate a deleted profile
 	Profile[] cachedProfiles;
 
 	ProfileOperation(String label, String[] ids) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProvisioningUtil.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProvisioningUtil.java
index abf71e6..5414e45 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProvisioningUtil.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/operations/ProvisioningUtil.java
@@ -148,20 +148,20 @@ public class ProvisioningUtil {
 	/*
 	 * Get the plan for the specified install operation
 	 */
-	public static ProvisioningPlan getInstallPlan(IInstallableUnit[] toInstall, Profile profile, IProgressMonitor monitor) throws ProvisionException {
-		Assert.isNotNull(profile);
+	public static ProvisioningPlan getInstallPlan(IInstallableUnit[] toInstall, String profileId, IProgressMonitor monitor) throws ProvisionException {
+		Assert.isNotNull(profileId);
 		Assert.isNotNull(toInstall);
-		return getPlanner().getInstallPlan(toInstall, profile, null, monitor);
+		return getPlanner().getInstallPlan(toInstall, getProfile(profileId), null, monitor);
 	}
 
 	/*
 	 * Get the plan for the specified update operation
 	 */
-	public static ProvisioningPlan getReplacePlan(IInstallableUnit[] toUninstall, IInstallableUnit[] replacements, Profile profile, IProgressMonitor monitor) throws ProvisionException {
-		Assert.isNotNull(profile);
+	public static ProvisioningPlan getReplacePlan(IInstallableUnit[] toUninstall, IInstallableUnit[] replacements, String profileId, IProgressMonitor monitor) throws ProvisionException {
+		Assert.isNotNull(profileId);
 		Assert.isNotNull(toUninstall);
 		Assert.isNotNull(replacements);
-		return getPlanner().getReplacePlan(toUninstall, replacements, profile, null, monitor);
+		return getPlanner().getReplacePlan(toUninstall, replacements, getProfile(profileId), null, monitor);
 	}
 
 	/*
@@ -194,27 +194,27 @@ public class ProvisioningUtil {
 	/*
 	 * Get a plan for becoming
 	 */
-	public static ProvisioningPlan getRevertPlan(IInstallableUnit profileIU, Profile profile, IProgressMonitor monitor) throws ProvisionException {
-		Assert.isNotNull(profile);
+	public static ProvisioningPlan getRevertPlan(IInstallableUnit profileIU, String profileId, IProgressMonitor monitor) throws ProvisionException {
+		Assert.isNotNull(profileId);
 		Assert.isNotNull(profileIU);
-		return getPlanner().getRevertPlan(profileIU, profile, null, monitor);
+		return getPlanner().getRevertPlan(profileIU, getProfile(profileId), null, monitor);
 	}
 
 	/*
 	 * Get the plan to uninstall the specified IU's
 	 */
-	public static ProvisioningPlan getUninstallPlan(IInstallableUnit[] toUninstall, Profile profile, IProgressMonitor monitor) throws ProvisionException {
-		Assert.isNotNull(profile);
+	public static ProvisioningPlan getUninstallPlan(IInstallableUnit[] toUninstall, String profileId, IProgressMonitor monitor) throws ProvisionException {
+		Assert.isNotNull(profileId);
 		Assert.isNotNull(toUninstall);
-		return getPlanner().getUninstallPlan(toUninstall, profile, null, monitor);
+		return getPlanner().getUninstallPlan(toUninstall, getProfile(profileId), null, monitor);
 	}
 
 	/*
 	 * Get sizing info for the specified IU's
 	 */
-	public static Sizing getSizeInfo(ProvisioningPlan plan, Profile profile, IProgressMonitor monitor) throws ProvisionException {
+	public static Sizing getSizeInfo(ProvisioningPlan plan, String profileId, IProgressMonitor monitor) throws ProvisionException {
 		SizingPhaseSet set = new SizingPhaseSet();
-		IStatus status = getEngine().perform(profile, set, plan.getOperands(), monitor);
+		IStatus status = getEngine().perform(getProfile(profileId), set, plan.getOperands(), monitor);
 		if (status.isOK())
 			return set.getSizing();
 		return null;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/InstalledIUCollector.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/InstalledIUCollector.java
index 71f0c43..97802d5 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/InstalledIUCollector.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/InstalledIUCollector.java
@@ -37,7 +37,7 @@ public class InstalledIUCollector extends QueriedElementCollector {
 		if (!(match instanceof IInstallableUnit))
 			return true;
 		if (queryable instanceof Profile)
-			return super.accept(new InstalledIUElement((Profile) queryable, (IInstallableUnit) match));
+			return super.accept(new InstalledIUElement(((Profile) queryable).getProfileId(), (IInstallableUnit) match));
 		// shouldn't happen, but is possible if a client reset the queryable to a non-profile.
 		return super.accept(match);
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/ProfileElementCollector.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/ProfileElementCollector.java
index 56d48cb..a1eef9e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/ProfileElementCollector.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/query/ProfileElementCollector.java
@@ -35,7 +35,7 @@ public class ProfileElementCollector extends QueriedElementCollector {
 	public boolean accept(Object match) {
 		if (!(match instanceof Profile))
 			return true;
-		return super.accept(new ProfileElement((Profile) match));
+		return super.accept(new ProfileElement(((Profile) match).getProfileId()));
 	}
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
index 6e2a71e..d93d381 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/InstallIUDropAdapter.java
@@ -62,17 +62,17 @@ public class InstallIUDropAdapter extends ViewerDropAdapter {
 	}
 
 	/**
-	 * Returns the target profile for the drop. If the drop is positioned on an
-	 * IU, return its parent profile.
+	 * Returns the target profile id for the drop. If the drop is positioned on an
+	 * IU, return its parent profile id.
 	 */
-	private Profile getProfileTarget(Object mouseTarget) {
+	private String getProfileTarget(Object mouseTarget) {
 		Profile profile = (Profile) ProvUI.getAdapter(mouseTarget, Profile.class);
 		if (profile != null) {
-			return profile;
+			return profile.getProfileId();
 		}
 
 		if (mouseTarget instanceof InstalledIUElement) {
-			return ((InstalledIUElement) mouseTarget).getProfile();
+			return ((InstalledIUElement) mouseTarget).getProfileId();
 		}
 		return null;
 	}
@@ -107,8 +107,8 @@ public class InstallIUDropAdapter extends ViewerDropAdapter {
 		if (!(selection instanceof IStructuredSelection) || selection.isEmpty())
 			return false;
 
-		Profile profile = getProfileTarget(getCurrentTarget());
-		if (getCurrentOperation() == DND.DROP_COPY && profile != null) {
+		String profileId = getProfileTarget(getCurrentTarget());
+		if (getCurrentOperation() == DND.DROP_COPY && profileId != null) {
 			final IStructuredSelection structuredSelection = (IStructuredSelection) selection;
 			ISelectionProvider selectionProvider = new ISelectionProvider() {
 
@@ -144,7 +144,7 @@ public class InstallIUDropAdapter extends ViewerDropAdapter {
 					throw new UnsupportedOperationException("This ISelectionProvider is static, and cannot be modified."); //$NON-NLS-1$
 				}
 			};
-			InstallAction action = new InstallAction(selectionProvider, profile, null, licenseManager, getShell());
+			InstallAction action = new InstallAction(selectionProvider, profileId, null, licenseManager, getShell());
 			if (DEBUG)
 				System.out.println("Running install action"); //$NON-NLS-1$
 			action.run();
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementComparer.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementComparer.java
index 0480e0b..95054a0 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementComparer.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementComparer.java
@@ -23,8 +23,8 @@ public class ProvElementComparer implements IElementComparer {
 		IInstallableUnit iu2 = getIU(b);
 		if (iu1 != null && iu2 != null)
 			return iu1.equals(iu2);
-		Profile p1 = getProfile(a);
-		Profile p2 = getProfile(b);
+		String p1 = getProfileId(a);
+		String p2 = getProfileId(b);
 		if (p1 != null && p2 != null)
 			return p1.equals(p2);
 		IRepository r1 = getRepository(a);
@@ -38,9 +38,9 @@ public class ProvElementComparer implements IElementComparer {
 		IInstallableUnit iu = getIU(element);
 		if (iu != null)
 			return iu.hashCode();
-		Profile profile = getProfile(element);
-		if (profile != null)
-			return profile.hashCode();
+		String profileId = getProfileId(element);
+		if (profileId != null)
+			return profileId.hashCode();
 		IRepository repo = getRepository(element);
 		if (repo != null)
 			return repo.hashCode();
@@ -51,8 +51,11 @@ public class ProvElementComparer implements IElementComparer {
 		return (IInstallableUnit) ProvUI.getAdapter(obj, IInstallableUnit.class);
 	}
 
-	private Profile getProfile(Object obj) {
-		return (Profile) ProvUI.getAdapter(obj, Profile.class);
+	private String getProfileId(Object obj) {
+		Profile profile = (Profile) ProvUI.getAdapter(obj, Profile.class);
+		if (profile == null)
+			return null;
+		return profile.getProfileId();
 	}
 
 	private IRepository getRepository(Object obj) {
diff --git a/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateChecker.java b/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateChecker.java
index c6e3429..94a16ba 100644
--- a/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateChecker.java
+++ b/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateChecker.java
@@ -44,12 +44,12 @@ public class UpdateChecker {
 		boolean done = false;
 		long poll, delay;
 		IUpdateListener listener;
-		Profile profile;
+		String profileId;
 
 		UpdateCheckThread(String profileId, long delay, long poll, IUpdateListener listener) {
 			this.poll = poll;
 			this.delay = delay;
-			this.profile = getProfileRegistry().getProfile(profileId);
+			this.profileId = profileId;
 			this.listener = listener;
 		}
 
@@ -60,11 +60,11 @@ public class UpdateChecker {
 				}
 				while (!done) {
 
-					log("Checking for updates for " + profile.getProfileId() + " at " + getTimeStamp()); //$NON-NLS-1$ //$NON-NLS-2$
-					IInstallableUnit[] iusWithUpdates = checkForUpdates(profile);
+					log("Checking for updates for " + profileId + " at " + getTimeStamp()); //$NON-NLS-1$ //$NON-NLS-2$
+					IInstallableUnit[] iusWithUpdates = checkForUpdates(profileId);
 					if (iusWithUpdates.length > 0) {
 						log("Notifying listener of available updates"); //$NON-NLS-1$
-						UpdateEvent event = new UpdateEvent(profile, iusWithUpdates);
+						UpdateEvent event = new UpdateEvent(profileId, iusWithUpdates);
 						if (!done)
 							listener.updatesAvailable(event);
 					} else {
@@ -107,10 +107,13 @@ public class UpdateChecker {
 	 * Return the array of ius in the profile that have updates
 	 * available.
 	 */
-	IInstallableUnit[] checkForUpdates(Profile profile) {
+	IInstallableUnit[] checkForUpdates(String profileId) {
 		// TODO this is naive.  We get all the ius every time whereas we
-		// could monitor changes in the profile. 
+		// could monitor changes in the profile.
+		Profile profile = getProfileRegistry().getProfile(profileId);
 		ArrayList iusWithUpdates = new ArrayList();
+		if (profile == null)
+			return new IInstallableUnit[0];
 		Iterator iter = profile.query(InstallableUnitQuery.ANY, new Collector(), null).iterator();
 		while (iter.hasNext()) {
 			IInstallableUnit iu = (IInstallableUnit) iter.next();
diff --git a/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateEvent.java b/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateEvent.java
index 4fdccf3..4c49913 100644
--- a/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateEvent.java
+++ b/bundles/org.eclipse.equinox.p2.updatechecker/src/org/eclipse/equinox/p2/updatechecker/UpdateEvent.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.updatechecker;
 
-import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 
 /**
@@ -20,11 +19,11 @@ import org.eclipse.equinox.p2.metadata.IInstallableUnit;
  */
 public class UpdateEvent {
 
-	Profile profile;
+	String profileId;
 	IInstallableUnit[] iusWithUpdates;
 
-	public UpdateEvent(Profile profile, IInstallableUnit[] iusWithUpdates) {
-		this.profile = profile;
+	public UpdateEvent(String profileId, IInstallableUnit[] iusWithUpdates) {
+		this.profileId = profileId;
 		this.iusWithUpdates = iusWithUpdates;
 	}
 
@@ -32,8 +31,8 @@ public class UpdateEvent {
 		return iusWithUpdates;
 	}
 
-	public Profile getProfile() {
-		return profile;
+	public String getProfileId() {
+		return profileId;
 	}
 
 }
