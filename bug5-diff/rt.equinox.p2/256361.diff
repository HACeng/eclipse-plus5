commit ddc883153787c1359874444b8ab171b6b46bbddf
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 19 22:50:40 2009 +0000

    Bug 256361 - [ui] define clearly the rules of engagement for accessing and setting default Policy

5	0	bundles/org.eclipse.equinox.p2.ui.sdk/.project
1	0	bundles/org.eclipse.equinox.p2.ui.sdk/META-INF/MANIFEST.MF
7	0	bundles/org.eclipse.equinox.p2.ui.sdk/OSGI-INF/policy_component.xml
3	2	bundles/org.eclipse.equinox.p2.ui.sdk/build.properties
2	63	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
90	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/SDKPolicy.java
0	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
0	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
6	16	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/.project b/bundles/org.eclipse.equinox.p2.ui.sdk/.project
index 4b1e077..b379ab0 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/.project
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/.project
@@ -20,6 +20,11 @@
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ds.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.ui.sdk/META-INF/MANIFEST.MF
index f2c6bf4..79a0096 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/META-INF/MANIFEST.MF
@@ -37,3 +37,4 @@ Require-Bundle: org.eclipse.ui,
 Eclipse-LazyStart: true
 Bundle-RequiredExecutionEnvironment: J2SE-1.4,
  CDC-1.1/Foundation-1.1
+Service-Component: OSGI-INF/policy_component.xml
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/OSGI-INF/policy_component.xml b/bundles/org.eclipse.equinox.p2.ui.sdk/OSGI-INF/policy_component.xml
new file mode 100644
index 0000000..4186945
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/OSGI-INF/policy_component.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.ui.sdk">
+   <implementation class="org.eclipse.equinox.internal.p2.ui.sdk.SDKPolicy"/>
+   <service>
+      <provide interface="org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy"/>
+   </service>
+</scr:component>
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/build.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/build.properties
index 2d0f953..94674cb 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/build.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/build.properties
@@ -1,5 +1,5 @@
 ###############################################################################
-# Copyright (c) 2007 IBM Corporation and others.
+# Copyright (c) 2007, 2009 IBM Corporation and others.
 # All rights reserved. This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License v1.0
 # which accompanies this distribution, and is available at
@@ -12,6 +12,7 @@ bin.includes = plugin.properties,\
                .,\
                about.html,\
                META-INF/,\
-               plugin.xml
+               plugin.xml,\
+               OSGI-INF/
 src.includes = about.html
 source.. = src/
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
index 1477d92..19a06f5 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKUIActivator.java
@@ -17,19 +17,16 @@ import org.eclipse.equinox.internal.provisional.p2.core.IServiceUI;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.core.eventbus.IProvisioningEventBus;
 import org.eclipse.equinox.internal.provisional.p2.core.repository.IRepositoryManager;
-import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
 import org.eclipse.equinox.internal.provisional.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.internal.provisional.p2.ui.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
-import org.eclipse.equinox.internal.provisional.p2.ui.policy.*;
-import org.eclipse.jface.dialogs.IDialogConstants;
-import org.eclipse.jface.dialogs.MessageDialogWithToggle;
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.IUViewQueryContext;
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy;
 import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.jface.util.IPropertyChangeListener;
 import org.eclipse.jface.util.PropertyChangeEvent;
-import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.eclipse.ui.statushandlers.StatusManager;
 import org.osgi.framework.*;
@@ -88,7 +85,6 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 		super.start(bundleContext);
 		plugin = this;
 		ProvSDKUIActivator.context = bundleContext;
-		initializePolicies();
 		readLicenseRegistry();
 		certificateUIRegistration = context.registerService(IServiceUI.class.getName(), new ValidationDialogServiceUI(), null);
 		getPreferenceStore().addPropertyChangeListener(getPreferenceListener());
@@ -176,63 +172,6 @@ public class ProvSDKUIActivator extends AbstractUIPlugin {
 		return new Status(IStatus.WARNING, PLUGIN_ID, ProvSDKMessages.ProvSDKUIActivator_NoSelfProfile);
 	}
 
-	private void initializePolicies() {
-		Policy policy = new Policy();
-		policy.setProfileChooser(new IProfileChooser() {
-			public String getProfileId(Shell shell) {
-				try {
-					return getSelfProfileId();
-				} catch (ProvisionException e) {
-					return IProfileRegistry.SELF;
-				}
-			}
-		});
-		policy.setRepositoryManipulator(new ColocatedRepositoryManipulator(policy, PreferenceConstants.PREF_PAGE_SITES) {
-			public String getManipulatorLinkLabel() {
-				return ProvSDKMessages.ProvSDKUIActivator_SitePrefLink;
-			}
-		});
-		policy.setPlanValidator(new PlanValidator() {
-			public boolean continueWorkingWithPlan(ProvisioningPlan plan, Shell shell) {
-				if (plan == null)
-					return false;
-				if (plan.getStatus().getSeverity() == IStatus.CANCEL)
-					return false;
-
-				// Special case those statuses where we would never want to open a wizard
-				if (plan.getStatus().getCode() == IStatusCodes.NOTHING_TO_UPDATE) {
-					ProvUI.reportStatus(plan.getStatus(), StatusManager.BLOCK);
-					return false;
-				}
-
-				// Allow the wizard to open if there is no error
-				if (plan.getStatus().getSeverity() != IStatus.ERROR)
-					return true;
-
-				// There is an error.  Check the preference to see whether to continue.
-				String openPlan = getPreferenceStore().getString(PreferenceConstants.PREF_OPEN_WIZARD_ON_ERROR_PLAN);
-				if (MessageDialogWithToggle.ALWAYS.equals(openPlan)) {
-					return true;
-				}
-				if (MessageDialogWithToggle.NEVER.equals(openPlan)) {
-					ProvUI.reportStatus(plan.getStatus(), StatusManager.SHOW | StatusManager.LOG);
-					return false;
-				}
-				MessageDialogWithToggle dialog = MessageDialogWithToggle.openYesNoCancelQuestion(shell, ProvSDKMessages.ProvSDKUIActivator_Question, ProvSDKMessages.ProvSDKUIActivator_OpenWizardAnyway, null, false, getPreferenceStore(), PreferenceConstants.PREF_OPEN_WIZARD_ON_ERROR_PLAN);
-
-				// Any answer but yes will stop the performance of the plan, but NO is interpreted to mean, show me the error.
-				if (dialog.getReturnCode() == IDialogConstants.NO_ID)
-					ProvUI.reportStatus(plan.getStatus(), StatusManager.SHOW | StatusManager.LOG);
-				return dialog.getReturnCode() == IDialogConstants.YES_ID;
-			}
-		});
-		// Start with the default query context and configure some settings
-		IUViewQueryContext queryContext = new IUViewQueryContext(IUViewQueryContext.AVAILABLE_VIEW_BY_CATEGORY);
-		policy.setQueryContext(queryContext);
-		updateWithPreferences(queryContext);
-		Policy.setDefaultPolicy(policy);
-	}
-
 	void updateWithPreferences(IUViewQueryContext queryContext) {
 		queryContext.setShowLatestVersionsOnly(getPreferenceStore().getBoolean(PreferenceConstants.PREF_SHOW_LATEST_VERSION));
 		queryContext.setVisibleAvailableIUProperty(IInstallableUnit.PROP_TYPE_GROUP);
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/SDKPolicy.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/SDKPolicy.java
new file mode 100644
index 0000000..f75ee10
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/SDKPolicy.java
@@ -0,0 +1,90 @@
+/*******************************************************************************
+ * Copyright (c) 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials 
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.ui.sdk;
+
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
+import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
+import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
+import org.eclipse.equinox.internal.provisional.p2.ui.IStatusCodes;
+import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.*;
+import org.eclipse.jface.dialogs.IDialogConstants;
+import org.eclipse.jface.dialogs.MessageDialogWithToggle;
+import org.eclipse.jface.preference.IPreferenceStore;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.statushandlers.StatusManager;
+
+/**
+ * SDKPolicy defines the Eclipse SDK UI policies for the
+ * p2 UI.  The policy is declared as an OSGi service in
+ * the policy_component.xml file.
+ * 
+ * @since 3.5
+ */
+public class SDKPolicy extends Policy {
+	public SDKPolicy() {
+		setProfileChooser(new IProfileChooser() {
+			public String getProfileId(Shell shell) {
+				try {
+					return ProvSDKUIActivator.getSelfProfileId();
+				} catch (ProvisionException e) {
+					return IProfileRegistry.SELF;
+				}
+			}
+		});
+		setRepositoryManipulator(new ColocatedRepositoryManipulator(this, PreferenceConstants.PREF_PAGE_SITES) {
+			public String getManipulatorLinkLabel() {
+				return ProvSDKMessages.ProvSDKUIActivator_SitePrefLink;
+			}
+		});
+		setPlanValidator(new PlanValidator() {
+			public boolean continueWorkingWithPlan(ProvisioningPlan plan, Shell shell) {
+				if (plan == null)
+					return false;
+				if (plan.getStatus().getSeverity() == IStatus.CANCEL)
+					return false;
+
+				// Special case those statuses where we would never want to open a wizard
+				if (plan.getStatus().getCode() == IStatusCodes.NOTHING_TO_UPDATE) {
+					ProvUI.reportStatus(plan.getStatus(), StatusManager.BLOCK);
+					return false;
+				}
+
+				// Allow the wizard to open if there is no error
+				if (plan.getStatus().getSeverity() != IStatus.ERROR)
+					return true;
+
+				// There is an error.  Check the preference to see whether to continue.
+				IPreferenceStore prefs = ProvSDKUIActivator.getDefault().getPreferenceStore();
+				String openPlan = prefs.getString(PreferenceConstants.PREF_OPEN_WIZARD_ON_ERROR_PLAN);
+				if (MessageDialogWithToggle.ALWAYS.equals(openPlan)) {
+					return true;
+				}
+				if (MessageDialogWithToggle.NEVER.equals(openPlan)) {
+					ProvUI.reportStatus(plan.getStatus(), StatusManager.SHOW | StatusManager.LOG);
+					return false;
+				}
+				MessageDialogWithToggle dialog = MessageDialogWithToggle.openYesNoCancelQuestion(shell, ProvSDKMessages.ProvSDKUIActivator_Question, ProvSDKMessages.ProvSDKUIActivator_OpenWizardAnyway, null, false, prefs, PreferenceConstants.PREF_OPEN_WIZARD_ON_ERROR_PLAN);
+
+				// Any answer but yes will stop the performance of the plan, but NO is interpreted to mean, show me the error.
+				if (dialog.getReturnCode() == IDialogConstants.NO_ID)
+					ProvUI.reportStatus(plan.getStatus(), StatusManager.SHOW | StatusManager.LOG);
+				return dialog.getReturnCode() == IDialogConstants.YES_ID;
+			}
+		});
+		// Start with the default query context and configure some settings
+		IUViewQueryContext queryContext = new IUViewQueryContext(IUViewQueryContext.AVAILABLE_VIEW_BY_CATEGORY);
+		setQueryContext(queryContext);
+		ProvSDKUIActivator.getDefault().updateWithPreferences(queryContext);
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index cd5db34..f454bd3 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -208,7 +208,6 @@ public class ProvUIMessages extends NLS {
 	public static String PlanStatusHelper_PromptForUpdateManagerUI;
 	public static String PlatformUpdateTitle;
 	public static String PlatformRestartMessage;
-	public static String Policy_CannotResetDefaultPolicy;
 	public static String ProvUI_ErrorDuringApplyConfig;
 	public static String ProvUI_InformationTitle;
 	public static String ProvUI_InstallDialogError;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 102c246..12a636e 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -179,7 +179,6 @@ PlanStatusHelper_UpdateManagerPromptTitle=Unsupported Install
 PlatformUpdateTitle = Software Updates
 PlatformRestartMessage = You will need to restart {0} for the changes to take effect. \
 Would you like to restart now?
-Policy_CannotResetDefaultPolicy=Default p2 UI Policy can only be set once.
 ApplicationInRestartDialog = the application
 ProvUI_ErrorDuringApplyConfig=Error while attempting to apply changes.  You must restart the application for changes to take effect.
 ProvUI_InformationTitle=Information
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
index 889154f..060aa04 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
@@ -11,7 +11,7 @@
 package org.eclipse.equinox.internal.provisional.p2.ui.policy;
 
 import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
+import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.internal.p2.ui.*;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
@@ -49,22 +49,12 @@ public class Policy {
 	private RepositoryManipulator repositoryManipulator;
 
 	public static Policy getDefault() {
-		if (defaultInstance == null)
-			defaultInstance = new Policy();
-		return defaultInstance;
-	}
-
-	private static IStatus getDefaultPolicyAlreadySetStatus() {
-		return new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, ProvUIMessages.Policy_CannotResetDefaultPolicy);
-
-	}
-
-	public static void setDefaultPolicy(Policy policy) {
-		if (defaultInstance != null) {
-			ProvUI.reportStatus(getDefaultPolicyAlreadySetStatus(), StatusManager.LOG);
-			return;
+		if (defaultInstance == null) {
+			defaultInstance = (Policy) ServiceHelper.getService(ProvUIActivator.getContext(), Policy.class.getName());
+			if (defaultInstance == null)
+				defaultInstance = new Policy();
 		}
-		defaultInstance = policy;
+		return defaultInstance;
 	}
 
 	/**
commit 8dae93c23820913653519ff2ed2e3e0c054dc387
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 19 23:02:33 2009 +0000

    Bug 256361 - [ui] define clearly the rules of engagement for accessing and setting default Policy

5	0	examples/org.eclipse.equinox.p2.examples.rcp.cloud/.project
1	0	examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
7	0	examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
2	1	examples/org.eclipse.equinox.p2.examples.rcp.cloud/build.properties
0	9	examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/Activator.java
27	0	examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/p2/CloudPolicy.java
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/.project b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/.project
index 9276cae..f07386b 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/.project
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/.project
@@ -20,6 +20,11 @@
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ds.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
index bcbdba0..669a95f 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
@@ -26,3 +26,4 @@ Require-Bundle: org.eclipse.ui,
  org.eclipse.equinox.p2.ui.sdk.scheduler;bundle-version="1.0.0"
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Service-Component: OSGI-INF/policy_component.xml
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
new file mode 100644
index 0000000..a861d35
--- /dev/null
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.ui.sdk">
+   <implementation class="org.eclipse.equinox.p2.examples.rcp.cloud.p2.CloudPolicy"/>
+   <service>
+      <provide interface="org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy"/>
+   </service>
+</scr:component>
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/build.properties b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/build.properties
index 5c50a00..91db6ad 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/build.properties
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/build.properties
@@ -6,4 +6,5 @@ bin.includes = plugin.xml,\
                icons/,\
                product_lg.gif,\
                splash.bmp,\
-               plugin.properties
+               plugin.properties,\
+               OSGI-INF/
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/Activator.java b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/Activator.java
index 0d8532c..8e1336a 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/Activator.java
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/Activator.java
@@ -29,8 +29,6 @@ public class Activator extends AbstractUIPlugin {
 	public void start(BundleContext context) throws Exception {
 		super.start(context);
 		plugin = this;
-		/// XXX initialize the p2 UI policy
-		initializeP2Policies();
 	}
 
 	/*
@@ -61,11 +59,4 @@ public class Activator extends AbstractUIPlugin {
 	public static ImageDescriptor getImageDescriptor(String path) {
 		return imageDescriptorFromPlugin(PLUGIN_ID, path);
 	}
-	
-	private void initializeP2Policies() {
-		Policy policy = Policy.getDefault();
-		
-		// XXX User has no access to manipulate repositories
-		policy.setRepositoryManipulator(null);
-	}
 }
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/p2/CloudPolicy.java b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/p2/CloudPolicy.java
new file mode 100644
index 0000000..f307bb8
--- /dev/null
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/src/org/eclipse/equinox/p2/examples/rcp/cloud/p2/CloudPolicy.java
@@ -0,0 +1,27 @@
+/*******************************************************************************
+ * Copyright (c) 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials 
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.examples.rcp.cloud.p2;
+
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy;
+
+/**
+ * CloudPolicy defines the RCP Cloud Example policies for the
+ * p2 UI.  The policy is declared as an OSGi service in
+ * the policy_component.xml file.
+ * 
+ * @since 3.5
+ */
+public class CloudPolicy extends Policy {
+	public CloudPolicy() {
+		// XXX User has no access to manipulate repositories
+		setRepositoryManipulator(null);
+}
+}
commit 49057148d5e67e90f7a682f1321f640dcd9df6ae
Author: Susan Franklin <sfranklin>
Date:   Thu Mar 19 23:51:21 2009 +0000

    Bug 256361 - [ui] define clearly the rules of engagement for accessing and setting default Policy

1	0	examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
1	1	examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
5	0	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/.project
2	0	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/META-INF/MANIFEST.MF
7	0	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/OSGI-INF/policy_component.xml
2	1	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/build.properties
0	21	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/Activator.java
38	0	examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/p2/AllIUsAreVisiblePolicy.java
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
index 669a95f..334faa8 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/META-INF/MANIFEST.MF
@@ -7,6 +7,7 @@ Bundle-Activator: org.eclipse.equinox.p2.examples.rcp.cloud.Activator
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.ui,
  org.eclipse.core.runtime,
+ org.eclipse.equinox.ds,
  org.eclipse.equinox.p2.ui;bundle-version="1.0.100",
  org.eclipse.equinox.p2.metadata;bundle-version="1.0.0",
  org.eclipse.equinox.p2.metadata.repository;bundle-version="1.0.0",
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
index a861d35..dde0776 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.cloud/OSGI-INF/policy_component.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.ui.sdk">
+<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.examples.rcp.cloud.p2">
    <implementation class="org.eclipse.equinox.p2.examples.rcp.cloud.p2.CloudPolicy"/>
    <service>
       <provide interface="org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy"/>
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/.project b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/.project
index b2b323f..0b16359 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/.project
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/.project
@@ -20,6 +20,11 @@
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ds.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/META-INF/MANIFEST.MF b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/META-INF/MANIFEST.MF
index d308d2c..cb795df 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/META-INF/MANIFEST.MF
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/META-INF/MANIFEST.MF
@@ -7,6 +7,7 @@ Bundle-Localization: plugin
 Bundle-Activator: org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility.Activator
 Require-Bundle: org.eclipse.ui,
  org.eclipse.core.runtime,
+ org.eclipse.equinox.ds,
  org.eclipse.equinox.p2.ui;bundle-version="1.0.100",
  org.eclipse.equinox.p2.metadata;bundle-version="1.0.0",
  org.eclipse.equinox.p2.metadata.repository;bundle-version="1.0.0",
@@ -25,3 +26,4 @@ Require-Bundle: org.eclipse.ui,
  org.apache.commons.httpclient;bundle-version="3.1.0"
 Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Service-Component: OSGI-INF/policy_component.xml
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/OSGI-INF/policy_component.xml b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/OSGI-INF/policy_component.xml
new file mode 100644
index 0000000..f33a97a
--- /dev/null
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/OSGI-INF/policy_component.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<scr:component xmlns:scr="http://www.osgi.org/xmlns/scr/v1.1.0" name="org.eclipse.equinox.p2.exmaples.rcp.sdkbundlevisibility.policy">
+   <implementation class="org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility.p2.AllIUsAreVisiblePolicy"/>
+   <service>
+      <provide interface="org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy"/>
+   </service>
+</scr:component>
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/build.properties b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/build.properties
index 5c50a00..91db6ad 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/build.properties
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/build.properties
@@ -6,4 +6,5 @@ bin.includes = plugin.xml,\
                icons/,\
                product_lg.gif,\
                splash.bmp,\
-               plugin.properties
+               plugin.properties,\
+               OSGI-INF/
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/Activator.java b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/Activator.java
index 9d400e3..0141e95 100644
--- a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/Activator.java
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/Activator.java
@@ -1,13 +1,6 @@
 package org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility;
 
-import org.eclipse.equinox.internal.provisional.p2.ui.ProfileFactory;
-import org.eclipse.equinox.internal.provisional.p2.ui.policy.ColocatedRepositoryManipulator;
-import org.eclipse.equinox.internal.provisional.p2.ui.policy.IProfileChooser;
-import org.eclipse.equinox.internal.provisional.p2.ui.policy.IUViewQueryContext;
-import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy;
-import org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility.p2.PreferenceConstants;
 import org.eclipse.jface.resource.ImageDescriptor;
-import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.BundleContext;
 
@@ -34,23 +27,9 @@ public class Activator extends AbstractUIPlugin {
 	 */
 	public void start(BundleContext context) throws Exception {
 		super.start(context);
-		initializeP2Policies();
 		plugin = this;
 	}
 	
-	private void initializeP2Policies() {
-		Policy policy = Policy.getDefault();
-		// XXX Use the pref-based repository manipulator
-		policy.setRepositoryManipulator(new ColocatedRepositoryManipulator(policy, PreferenceConstants.PREF_PAGE_SITES));
-		
-		// XXX Change the visibility of the IUs shown in the UI.
-        // Using a null property for visibility means everything will be shown, not just
-        // groups (features).
-		IUViewQueryContext context = policy.getQueryContext();
-		context.setVisibleAvailableIUProperty(null);
-		context.setVisibleInstalledIUProperty(null);
-	}
-
 	/*
 	 * (non-Javadoc)
 	 * @see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)
diff --git a/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/p2/AllIUsAreVisiblePolicy.java b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/p2/AllIUsAreVisiblePolicy.java
new file mode 100644
index 0000000..c89c7b6
--- /dev/null
+++ b/examples/org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility/src/org/eclipse/equinox/p2/examples/rcp/sdkbundlevisibility/p2/AllIUsAreVisiblePolicy.java
@@ -0,0 +1,38 @@
+/*******************************************************************************
+ * Copyright (c) 2009 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials 
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ * 
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.examples.rcp.sdkbundlevisibility.p2;
+
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.ColocatedRepositoryManipulator;
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.IUViewQueryContext;
+import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policy;
+
+/**
+ * CloudPolicy defines the RCP Cloud Example policies for the p2 UI. The policy
+ * is declared as an OSGi service in the policy_component.xml file.
+ * 
+ * @since 3.5
+ */
+public class AllIUsAreVisiblePolicy extends Policy {
+	public AllIUsAreVisiblePolicy() {
+		// XXX Use the pref-based repository manipulator
+		setRepositoryManipulator(new ColocatedRepositoryManipulator(this, PreferenceConstants.PREF_PAGE_SITES));
+		
+		// XXX Create an IUViewQueryContext to change the visibility of the IUs shown in the UI.
+        // XXX Show the flat (non-categorized) view by default.
+		IUViewQueryContext context = new IUViewQueryContext(IUViewQueryContext.AVAILABLE_VIEW_FLAT);
+		// XXX All available IU's should be shown, not just groups/features
+		context.setVisibleAvailableIUProperty(null);
+		// XXX All installed IU's should be shown, not just the user-installed.
+		context.setVisibleInstalledIUProperty(null);
+		
+		setQueryContext(context);
+	}
+}
commit d9386d5827d198e5524cfa4843c0c9ec15f4550b
Author: Susan Franklin <sfranklin>
Date:   Mon Mar 23 16:02:39 2009 +0000

    Bug 256361 - [ui] define clearly the rules of engagement for accessing and setting default Policy
    Log warning when multiple Policy registrations are found

1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
30	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index f454bd3..a8834fe 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -208,6 +208,7 @@ public class ProvUIMessages extends NLS {
 	public static String PlanStatusHelper_PromptForUpdateManagerUI;
 	public static String PlatformUpdateTitle;
 	public static String PlatformRestartMessage;
+	public static String Policy_MultiplePolicyRegistrationsWarning;
 	public static String ProvUI_ErrorDuringApplyConfig;
 	public static String ProvUI_InformationTitle;
 	public static String ProvUI_InstallDialogError;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index 12a636e..3dbe874 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -247,3 +247,4 @@ PlanStatusHelper_PromptForUpdateManagerUI=A feature that you have selected uses
 \
 Do you want to launch the older Update Manager?
 
+Policy_MultiplePolicyRegistrationsWarning=Multiple registrations for the p2 UI Policy were found.  Using first found.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
index 060aa04..57132ba 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policy.java
@@ -10,8 +10,11 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.policy;
 
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+
 import org.eclipse.core.runtime.IStatus;
-import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.equinox.internal.p2.core.helpers.LogHelper;
 import org.eclipse.equinox.internal.p2.ui.*;
 import org.eclipse.equinox.internal.provisional.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
@@ -19,6 +22,8 @@ import org.eclipse.equinox.internal.provisional.p2.ui.IStatusCodes;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.statushandlers.StatusManager;
+import org.osgi.framework.InvalidSyntaxException;
+import org.osgi.framework.ServiceReference;
 
 /**
  * The Policy class is used to locate application specific policies that
@@ -28,11 +33,11 @@ import org.eclipse.ui.statushandlers.StatusManager;
  * are manipulated in the standard wizards and dialogs, and how the repositories
  * or the installation itself should be traversed when displaying content.
  * 
- * In some cases, Policy defines a default policy that is overridden
- * by user choice and subsequently stored in dialog settings.
+ * In some cases, the Policy is used only to define a default value that can
+ * be overridden by user choice and subsequently stored in dialog settings.
  * 
- * Client applications should generally configure the Policy when their
- * application's bundle is started.  
+ * Client applications should ensure that the Policy is registered before
+ * any of the p2 UI objects access the default Policy.
  * 
  * @since 3.5
  */
@@ -50,13 +55,32 @@ public class Policy {
 
 	public static Policy getDefault() {
 		if (defaultInstance == null) {
-			defaultInstance = (Policy) ServiceHelper.getService(ProvUIActivator.getContext(), Policy.class.getName());
+			defaultInstance = findRegisteredPolicy();
 			if (defaultInstance == null)
 				defaultInstance = new Policy();
 		}
 		return defaultInstance;
 	}
 
+	private static Policy findRegisteredPolicy() {
+		ServiceReference[] references;
+		try {
+			references = ProvUIActivator.getContext().getServiceReferences(Policy.class.getName(), null);
+		} catch (InvalidSyntaxException e) {
+			// Shouldn't happen, we don't use a filter
+			return null;
+		}
+		if (references == null || references.length == 0)
+			return null;
+		if (references.length > 1) {
+			IStatus multiplePolicyStatus = new Status(IStatus.WARNING, ProvUIActivator.PLUGIN_ID, ProvUIMessages.Policy_MultiplePolicyRegistrationsWarning);
+			LogHelper.log(multiplePolicyStatus);
+		}
+		Object result = ProvUIActivator.getContext().getService(references[0]);
+		ProvUIActivator.getContext().ungetService(references[0]);
+		return (Policy) result;
+	}
+
 	/**
 	 * Returns the query provider used to query for the UI elements shown
 	 * in the various UI components.
