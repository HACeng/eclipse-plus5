commit df51a8f284e9a6f0dd5a5a21ef61fec5ed051713
Author: Pascal Rapicault <prapicau>
Date:   Thu Oct 9 01:09:36 2008 +0000

    Bug 249996 - [artifact] MirrorApplication does not mirror properly

1	1	bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/Mirroring.java
4	0	bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository.java
5	0	bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/provisional/p2/artifact/repository/IArtifactRepository.java
4	0	bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository.java
5	0	bundles/org.eclipse.equinox.p2.extensionlocation/src/org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository.java
1	1	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AbstractProvisioningTest.java
4	0	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestArtifactRepository.java
4	0	bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository.java
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/Mirroring.java b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/Mirroring.java
index 3e4948d..33a3537 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/Mirroring.java
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/mirror/Mirroring.java
@@ -54,7 +54,7 @@ public class Mirroring {
 				if (repositoryStream == null)
 					return;
 				// TODO Is that ok to ignore the result?
-				source.getArtifact(descriptor, repositoryStream, new NullProgressMonitor());
+				source.getRawArtifact(descriptor, repositoryStream, new NullProgressMonitor());
 			} finally {
 				if (repositoryStream != null)
 					repositoryStream.close();
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository.java b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository.java
index 4348400..9521786 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/p2/artifact/repository/simple/SimpleArtifactRepository.java
@@ -515,6 +515,10 @@ public class SimpleArtifactRepository extends AbstractArtifactRepository impleme
 		return downloadArtifact(descriptor, destination, monitor);
 	}
 
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor) {
+		return downloadArtifact(descriptor, destination, monitor);
+	}
+
 	public synchronized IArtifactDescriptor[] getArtifactDescriptors(IArtifactKey key) {
 		Collection result = (Collection) artifactMap.get(key);
 		if (result == null)
diff --git a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/provisional/p2/artifact/repository/IArtifactRepository.java b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/provisional/p2/artifact/repository/IArtifactRepository.java
index c96d33a..ca93605 100644
--- a/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/provisional/p2/artifact/repository/IArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.artifact.repository/src/org/eclipse/equinox/internal/provisional/p2/artifact/repository/IArtifactRepository.java
@@ -69,6 +69,11 @@ public interface IArtifactRepository extends IRepository {
 	public IStatus getArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor);
 
 	/**
+	 * Write to the given output stream the bytes represented by the artifact descriptor without processing by the steps of the given descriptor. 
+	 */
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor);
+
+	/**
 	 * Return the set of artifact descriptors describing the ways that this repository
 	 * can supply the artifact associated with the given artifact key
 	 * @param key the artifact key to lookup
diff --git a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository.java b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository.java
index 0c52b62..e08d525 100644
--- a/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.directorywatcher/src/org/eclipse/equinox/internal/provisional/p2/directorywatcher/CachingArtifactRepository.java
@@ -126,6 +126,10 @@ public class CachingArtifactRepository implements IArtifactRepository, IFileArti
 		return innerRepo.getArtifact(descriptor, destination, monitor);
 	}
 
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor) {
+		return innerRepo.getRawArtifact(descriptor, destination, monitor);
+	}
+
 	public IStatus getArtifacts(IArtifactRequest[] requests, IProgressMonitor monitor) {
 		return Status.OK_STATUS;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.extensionlocation/src/org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository.java b/bundles/org.eclipse.equinox.p2.extensionlocation/src/org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository.java
index f7edbbf..15df198 100644
--- a/bundles/org.eclipse.equinox.p2.extensionlocation/src/org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.extensionlocation/src/org/eclipse/equinox/internal/p2/extensionlocation/ExtensionLocationArtifactRepository.java
@@ -169,6 +169,11 @@ public class ExtensionLocationArtifactRepository extends AbstractRepository impl
 		return artifactRepository.getArtifact(descriptor, destination, monitor);
 	}
 
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor) {
+		ensureInitialized();
+		return artifactRepository.getRawArtifact(descriptor, destination, monitor);
+	}
+
 	public IArtifactDescriptor[] getArtifactDescriptors(IArtifactKey key) {
 		ensureInitialized();
 		return artifactRepository.getArtifactDescriptors(key);
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AbstractProvisioningTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AbstractProvisioningTest.java
index 9eba3da..b4fa910 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AbstractProvisioningTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/AbstractProvisioningTest.java
@@ -1006,7 +1006,7 @@ public abstract class AbstractProvisioningTest extends TestCase {
 			//this implicitly verifies the keys are present
 
 			IArtifactDescriptor[] sourceDescriptors = sourceRepo.getArtifactDescriptors(sourceKeys[i]);
-			assertEquals(message, sourceDescriptors, destinationDescriptors);
+			assertEquals(message, sourceDescriptors, destinationDescriptors, false);
 		}
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestArtifactRepository.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestArtifactRepository.java
index 19a9100..86a4755 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestArtifactRepository.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestArtifactRepository.java
@@ -128,6 +128,10 @@ public class TestArtifactRepository extends AbstractArtifactRepository {
 		return Status.OK_STATUS;
 	}
 
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor) {
+		return testhandler.download((String) keysToLocations.get(descriptor.getArtifactKey()), destination, monitor);
+	}
+
 	public IArtifactDescriptor[] getArtifactDescriptors(IArtifactKey key) {
 		if (!contains(key))
 			return null;
diff --git a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository.java b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository.java
index 3e309f0..3f0f941 100644
--- a/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository.java
+++ b/bundles/org.eclipse.equinox.p2.touchpoint.eclipse/src/org/eclipse/equinox/internal/p2/touchpoint/eclipse/AggregatedBundleRepository.java
@@ -93,6 +93,10 @@ public class AggregatedBundleRepository extends AbstractArtifactRepository imple
 		throw new UnsupportedOperationException(Messages.artifact_retrieval_unsupported);
 	}
 
+	public IStatus getRawArtifact(IArtifactDescriptor descriptor, OutputStream destination, IProgressMonitor monitor) {
+		throw new UnsupportedOperationException(Messages.artifact_retrieval_unsupported);
+	}
+
 	public IStatus getArtifacts(IArtifactRequest[] requests, IProgressMonitor monitor) {
 		throw new UnsupportedOperationException(Messages.artifact_retrieval_unsupported);
 	}
commit dfe94e43cf371e39d46b07c9f0e6c6b28eeb000e
Author: Pascal Rapicault <prapicau>
Date:   Thu Oct 9 01:17:59 2008 +0000

    Bug 249996 - [artifact] MirrorApplication does not mirror properly

1	1	bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/RepositoryMirroring.java
diff --git a/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/RepositoryMirroring.java b/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/RepositoryMirroring.java
index 321c17f..59d8527 100644
--- a/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/RepositoryMirroring.java
+++ b/bundles/org.eclipse.equinox.p2.tools/src/org/eclipse/equinox/internal/p2/tools/mirror/RepositoryMirroring.java
@@ -118,7 +118,7 @@ public class RepositoryMirroring {
 			if (verbose)
 				System.out.println("Mirroring artifact: " + descriptor);
 			// TODO Is that ok to ignore the result?
-			artifactSourceRepository.getArtifact(descriptor, repositoryStream, new NullProgressMonitor());
+			artifactSourceRepository.getRawArtifact(descriptor, repositoryStream, new NullProgressMonitor());
 		} finally {
 			if (repositoryStream != null)
 				try {
