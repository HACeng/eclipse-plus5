commit c4c93cf968ea1d6c134ff1846b6f173e7cf593af
Author: Susan Franklin <sfranklin>
Date:   Thu May 15 18:03:04 2008 +0000

    bug 231590 - [ui] Close dialog after install (progress monitor)

5	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
19	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
3	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index f917918..ef1b264 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -34,6 +34,7 @@ import org.eclipse.jface.util.IPropertyChangeListener;
 import org.eclipse.jface.util.PropertyChangeEvent;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.window.SameShellProvider;
+import org.eclipse.jface.window.Window;
 import org.eclipse.jface.wizard.WizardDialog;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.swt.SWT;
@@ -717,6 +718,10 @@ public class UpdateAndInstallDialog extends TrayDialog implements IViewMenuProvi
 		if (action != null) {
 			action.runWithEvent(event);
 		}
+		// Close this dialog if we were performing a profile
+		// modifying operation and it succeeded.
+		if (action instanceof ProfileModificationAction && ((ProfileModificationAction) action).getReturnCode() == Window.OK)
+			close();
 	}
 
 	private IAction getButtonAction(Widget widget) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
index 0e3c561..1378d03 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
@@ -106,10 +106,10 @@ public class InstallAction extends ProfileModificationAction {
 		return ProvUIMessages.InstallIUProgress;
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
+	protected int performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
 		InstallWizard wizard = new InstallWizard(targetProfileId, ius, plan, getLicenseManager());
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
-		dialog.open();
+		return dialog.open();
 	}
 
 	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
index dbc4581..0773934 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProfileModificationAction.java
@@ -26,15 +26,17 @@ import org.eclipse.equinox.internal.provisional.p2.ui.policy.*;
 import org.eclipse.jface.dialogs.ProgressMonitorDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.window.Window;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.statushandlers.StatusManager;
 
 public abstract class ProfileModificationAction extends ProvisioningAction {
-
+	public static final int ACTION_NOT_RUN = -1;
 	private String profileId;
 	private String userChosenProfileId;
 	IProfileChooser profileChooser;
 	Policies policies;
+	int result = ACTION_NOT_RUN;
 
 	protected ProfileModificationAction(String text, ISelectionProvider selectionProvider, String profileId, IProfileChooser profileChooser, Policies policies, Shell shell) {
 		super(text, selectionProvider, shell);
@@ -75,11 +77,25 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 	public void run() {
 		ProvisioningPlan plan = getProvisioningPlan();
 		if (validatePlan(plan))
-			performOperation(getSelectedIUs(), getProfileId(true), plan);
+			result = performOperation(getSelectedIUs(), getProfileId(true), plan);
+		else
+			result = Window.CANCEL;
 		userChosenProfileId = null;
 	}
 
 	/**
+	 * Get the integer return code returned by any wizards launched by this
+	 * action.  If the action has not been run, return ACTION_NOT_RUN.  If the
+	 * action does not open a wizard, return Window.OK if the operation was performed,
+	 * and Window.CANCEL if it was canceled.
+	 * 
+	 * @return integer return code
+	 */
+	public int getReturnCode() {
+		return result;
+	}
+
+	/**
 	 * Validate the plan and return true if the operation should
 	 * be performed with plan.  Report any errors to the user before returning false.
 	 * @param plan
@@ -103,7 +119,7 @@ public abstract class ProfileModificationAction extends ProvisioningAction {
 	 */
 	protected abstract ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException;
 
-	protected abstract void performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan);
+	protected abstract int performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan);
 
 	protected abstract String getTaskName();
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
index 072e4cc..bbe43ff 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
@@ -20,6 +20,7 @@ import org.eclipse.equinox.internal.provisional.p2.ui.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.policy.Policies;
 import org.eclipse.jface.viewers.ISelectionProvider;
+import org.eclipse.jface.window.Window;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.statushandlers.StatusManager;
 
@@ -37,9 +38,10 @@ public class RevertAction extends ProfileModificationAction {
 		return null;
 	}
 
-	protected void performOperation(IInstallableUnit[] toBecome, String targetProfileId, ProvisioningPlan plan) {
+	protected int performOperation(IInstallableUnit[] toBecome, String targetProfileId, ProvisioningPlan plan) {
 		ProvisioningOperation op = new ProfileModificationOperation(ProvUIMessages.RevertIUOperationLabel, targetProfileId, plan);
 		ProvisioningOperationRunner.schedule(op, getShell(), StatusManager.SHOW | StatusManager.LOG);
+		return Window.OK;
 	}
 
 	/*
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
index 23c101a..cd1ac28 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
@@ -68,10 +68,10 @@ public class UninstallAction extends ProfileModificationAction {
 		return ProvUIMessages.UninstallIUProgress;
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
+	protected int performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
 		UninstallWizard wizard = new UninstallWizard(targetProfileId, ius, plan);
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
-		dialog.open();
+		return dialog.open();
 	}
 
 	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
index b57213b..de11915 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
@@ -44,7 +44,7 @@ public class UpdateAction extends ProfileModificationAction {
 		setToolTipText(ProvUI.UPDATE_COMMAND_TOOLTIP);
 	}
 
-	protected void performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
+	protected int performOperation(IInstallableUnit[] ius, String targetProfileId, ProvisioningPlan plan) {
 		// Caches should have been created while formulating the plan
 		Assert.isNotNull(latestReplacements);
 		Assert.isNotNull(allReplacements);
@@ -52,7 +52,7 @@ public class UpdateAction extends ProfileModificationAction {
 
 		UpdateWizard wizard = new UpdateWizard(targetProfileId, ius, (AvailableUpdateElement[]) allReplacements.toArray(new AvailableUpdateElement[allReplacements.size()]), latestReplacements.values().toArray(), plan, getLicenseManager());
 		WizardDialog dialog = new WizardDialog(getShell(), wizard);
-		dialog.open();
+		return dialog.open();
 	}
 
 	protected ProvisioningPlan getProvisioningPlan(IInstallableUnit[] ius, String targetProfileId, IProgressMonitor monitor) throws ProvisionException {
