commit 31b2d5a9a6584b1a6625d4b8eafcdd633c5dfca0
Author: John Arthorne <johna>
Date:   Thu Feb 12 18:23:20 2009 +0000

    Bug 259598 [repo] repo manager should favor client-settable repo name

13	5	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/core/helpers/AbstractRepositoryManager.java
7	0	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/core/helpers/AbstractRepositoryManager.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/core/helpers/AbstractRepositoryManager.java
index e4e6008..5ce32cd 100644
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/core/helpers/AbstractRepositoryManager.java
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/p2/core/helpers/AbstractRepositoryManager.java
@@ -34,6 +34,7 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 		public boolean isSystem = false;
 		public URI location;
 		public String name;
+		public String nickname;
 		public SoftReference repository;
 		public String suffix;
 
@@ -48,6 +49,7 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 	public static final String KEY_DESCRIPTION = "description"; //$NON-NLS-1$
 	public static final String KEY_ENABLED = "enabled"; //$NON-NLS-1$
 	public static final String KEY_NAME = "name"; //$NON-NLS-1$
+	public static final String KEY_NICKNAME = "nickname"; //$NON-NLS-1$
 	public static final String KEY_PROVIDER = "provider"; //$NON-NLS-1$
 	public static final String KEY_SUFFIX = "suffix"; //$NON-NLS-1$
 	public static final String KEY_SYSTEM = "isSystem"; //$NON-NLS-1$
@@ -491,10 +493,12 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 				return null;// Repository not found
 			if (IRepository.PROP_DESCRIPTION.equals(key))
 				return info.description;
-			if (IRepository.PROP_NAME.equals(key))
+			else if (IRepository.PROP_NAME.equals(key))
 				return info.name;
-			if (IRepository.PROP_SYSTEM.equals(key))
+			else if (IRepository.PROP_SYSTEM.equals(key))
 				return Boolean.toString(info.isSystem);
+			else if (IRepository.PROP_NICKNAME.equals(key))
+				return info.nickname;
 			// Key not known, return null
 			return null;
 		}
@@ -512,10 +516,12 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 				return;// Repository not found
 			if (IRepository.PROP_DESCRIPTION.equals(key))
 				info.description = value;
-			if (IRepository.PROP_NAME.equals(key))
+			else if (IRepository.PROP_NAME.equals(key))
 				info.name = value;
-			if (IRepository.PROP_SYSTEM.equals(key))
-				//only true is value.equals("true") which is OK because a repository is only system if it's explicitly set to system.
+			else if (IRepository.PROP_NICKNAME.equals(key))
+				info.nickname = value;
+			else if (IRepository.PROP_SYSTEM.equals(key))
+				//only true if value.equals("true") which is OK because a repository is only system if it's explicitly set to system.
 				info.isSystem = Boolean.valueOf(value).booleanValue();
 			// Key not known
 		}
@@ -712,6 +718,7 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 		changed |= putValue(node, KEY_SYSTEM, Boolean.toString(info.isSystem));
 		changed |= putValue(node, KEY_DESCRIPTION, info.description);
 		changed |= putValue(node, KEY_NAME, info.name);
+		changed |= putValue(node, KEY_NICKNAME, info.nickname);
 		changed |= putValue(node, KEY_SUFFIX, info.suffix);
 		changed |= putValue(node, KEY_ENABLED, Boolean.toString(info.isEnabled));
 		if (changed && flush)
@@ -788,6 +795,7 @@ public abstract class AbstractRepositoryManager implements IRepositoryManager, P
 			RepositoryInfo info = new RepositoryInfo();
 			info.location = location;
 			info.name = child.get(KEY_NAME, null);
+			info.nickname = child.get(KEY_NICKNAME, null);
 			info.description = child.get(KEY_DESCRIPTION, null);
 			info.isSystem = child.getBoolean(KEY_SYSTEM, false);
 			info.isEnabled = child.getBoolean(KEY_ENABLED, true);
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
index ca073d2..dde7cc3 100644
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/IRepository.java
@@ -42,6 +42,13 @@ public interface IRepository extends IAdaptable {
 	public static final String PROP_NAME = "name"; //$NON-NLS-1$
 
 	/**
+	 * The key for a string property providing a user-defined name for the repository.
+	 * This property is never stored in the repository itself, but is instead tracked and managed
+	 * by an {@link IRepositoryManager}.
+	 */
+	public static final String PROP_NICKNAME = "p2.nickname"; //$NON-NLS-1$
+
+	/**
 	 * The key for a string property providing a human-readable description for the repository.
 	 */
 	public static final String PROP_DESCRIPTION = "description"; //$NON-NLS-1$
commit 7b049c21fdc5970aed14b8ad6e021a2a2a136f9b
Author: John Arthorne <johna>
Date:   Thu Feb 12 22:22:43 2009 +0000

    Bug 259598 [repo] repo manager should favor client-settable repo name

25	1	bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/RepositoryEvent.java
2	4	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Feature.java
7	7	bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
2	2	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository.java
2	1	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
2	1	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/p2/metadata/repository/IMetadataRepository.java
1	1	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/AbstractMetadataRepository.java
3	1	bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/RepositoryReference.java
2	10	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/Feature.java
8	7	bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAction.java
2	2	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestMetadataRepository.java
7	8	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/LocalMetadataRepositoryTest.java
2	0	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/updatesite/SiteXMLActionTest.java
5	4	bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/SiteXMLAction.java
1	1	bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
diff --git a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/RepositoryEvent.java b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/RepositoryEvent.java
index dfcaaa2..4052177 100644
--- a/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/RepositoryEvent.java
+++ b/bundles/org.eclipse.equinox.p2.core/src/org/eclipse/equinox/internal/provisional/p2/core/repository/RepositoryEvent.java
@@ -59,8 +59,23 @@ public class RepositoryEvent extends EventObject {
 	public static final int ENABLEMENT = 8;
 
 	private final int kind, type;
-
 	private boolean isEnabled;
+	private String nickname;
+
+	/**
+	 * Creates and returns a new repository discovery event.
+	 * @param location the location of the repository that changed.
+	 * @param nickname the repository nickname
+	 * @param repositoryType the type of repository that was changed
+	 * @param enabled whether the repository is enabled
+	 * @return A new repository discovery event
+	 * @see IRepository#PROP_NICKNAME
+	 */
+	public static RepositoryEvent newDiscoveryEvent(URI location, String nickname, int repositoryType, boolean enabled) {
+		RepositoryEvent event = new RepositoryEvent(location, repositoryType, DISCOVERED, enabled);
+		event.nickname = nickname;
+		return event;
+	}
 
 	/**
 	 * Creates a new repository event.
@@ -92,6 +107,15 @@ public class RepositoryEvent extends EventObject {
 	}
 
 	/**
+	 * Returns the nickname of the repository. This method is only applicable
+	 * for the {@link #DISCOVERED} event type. For other event types this
+	 * method returns <code>null</code>.
+	 */
+	public String getRepositoryNickname() {
+		return nickname;
+	}
+
+	/**
 	 * Returns the location of the repository associated with this event.
 	 * 
 	 * @return the location of the repository associated with this event.
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Feature.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Feature.java
index 54c7adc..3dcdfd2 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Feature.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Feature.java
@@ -157,10 +157,8 @@ public class Feature {
 		return providerName;
 	}
 
-	public String getUpdateSiteURL() {
-		if (updateSite != null)
-			return updateSite.getURL();
-		return null;
+	public URLEntry getUpdateSite() {
+		return updateSite;
 	}
 
 	public String getVersion() {
diff --git a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
index 37e8bb6..8a52793 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.generator/src/org/eclipse/equinox/internal/provisional/p2/metadata/generator/Generator.java
@@ -988,14 +988,14 @@ public class Generator {
 		for (int i = 0; i < features.length; i++) {
 			Feature feature = features[i];
 			//publish feature site references
-			String updateURL = feature.getUpdateSiteURL();
+			URLEntry updateURL = feature.getUpdateSite();
 			//don't enable feature update sites by default since this results in too many
 			//extra sites being loaded and searched (Bug 234177)
 			if (updateURL != null)
-				generateSiteReference(updateURL, feature.getId(), false);
+				generateSiteReference(updateURL.getURL(), updateURL.getAnnotation(), feature.getId(), false);
 			URLEntry[] discoverySites = feature.getDiscoverySites();
 			for (int j = 0; j < discoverySites.length; j++)
-				generateSiteReference(discoverySites[j].getURL(), feature.getId(), false);
+				generateSiteReference(discoverySites[j].getURL(), discoverySites[j].getAnnotation(), feature.getId(), false);
 
 			//generate feature IU
 			String location = feature.getLocation();
@@ -1108,13 +1108,13 @@ public class Generator {
 	 * @param isEnabled Whether the site should be enabled by default
 	 * @deprecated moved to FeaturesAction
 	 */
-	private void generateSiteReference(String location, String featureId, boolean isEnabled) {
+	private void generateSiteReference(String location, String name, String featureId, boolean isEnabled) {
 		IMetadataRepository metadataRepo = info.getMetadataRepository();
 		try {
 			URI associateLocation = URIUtil.fromString(location);
 			int flags = isEnabled ? IRepository.ENABLED : IRepository.NONE;
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_METADATA, flags);
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_ARTIFACT, flags);
+			metadataRepo.addReference(associateLocation, name, IRepository.TYPE_METADATA, flags);
+			metadataRepo.addReference(associateLocation, name, IRepository.TYPE_ARTIFACT, flags);
 		} catch (URISyntaxException e) {
 			String message = "Invalid site reference: " + location; //$NON-NLS-1$
 			if (featureId != null)
@@ -1251,7 +1251,7 @@ public class Generator {
 		URLEntry[] associatedSites = site.getAssociatedSites();
 		if (associatedSites != null)
 			for (int i = 0; i < associatedSites.length; i++)
-				generateSiteReference(associatedSites[i].getURL(), null, true);
+				generateSiteReference(associatedSites[i].getURL(), associatedSites[i].getAnnotation(), null, true);
 
 		if (PROTOCOL_FILE.equals(siteLocation.getScheme())) {
 			File siteFile = URIUtil.toFile(siteLocation);
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository.java
index 3afe581..cddff97 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/LocalMetadataRepository.java
@@ -92,9 +92,9 @@ public class LocalMetadataRepository extends AbstractMetadataRepository {
 		save();
 	}
 
-	public synchronized void addReference(URI repositoryLocation, int repositoryType, int options) {
+	public synchronized void addReference(URI repositoryLocation, String nickname, int repositoryType, int options) {
 		assertModifiable();
-		repositories.add(new RepositoryReference(repositoryLocation, repositoryType, options));
+		repositories.add(new RepositoryReference(repositoryLocation, nickname, repositoryType, options));
 	}
 
 	public void initialize(RepositoryState state) {
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
index 951a935..1d089e8 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/p2/metadata/repository/io/MetadataParser.java
@@ -61,11 +61,12 @@ public abstract class MetadataParser extends XMLParser implements XMLConstants {
 		public RepositoryReferenceHandler(AbstractHandler parentHandler, Attributes attributes, Set references) {
 			super(parentHandler, REPOSITORY_REFERENCE_ELEMENT);
 			String[] values = parseRequiredAttributes(attributes, required);
+			String name = parseOptionalAttribute(attributes, NAME_ATTRIBUTE);
 			int type = checkInteger(elementHandled, TYPE_ATTRIBUTE, values[0]);
 			int options = checkInteger(elementHandled, OPTIONS_ATTRIBUTE, values[1]);
 			URI location = parseURIAttribute(attributes, true);
 			if (location != null)
-				references.add(new RepositoryReference(location, type, options));
+				references.add(new RepositoryReference(location, name, type, options));
 		}
 
 		public void startElement(String name, Attributes attributes) {
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/p2/metadata/repository/IMetadataRepository.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/p2/metadata/repository/IMetadataRepository.java
index f952a2e..59eab61 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/p2/metadata/repository/IMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/p2/metadata/repository/IMetadataRepository.java
@@ -50,13 +50,14 @@ public interface IMetadataRepository extends IRepository, IQueryable {
 	 * be marked as disabled.
 	 * 
 	 * @param location the location of the repository to add
+	 * @param nickname The nickname of the repository, or <code>null</code>
 	 * @param type the repository type (currently either {@link IRepository#TYPE_METADATA}
 	 * or {@link IRepository#TYPE_ARTIFACT}).
 	 * @param options bit-wise or of option constants (currently either 
 	 * {@link IRepository#ENABLED} or {@link IRepository#NONE}).
 	 * @see IMetadataRepositoryManager#setEnabled(URI, boolean)
 	 */
-	public void addReference(URI location, int type, int options);
+	public void addReference(URI location, String nickname, int type, int options);
 
 	/**
 	 * Removes all installable units that match the given query from this repository.
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/AbstractMetadataRepository.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/AbstractMetadataRepository.java
index 686162f..0028203 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/AbstractMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/AbstractMetadataRepository.java
@@ -55,7 +55,7 @@ public abstract class AbstractMetadataRepository extends AbstractRepository impl
 		assertModifiable();
 	}
 
-	public void addReference(URI repositoryLocation, int repositoryType, int options) {
+	public void addReference(URI repositoryLocation, String nickname, int repositoryType, int options) {
 		assertModifiable();
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/RepositoryReference.java b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/RepositoryReference.java
index 83f9dba..6927929 100644
--- a/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/RepositoryReference.java
+++ b/bundles/org.eclipse.equinox.p2.metadata.repository/src/org/eclipse/equinox/internal/provisional/spi/p2/metadata/repository/RepositoryReference.java
@@ -19,11 +19,13 @@ public class RepositoryReference {
 	public URI Location;
 	public int Type;
 	public int Options;
+	public String Nickname;
 
-	public RepositoryReference(URI location, int type, int options) {
+	public RepositoryReference(URI location, String nickname, int type, int options) {
 		this.Location = location;
 		this.Type = type;
 		this.Options = options;
+		this.Nickname = nickname;
 	}
 
 	public boolean equals(Object obj) {
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/Feature.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/Feature.java
index 5cd9064..31b15d0 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/Feature.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/Feature.java
@@ -183,16 +183,8 @@ public class Feature {
 		return providerName;
 	}
 
-	public String getUpdateSiteLabel() {
-		if (updateSite != null)
-			return updateSite.getAnnotation();
-		return null;
-	}
-
-	public String getUpdateSiteURL() {
-		if (updateSite != null)
-			return updateSite.getURL();
-		return null;
+	public URLEntry getUpdateSite() {
+		return updateSite;
 	}
 
 	public String getVersion() {
diff --git a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAction.java b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAction.java
index 99d1e93..7ee3152 100644
--- a/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAction.java
+++ b/bundles/org.eclipse.equinox.p2.publisher/src/org/eclipse/equinox/p2/publisher/eclipse/FeaturesAction.java
@@ -468,14 +468,15 @@ public class FeaturesAction extends AbstractPublisherAction {
 	/**
 	 * Generates and publishes a reference to an update site location
 	 * @param location The update site location
+	 * @param nickname The update site label
 	 * @param featureId the identifier of the feature where the error occurred, or null
 	 * @param metadataRepo The repo into which the references are added
 	 */
-	private void generateSiteReference(String location, String featureId, IMetadataRepository metadataRepo) {
+	private void generateSiteReference(String location, String nickname, String featureId, IMetadataRepository metadataRepo) {
 		try {
 			URI associateLocation = new URI(location);
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_METADATA, IRepository.NONE);
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_ARTIFACT, IRepository.NONE);
+			metadataRepo.addReference(associateLocation, nickname, IRepository.TYPE_METADATA, IRepository.NONE);
+			metadataRepo.addReference(associateLocation, nickname, IRepository.TYPE_ARTIFACT, IRepository.NONE);
 		} catch (URISyntaxException e) {
 			String message = "Invalid site reference: " + location; //$NON-NLS-1$
 			if (featureId != null)
@@ -486,14 +487,14 @@ public class FeaturesAction extends AbstractPublisherAction {
 
 	private void generateSiteReferences(Feature feature, IPublisherResult result, IPublisherInfo info) {
 		//publish feature site references
-		String updateURL = feature.getUpdateSiteURL();
+		URLEntry updateURL = feature.getUpdateSite();
 		//don't enable feature update sites by default since this results in too many
 		//extra sites being loaded and searched (Bug 234177)
 		if (updateURL != null)
-			generateSiteReference(updateURL, feature.getId(), info.getMetadataRepository());
+			generateSiteReference(updateURL.getURL(), updateURL.getAnnotation(), feature.getId(), info.getMetadataRepository());
 		URLEntry[] discoverySites = feature.getDiscoverySites();
-		for (int j = 0; j < discoverySites.length; j++)
-			generateSiteReference(discoverySites[j].getURL(), feature.getId(), info.getMetadataRepository());
+		for (int i = 0; i < discoverySites.length; i++)
+			generateSiteReference(discoverySites[i].getURL(), discoverySites[i].getAnnotation(), feature.getId(), info.getMetadataRepository());
 	}
 
 	protected Feature[] getFeatures(File[] locations) {
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestMetadataRepository.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestMetadataRepository.java
index 6319f8b..6e4b1e9 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/TestMetadataRepository.java
@@ -96,9 +96,9 @@ public class TestMetadataRepository extends AbstractMetadataRepository {
 		this.repositories.addAll(Arrays.asList(state.Repositories));
 	}
 
-	public synchronized void addReference(URI repositoryLocation, int repositoryType, int options) {
+	public synchronized void addReference(URI repositoryLocation, String nickname, int repositoryType, int options) {
 		assertModifiable();
-		repositories.add(new RepositoryReference(repositoryLocation, repositoryType, options));
+		repositories.add(new RepositoryReference(repositoryLocation, nickname, repositoryType, options));
 	}
 
 	/**
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/LocalMetadataRepositoryTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/LocalMetadataRepositoryTest.java
index 2df7123..1f6854a 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/LocalMetadataRepositoryTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/metadata/repository/LocalMetadataRepositoryTest.java
@@ -12,7 +12,6 @@
 package org.eclipse.equinox.p2.tests.metadata.repository;
 
 import java.io.File;
-import java.net.MalformedURLException;
 import java.net.URI;
 import java.util.*;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
@@ -52,7 +51,7 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 		super.tearDown();
 	}
 
-	public void testCompressedRepository() throws MalformedURLException, ProvisionException {
+	public void testCompressedRepository() throws ProvisionException {
 		IMetadataRepositoryManager manager = getMetadataRepositoryManager();
 		Map properties = new HashMap();
 		properties.put(IRepository.PROP_COMPRESSED, "true");
@@ -84,7 +83,7 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 		}
 	}
 
-	public void testGetProperties() throws MalformedURLException, ProvisionException {
+	public void testGetProperties() throws ProvisionException {
 		IMetadataRepositoryManager manager = getMetadataRepositoryManager();
 		IMetadataRepository repo = manager.createRepository(repoLocation.toURI(), "TestRepo", IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
 		Map properties = repo.getProperties();
@@ -97,7 +96,7 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 		}
 	}
 
-	public void testSetProperty() throws MalformedURLException, ProvisionException {
+	public void testSetProperty() throws ProvisionException {
 		IMetadataRepositoryManager manager = getMetadataRepositoryManager();
 		IMetadataRepository repo = manager.createRepository(repoLocation.toURI(), "TestRepo", IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, null);
 		Map properties = repo.getProperties();
@@ -149,7 +148,7 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 
 	}
 
-	public void testUncompressedRepository() throws MalformedURLException, ProvisionException {
+	public void testUncompressedRepository() throws ProvisionException {
 		IMetadataRepositoryManager manager = getMetadataRepositoryManager();
 		Map properties = new HashMap();
 		properties.put(IRepository.PROP_COMPRESSED, "false");
@@ -179,14 +178,14 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 	 * @throws MalformedURLException 
 	 * @throws ProvisionException 
 	 */
-	public void testLoadSelfReference() throws MalformedURLException, ProvisionException {
+	public void testLoadSelfReference() throws ProvisionException {
 		//setup a repository that has a reference to itself in disabled state
 		IMetadataRepositoryManager manager = getMetadataRepositoryManager();
 		Map properties = new HashMap();
 		properties.put(IRepository.PROP_COMPRESSED, "false");
 		final URI repoURI = repoLocation.toURI();
 		IMetadataRepository repo = manager.createRepository(repoURI, "testLoadSelfReference", IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, properties);
-		repo.addReference(repoURI, IRepository.TYPE_METADATA, IRepository.NONE);
+		repo.addReference(repoURI, "testNick", IRepository.TYPE_METADATA, IRepository.NONE);
 		//adding a reference doesn't save the repository, but setting a property does
 		repo.setProperty("changed", "false");
 
@@ -226,7 +225,7 @@ public class LocalMetadataRepositoryTest extends AbstractProvisioningTest {
 		properties.put(IRepository.PROP_COMPRESSED, "false");
 		final URI repoURL = repoLocation.toURI();
 		IMetadataRepository repo = manager.createRepository(repoURL, "testRefreshSelfReference", IMetadataRepositoryManager.TYPE_SIMPLE_REPOSITORY, properties);
-		repo.addReference(repoURL, IRepository.TYPE_METADATA, IRepository.NONE);
+		repo.addReference(repoURL, "testNick", IRepository.TYPE_METADATA, IRepository.NONE);
 		//adding a reference doesn't save the repository, but setting a property does
 		repo.setProperty("changed", "false");
 
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/updatesite/SiteXMLActionTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/updatesite/SiteXMLActionTest.java
index 07a06f5..f0a83a8 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/updatesite/SiteXMLActionTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/updatesite/SiteXMLActionTest.java
@@ -49,6 +49,8 @@ public class SiteXMLActionTest extends AbstractProvisioningTest {
 			RepositoryReference ref = (RepositoryReference) it.next();
 			assertEquals("1.1", "http://download.eclipse.org/eclipse/updates/3.5", ref.Location.toString());
 			assertEquals("1.2", IRepository.ENABLED, ref.Options);
+			assertEquals("1.3", "Eclipse Project Update Site", ref.Nickname);
+
 			if (ref.Type == IRepository.TYPE_METADATA)
 				metadataFound = true;
 			else if (ref.Type == IRepository.TYPE_ARTIFACT)
diff --git a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/SiteXMLAction.java b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/SiteXMLAction.java
index d2561a5..6495f54 100644
--- a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/SiteXMLAction.java
+++ b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/SiteXMLAction.java
@@ -176,7 +176,7 @@ public class SiteXMLAction extends AbstractPublisherAction {
 		URLEntry[] associatedSites = site.getAssociatedSites();
 		if (associatedSites != null)
 			for (int i = 0; i < associatedSites.length; i++)
-				generateSiteReference(associatedSites[i].getURL(), null, info.getMetadataRepository());
+				generateSiteReference(associatedSites[i].getURL(), associatedSites[i].getAnnotation(), null, info.getMetadataRepository());
 
 		File siteFile = URIUtil.toFile(updateSite.getLocation());
 		if (siteFile != null && siteFile.exists()) {
@@ -209,16 +209,17 @@ public class SiteXMLAction extends AbstractPublisherAction {
 	/**
 	 * Generates and publishes a reference to an update site location
 	 * @param location The update site location
+	 * @param label The update site label
 	 * @param featureId the identifier of the feature where the error occurred, or null
 	 * @param metadataRepo The repository into which the references are added
 	 */
-	private void generateSiteReference(String location, String featureId, IMetadataRepository metadataRepo) {
+	private void generateSiteReference(String location, String label, String featureId, IMetadataRepository metadataRepo) {
 		if (metadataRepo == null)
 			return;
 		try {
 			URI associateLocation = new URI(location);
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_METADATA, IRepository.ENABLED);
-			metadataRepo.addReference(associateLocation, IRepository.TYPE_ARTIFACT, IRepository.ENABLED);
+			metadataRepo.addReference(associateLocation, label, IRepository.TYPE_METADATA, IRepository.ENABLED);
+			metadataRepo.addReference(associateLocation, label, IRepository.TYPE_ARTIFACT, IRepository.ENABLED);
 		} catch (URISyntaxException e) {
 			String message = "Invalid site reference: " + location; //$NON-NLS-1$
 			if (featureId != null)
diff --git a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
index 94d9b2d..4ae2a1b 100644
--- a/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
+++ b/bundles/org.eclipse.equinox.p2.updatesite/src/org/eclipse/equinox/internal/p2/updatesite/metadata/UpdateSiteMetadataRepository.java
@@ -35,7 +35,7 @@ public class UpdateSiteMetadataRepository implements IMetadataRepository {
 		throw new UnsupportedOperationException("Repository not modifiable: " + location); //$NON-NLS-1$
 	}
 
-	public void addReference(URI location, int type, int options) {
+	public void addReference(URI location, String nickname, int type, int options) {
 		throw new UnsupportedOperationException("Repository not modifiable: " + location); //$NON-NLS-1$
 	}
 
