commit e7fd1623a5596e7245a99659b1dc74f290bb759f
Author: Susan Franklin <sfranklin>
Date:   Wed Apr 9 21:00:51 2008 +0000

    Bug 223447 - [ui] check for update button disabled after click and unclick

3	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
23	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
3	4	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
2	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
6	5	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
index c02d6fe..4b687a1 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/InstallAction.java
@@ -36,13 +36,12 @@ public class InstallAction extends ProfileModificationAction {
 	}
 
 	/*
-	 * (non-Javadoc)
-	 * @see org.eclipse.ui.actions.SelectionProviderAction#selectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
-	 *
 	 *  Overridden to enable only on selections with IU's.  Does not validate
 	 *  whether the IU is already installed in a particular profile.
+	 * (non-Javadoc)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.actions.ProvisioningAction#structuredSelectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
 	 */
-	public void selectionChanged(IStructuredSelection selection) {
+	protected void structuredSelectionChanged(IStructuredSelection selection) {
 		Object[] selectionArray = selection.toArray();
 		if (selectionArray.length < 1) {
 			setEnabled(false);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
index f26dc1c..6e508e6 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/ProvisioningAction.java
@@ -37,4 +37,27 @@ public abstract class ProvisioningAction extends SelectionProviderAction {
 			return PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
 		return shell;
 	}
+
+	/*
+	 * Overridden to use the selection from the selection provider, not the one
+	 * from the triggering event.  Some selection providers reinterpret the raw selections
+	 * (non-Javadoc)
+	 * @see org.eclipse.ui.actions.SelectionProviderAction#selectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
+	 */
+	public final void selectionChanged(IStructuredSelection selection) {
+		ISelection providerSelection = getSelectionProvider().getSelection();
+		if (providerSelection instanceof IStructuredSelection) {
+			structuredSelectionChanged((IStructuredSelection) providerSelection);
+		} else {
+			// shouldn't really happen, but a provider could decide to de-structure the selection
+			selectionChanged(providerSelection);
+		}
+	}
+
+	/*
+	 * Hook in subclasses.
+	 */
+	protected void structuredSelectionChanged(IStructuredSelection selection) {
+		// Default is do nothing.
+	}
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
index 1d8288b..808fe16 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/RevertAction.java
@@ -43,12 +43,11 @@ public class RevertAction extends ProfileModificationAction {
 	}
 
 	/*
-	 * (non-Javadoc)
-	 * @see org.eclipse.ui.actions.SelectionProviderAction#selectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
-	 *
 	 *  Overridden to enable only on single selections with a profile IU.
+	 * (non-Javadoc)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.actions.ProvisioningAction#structuredSelectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
 	 */
-	public void selectionChanged(IStructuredSelection selection) {
+	protected void structuredSelectionChanged(IStructuredSelection selection) {
 		Object[] selectionArray = selection.toArray();
 		if (selectionArray.length == 1) {
 			IInstallableUnit iu = getIU(selectionArray[0]);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
index a875c34..cb1ea53 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UninstallAction.java
@@ -38,11 +38,10 @@ public class UninstallAction extends ProfileModificationAction {
 
 	/*
 	 * (non-Javadoc)
-	 * @see org.eclipse.ui.actions.SelectionProviderAction#selectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
-	 *
 	 *  Overridden to enable only on selections of installed IU's with the same parent
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.actions.ProvisioningAction#structuredSelectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
 	 */
-	public void selectionChanged(IStructuredSelection selection) {
+	protected void structuredSelectionChanged(IStructuredSelection selection) {
 		Object[] selectionArray = selection.toArray();
 		Object parent = null;
 		if (selectionArray.length > 0) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
index c096bf0..6a2adad 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/actions/UpdateAction.java
@@ -100,13 +100,14 @@ public class UpdateAction extends ProfileModificationAction {
 	}
 
 	/*
-	 * (non-Javadoc)
-	 * @see org.eclipse.ui.actions.SelectionProviderAction#selectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
-	 *
 	 *  Overridden to enable only on selections of installed IU's with the same parent
+	 * (non-Javadoc)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.actions.ProvisioningAction#structuredSelectionChanged(org.eclipse.jface.viewers.IStructuredSelection)
 	 */
-	public void selectionChanged(IStructuredSelection selection) {
-		Object[] selectionArray = selection.toArray();
+	protected void structuredSelectionChanged(IStructuredSelection selection) {
+		// Check the selection of the selection provider, not this one.
+		// This is a bit of a cheat...we know that some client selection providers are reinterpreting the selection.
+		Object[] selectionArray = getStructuredSelection().toArray();
 		Object parent = null;
 		if (selectionArray.length > 0) {
 			setEnabled(true);
