commit a5f13a01d0033f69e5b1ada84eb4ba51951e454b
Author: Susan Franklin <sfranklin>
Date:   Tue Nov 27 21:18:58 2007 +0000

    Bug 210585 - [prov] [ui] parent dialogue should repaint itself (I think)

1	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/ProfileModificationAction.java
11	10	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
30	9	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
20	35	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/ProfileModificationAction.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/ProfileModificationAction.java
index e16416f..b0cf790 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/ProfileModificationAction.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/actions/ProfileModificationAction.java
@@ -66,7 +66,7 @@ abstract class ProfileModificationAction extends ProvisioningAction {
 			}
 		};
 		try {
-			new ProgressMonitorDialog(getShell()).run(false, true, runnable);
+			new ProgressMonitorDialog(getShell()).run(true, true, runnable);
 		} catch (InterruptedException e) {
 			// don't report thread interruption
 		} catch (InvocationTargetException e) {
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
index f37e909..16cd27a 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
@@ -10,16 +10,15 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.dialogs;
 
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
 import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.engine.phases.Sizing;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.*;
 import org.eclipse.swt.widgets.Shell;
 
@@ -33,14 +32,16 @@ public class InstallDialog extends UpdateInstallDialog {
 		return ProvUIMessages.InstallIUOperationLabelWithMnemonic;
 	}
 
-	protected long getSize(IInstallableUnit iu) {
+	protected long getSize(IInstallableUnit iu, IProgressMonitor monitor) {
 		long size;
+		SubMonitor sub = SubMonitor.convert(monitor);
+		sub.setWorkRemaining(100);
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {iu}, profile, new NullProgressMonitor());
-			Sizing info = ProvisioningUtil.getSizeInfo(plan, profile, new NullProgressMonitor());
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(new IInstallableUnit[] {iu}, profile, sub.newChild(50));
+			Sizing info = ProvisioningUtil.getSizeInfo(plan, profile, sub.newChild(50));
 			size = info.getDiskSize();
 		} catch (ProvisionException e) {
-			size = AvailableIUElement.SIZE_UNKNOWN;
+			size = IUElement.SIZE_UNKNOWN;
 		}
 		return size;
 	}
@@ -51,11 +52,11 @@ public class InstallDialog extends UpdateInstallDialog {
 
 	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements) {
 		try {
-			IInstallableUnit[] ius = elementsToIUs(selectedElements);
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(ius, profile, null);
+			IInstallableUnit[] selected = elementsToIUs(selectedElements);
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(selected, profile, null);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
-				return new InstallOperation(getOperationLabel(), profile.getProfileId(), plan, ius);
+				return new InstallOperation(getOperationLabel(), profile.getProfileId(), plan, selected);
 			ProvUI.reportStatus(status);
 		} catch (ProvisionException e) {
 			ProvUI.handleException(e, null);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
index fdd179d..c61e32f 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
@@ -10,6 +10,11 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.dialogs;
 
+import java.lang.reflect.InvocationTargetException;
+import java.util.ArrayList;
+import java.util.List;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.SubMonitor;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement;
 import org.eclipse.equinox.internal.p2.ui.model.StaticContentProvider;
@@ -17,17 +22,20 @@ import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvisioningOperationRunner;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
 import org.eclipse.equinox.p2.ui.viewers.IUColumnConfig;
 import org.eclipse.equinox.p2.ui.viewers.IUDetailsLabelProvider;
 import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.jface.viewers.CheckboxTableViewer;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.PlatformUI;
 
 abstract class ProfileModificationDialog extends TrayDialog {
 	private static final int DEFAULT_HEIGHT = 20;
@@ -36,14 +44,13 @@ abstract class ProfileModificationDialog extends TrayDialog {
 	private static final int DEFAULT_SMALL_COLUMN_WIDTH = 20;
 	private String title;
 	private String message;
-	private IInstallableUnit[] ius;
+	IInstallableUnit[] ius;
 	Profile profile;
 	CheckboxTableViewer listViewer;
 	StaticContentProvider contentProvider;
 
 	ProfileModificationDialog(Shell parentShell, IInstallableUnit[] ius, Profile profile, String title, String message) {
 		super(parentShell);
-		this.setBlockOnOpen(false);
 		this.title = title;
 		this.message = message;
 		this.ius = ius;
@@ -77,7 +84,20 @@ abstract class ProfileModificationDialog extends TrayDialog {
 			} else
 				tc.setWidth(convertWidthInCharsToPixels(DEFAULT_COLUMN_WIDTH));
 		}
-		contentProvider = new StaticContentProvider(makeElements(ius));
+		final List list = new ArrayList(ius.length);
+		IRunnableWithProgress runnable = new IRunnableWithProgress() {
+			public void run(IProgressMonitor monitor) {
+				makeElements(ius, list, monitor);
+			}
+		};
+		try {
+			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
+		} catch (InterruptedException e) {
+			// don't report thread interruption
+		} catch (InvocationTargetException e) {
+			ProvUI.handleException(e.getCause(), null);
+		}
+		contentProvider = new StaticContentProvider(list.toArray());
 		listViewer.setContentProvider(contentProvider);
 		listViewer.setInput(new Object());
 		listViewer.setLabelProvider(new IUDetailsLabelProvider(getColumnConfig()));
@@ -88,12 +108,13 @@ abstract class ProfileModificationDialog extends TrayDialog {
 		return composite;
 	}
 
-	protected AvailableIUElement[] makeElements(IInstallableUnit[] iusToShow) {
-		AvailableIUElement[] elements = new AvailableIUElement[iusToShow.length];
+	protected void makeElements(IInstallableUnit[] iusToShow, List list, IProgressMonitor monitor) {
+		SubMonitor sub = SubMonitor.convert(monitor);
+		sub.setWorkRemaining(iusToShow.length);
 		for (int i = 0; i < iusToShow.length; i++) {
-			elements[i] = new AvailableIUElement(iusToShow[i], getSize(iusToShow[i]));
+			list.add(new AvailableIUElement(iusToShow[i], getSize(iusToShow[i], sub.newChild(1))));
 		}
-		return elements;
+		monitor.done();
 	}
 
 	/*
@@ -171,7 +192,7 @@ abstract class ProfileModificationDialog extends TrayDialog {
 		return ProvUI.getIUColumnConfig();
 	}
 
-	protected long getSize(IInstallableUnit iu) {
-		return AvailableIUElement.SIZE_UNKNOWN;
+	protected long getSize(IInstallableUnit iu, IProgressMonitor monitor) {
+		return IUElement.SIZE_UNKNOWN;
 	}
 }
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
index dc3850f..5a838b3 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
@@ -10,11 +10,9 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.dialogs;
 
-import java.lang.reflect.InvocationTargetException;
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement;
 import org.eclipse.equinox.internal.p2.ui.model.AvailableUpdateElement;
 import org.eclipse.equinox.p2.core.ProvisionException;
 import org.eclipse.equinox.p2.director.ProvisioningPlan;
@@ -22,10 +20,9 @@ import org.eclipse.equinox.p2.engine.Profile;
 import org.eclipse.equinox.p2.engine.phases.Sizing;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.equinox.p2.ui.operations.ProfileModificationOperation;
 import org.eclipse.equinox.p2.ui.operations.ProvisioningUtil;
-import org.eclipse.jface.dialogs.ProgressMonitorDialog;
-import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.swt.widgets.Shell;
 
 public class UpdateDialog extends UpdateInstallDialog {
@@ -38,39 +35,25 @@ public class UpdateDialog extends UpdateInstallDialog {
 		return ProvUIMessages.UpdateIUOperationLabelWithMnemonic;
 	}
 
-	protected AvailableIUElement[] makeElements(final IInstallableUnit[] ius) {
-		final List elements = new ArrayList();
-
-		IRunnableWithProgress runnable = new IRunnableWithProgress() {
-			public void run(IProgressMonitor monitor) {
-				monitor.beginTask(ProvUIMessages.UpdateDialog_AssemblingUpdatesProgress, ius.length);
-				for (int i = 0; i < ius.length; i++) {
+	protected void makeElements(IInstallableUnit[] ius, List elements, IProgressMonitor monitor) {
+		SubMonitor sub = SubMonitor.convert(monitor);
+		sub.setWorkRemaining(ius.length * 2);
+		for (int i = 0; i < ius.length; i++) {
+			if (monitor.isCanceled())
+				close();
+			try {
+				IInstallableUnit[] replacementIUs = ProvisioningUtil.updatesFor(new IInstallableUnit[] {ius[i]}, sub.newChild(1));
+				SubMonitor loopMonitor = sub.newChild(1);
+				loopMonitor.setWorkRemaining(replacementIUs.length);
+				for (int j = 0; j < replacementIUs.length; j++) {
+					elements.add(new AvailableUpdateElement(replacementIUs[j], getSize(ius[i], replacementIUs[j], loopMonitor.newChild(1)), ius[i]));
 					if (monitor.isCanceled())
 						close();
-					try {
-						IInstallableUnit[] replacementIUs = ProvisioningUtil.updatesFor(new IInstallableUnit[] {ius[i]}, null);
-						SubMonitor loopMonitor = SubMonitor.convert(monitor, 100 / ius.length);
-						loopMonitor.setWorkRemaining(replacementIUs.length);
-						for (int j = 0; j < replacementIUs.length; j++) {
-							elements.add(new AvailableUpdateElement(replacementIUs[j], getSize(ius[i], replacementIUs[j], loopMonitor.newChild(1)), ius[i]));
-							if (monitor.isCanceled())
-								close();
-						}
-					} catch (ProvisionException e) {
-						break;
-					}
 				}
+			} catch (ProvisionException e) {
+				break;
 			}
-		};
-
-		try {
-			new ProgressMonitorDialog(getShell()).run(false, true, runnable);
-		} catch (InterruptedException e) {
-			// don't report thread interruption
-		} catch (InvocationTargetException e) {
-			ProvUI.handleException(e.getCause(), null);
 		}
-		return (AvailableIUElement[]) elements.toArray(new AvailableIUElement[elements.size()]);
 	}
 
 	private IInstallableUnit[] getIUsToReplace(Object[] replacementElements) {
@@ -85,12 +68,14 @@ public class UpdateDialog extends UpdateInstallDialog {
 
 	protected long getSize(IInstallableUnit iuToRemove, IInstallableUnit iuToAdd, IProgressMonitor monitor) {
 		long size;
+		SubMonitor sub = SubMonitor.convert(monitor);
+		sub.setWorkRemaining(100);
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(new IInstallableUnit[] {iuToRemove}, new IInstallableUnit[] {iuToAdd}, profile, monitor);
-			Sizing info = ProvisioningUtil.getSizeInfo(plan, profile, monitor);
+			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(new IInstallableUnit[] {iuToRemove}, new IInstallableUnit[] {iuToAdd}, profile, sub.newChild(50));
+			Sizing info = ProvisioningUtil.getSizeInfo(plan, profile, sub.newChild(50));
 			size = info.getDiskSize();
 		} catch (ProvisionException e) {
-			size = AvailableIUElement.SIZE_UNKNOWN;
+			size = IUElement.SIZE_UNKNOWN;
 		}
 		return size;
 	}
commit 177bec4394895baac501dde7d202fd70e324e62c
Author: Susan Franklin <sfranklin>
Date:   Thu Nov 29 23:57:54 2007 +0000

    Bug 210585 - [prov] [ui] parent dialogue should repaint itself (I think)

2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
17	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
3	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallDialog.java
2	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
index 80ce39b..00d25d7 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/InstallDialog.java
@@ -53,10 +53,10 @@ public class InstallDialog extends UpdateInstallDialog {
 		return ProvUIMessages.InstallIUOperationLabel;
 	}
 
-	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements) {
+	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
 			IInstallableUnit[] selected = elementsToIUs(selectedElements);
-			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(selected, profile, null);
+			ProvisioningPlan plan = ProvisioningUtil.getInstallPlan(selected, profile, monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
 				return new InstallOperation(getOperationLabel(), profile.getProfileId(), plan, selected);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
index c61e32f..66d2821 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/ProfileModificationDialog.java
@@ -168,11 +168,25 @@ abstract class ProfileModificationDialog extends TrayDialog {
 	}
 
 	protected void okPressed() {
-		ProvisioningOperationRunner.schedule(createProfileModificationOperation(getSelectedElements()), getShell());
+
+		final ProfileModificationOperation[] op = new ProfileModificationOperation[1];
+		try {
+			final Object[] selections = getSelectedElements();
+			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new IRunnableWithProgress() {
+				public void run(IProgressMonitor monitor) {
+					op[0] = createProfileModificationOperation(selections, monitor);
+				}
+			});
+			ProvisioningOperationRunner.schedule(op[0], getShell());
+		} catch (InterruptedException e) {
+			// don't report thread interruption
+		} catch (InvocationTargetException e) {
+			ProvUI.handleException(e.getCause(), null);
+		}
 		super.okPressed();
 	}
 
-	private Object[] getSelectedElements() {
+	Object[] getSelectedElements() {
 		return listViewer.getCheckedElements();
 	}
 
@@ -184,7 +198,7 @@ abstract class ProfileModificationDialog extends TrayDialog {
 		return theIUs;
 	}
 
-	protected abstract ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements);
+	protected abstract ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor);
 
 	protected abstract String getOkButtonString();
 
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallDialog.java
index d8b9f98..71eb3f4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UninstallDialog.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.ui.dialogs;
 
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.p2.core.ProvisionException;
@@ -27,9 +28,9 @@ public class UninstallDialog extends ProfileModificationDialog {
 		super(parentShell, ius, profile, ProvUIMessages.UninstallIUOperationLabel, ProvUIMessages.UninstallDialog_UninstallMessage);
 	}
 
-	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements) {
+	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(elementsToIUs(selectedElements), profile, null);
+			ProvisioningPlan plan = ProvisioningUtil.getUninstallPlan(elementsToIUs(selectedElements), profile, monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
 				return new ProfileModificationOperation(ProvUIMessages.UninstallIUOperationLabel, profile.getProfileId(), plan);
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
index 5a838b3..cb6ef27 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/dialogs/UpdateDialog.java
@@ -84,9 +84,9 @@ public class UpdateDialog extends UpdateInstallDialog {
 		return ProvUIMessages.UpdateIUOperationLabel;
 	}
 
-	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements) {
+	protected ProfileModificationOperation createProfileModificationOperation(Object[] selectedElements, IProgressMonitor monitor) {
 		try {
-			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(getIUsToReplace(selectedElements), elementsToIUs(selectedElements), profile, null);
+			ProvisioningPlan plan = ProvisioningUtil.getReplacePlan(getIUsToReplace(selectedElements), elementsToIUs(selectedElements), profile, monitor);
 			IStatus status = plan.getStatus();
 			if (status.isOK())
 				return new ProfileModificationOperation(getOperationLabel(), profile.getProfileId(), plan);
