commit 37db792e9942a0a31fc4ef4889b87911a0fe1f53
Author: Susan Franklin <sfranklin>
Date:   Tue Nov 27 17:44:44 2007 +0000

    Bug 210986 - [prov] [ui] Install size missing

14	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
13	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/CategoryElement.java
31	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUElement.java
13	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUVersionsElement.java
15	1	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
12	16	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/IUDetailsLabelProvider.java
5	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
index 382a82a..bde4f36 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/model/AvailableIUElement.java
@@ -12,6 +12,7 @@ package org.eclipse.equinox.internal.p2.ui.model;
 
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 
 /**
  * Element wrapper class for IU's that are available for installation.
@@ -20,9 +21,8 @@ import org.eclipse.equinox.p2.ui.ProvUIImages;
  * 
  * @since 3.4
  */
-public class AvailableIUElement extends ProvElement {
+public class AvailableIUElement extends ProvElement implements IUElement {
 
-	public static final long SIZE_UNKNOWN = -1;
 	long size;
 	IInstallableUnit iu;
 
@@ -65,4 +65,16 @@ public class AvailableIUElement extends ProvElement {
 	public long getSize() {
 		return size;
 	}
+
+	public IInstallableUnit getIU() {
+		return iu;
+	}
+
+	public boolean shouldShowSize() {
+		return true;
+	}
+
+	public boolean shouldShowVersion() {
+		return true;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/CategoryElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/CategoryElement.java
index f030dcb..46000c3 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/CategoryElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/CategoryElement.java
@@ -21,7 +21,7 @@ import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
  * 
  * @since 3.4
  */
-public class CategoryElement extends RemoteQueriedElement {
+public class CategoryElement extends RemoteQueriedElement implements IUElement {
 
 	private IInstallableUnit iu;
 
@@ -56,4 +56,16 @@ public class CategoryElement extends RemoteQueriedElement {
 		return iu;
 	}
 
+	public long getSize() {
+		return SIZE_UNKNOWN;
+	}
+
+	public boolean shouldShowSize() {
+		return false;
+	}
+
+	public boolean shouldShowVersion() {
+		return false;
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUElement.java
new file mode 100644
index 0000000..6f3bad7
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUElement.java
@@ -0,0 +1,31 @@
+/*******************************************************************************
+ * Copyright (c) 2007 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.p2.ui.model;
+
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+
+/**
+ * Interface for elements that represent IU's.
+ * 
+ * @since 3.4
+ */
+public interface IUElement {
+
+	public static final long SIZE_UNKNOWN = -1L;
+
+	public IInstallableUnit getIU();
+
+	public boolean shouldShowSize();
+
+	public boolean shouldShowVersion();
+
+	public long getSize();
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUVersionsElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUVersionsElement.java
index f5bd2e2..c5175fd 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUVersionsElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/IUVersionsElement.java
@@ -21,7 +21,7 @@ import org.eclipse.equinox.p2.ui.query.IProvElementQueryProvider;
  * 
  * @since 3.4
  */
-public class IUVersionsElement extends CachedQueryElement {
+public class IUVersionsElement extends CachedQueryElement implements IUElement {
 
 	IInstallableUnit iu;
 
@@ -54,4 +54,16 @@ public class IUVersionsElement extends CachedQueryElement {
 	protected int getQueryType() {
 		return IProvElementQueryProvider.AVAILABLE_IUS;
 	}
+
+	public long getSize() {
+		return SIZE_UNKNOWN;
+	}
+
+	public boolean shouldShowSize() {
+		return false;
+	}
+
+	public boolean shouldShowVersion() {
+		return true;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
index 96195bd..fde4331 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/model/InstalledIUElement.java
@@ -21,7 +21,7 @@ import org.eclipse.equinox.p2.ui.ProvUIImages;
  * 
  * @since 3.4
  */
-public class InstalledIUElement extends ProvElement {
+public class InstalledIUElement extends ProvElement implements IUElement {
 
 	Profile parent;
 	IInstallableUnit iu;
@@ -70,4 +70,18 @@ public class InstalledIUElement extends ProvElement {
 	public IInstallableUnit getIU() {
 		return iu;
 	}
+
+	// TODO Later we might consider showing this in the installed views,
+	// but it is less important than before install.
+	public long getSize() {
+		return SIZE_UNKNOWN;
+	}
+
+	public boolean shouldShowSize() {
+		return false;
+	}
+
+	public boolean shouldShowVersion() {
+		return true;
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/IUDetailsLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/IUDetailsLabelProvider.java
index d42e008..7a6eb19 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/IUDetailsLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/IUDetailsLabelProvider.java
@@ -14,12 +14,11 @@ package org.eclipse.equinox.p2.ui.viewers;
 import java.text.NumberFormat;
 import org.eclipse.core.runtime.Assert;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.p2.ui.model.AvailableIUElement;
 import org.eclipse.equinox.internal.p2.ui.model.ProvElement;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
-import org.eclipse.equinox.p2.ui.model.CategoryElement;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.jface.viewers.ColumnLabelProvider;
 import org.eclipse.jface.viewers.ITableLabelProvider;
 import org.eclipse.osgi.util.NLS;
@@ -69,20 +68,19 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 			case IUColumnConfig.COLUMN_ID :
 				return iu.getId();
 			case IUColumnConfig.COLUMN_NAME :
-				if (element instanceof CategoryElement) {
-					return iu.getId();
-				}
 				String name = iu.getProperty(IInstallableUnit.PROP_NAME);
 				if (name != null)
 					return name;
 				return BLANK;
 			case IUColumnConfig.COLUMN_VERSION :
-				if (element instanceof CategoryElement)
-					return BLANK;
-				return iu.getVersion().toString();
+				if (element instanceof IUElement && ((IUElement) element).shouldShowVersion())
+					return iu.getVersion().toString();
+				return BLANK;
+
 			case IUColumnConfig.COLUMN_SIZE :
-				if (element instanceof CategoryElement)
-					return getIUSize(element);
+				if (element instanceof IUElement && ((IUElement) element).shouldShowSize())
+					return getIUSize((IUElement) element);
+				return BLANK;
 		}
 		return BLANK;
 	}
@@ -97,12 +95,10 @@ public class IUDetailsLabelProvider extends ColumnLabelProvider implements ITabl
 		return null;
 	}
 
-	private String getIUSize(Object element) {
-		if (element instanceof AvailableIUElement) {
-			long size = ((AvailableIUElement) element).getSize();
-			if (size != AvailableIUElement.SIZE_UNKNOWN) {
-				return getFormattedSize(size);
-			}
+	private String getIUSize(IUElement element) {
+		long size = element.getSize();
+		if (size != IUElement.SIZE_UNKNOWN) {
+			return getFormattedSize(size);
 		}
 		return ProvUIMessages.IUDetailsLabelProvider_Unknown;
 	}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
index d597351..031c66f 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/p2/ui/viewers/ProvElementLabelProvider.java
@@ -21,7 +21,7 @@ import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.metadata.repository.IMetadataRepository;
 import org.eclipse.equinox.p2.ui.ProvUI;
 import org.eclipse.equinox.p2.ui.ProvUIImages;
-import org.eclipse.equinox.p2.ui.model.CategoryElement;
+import org.eclipse.equinox.p2.ui.model.IUElement;
 import org.eclipse.jface.viewers.ITableLabelProvider;
 import org.eclipse.jface.viewers.LabelProvider;
 import org.eclipse.swt.graphics.Image;
@@ -109,8 +109,10 @@ public class ProvElementLabelProvider extends LabelProvider implements ITableLab
 				if (element instanceof Profile) {
 					return ((Profile) element).getValue(Profile.PROP_NAME);
 				}
-				if (element instanceof CategoryElement)
-					return null;
+				if (element instanceof IUElement) {
+					if (((IUElement) element).shouldShowVersion())
+						return ((IUElement) element).getIU().getVersion().toString();
+				}
 				IInstallableUnit iu = (IInstallableUnit) ProvUI.getAdapter(element, IInstallableUnit.class);
 				if (iu != null) {
 					return iu.getVersion().toString();
