commit 7ac8d965856b8c3c7cee1a5f857d197475e618fd
Author: Simon Kaegi <skaegi>
Date:   Wed Feb 24 21:34:17 2010 +0000

    Bug 297259 - [Engine][API] Cleanup events

0	11	bundles/org.eclipse.equinox.p2.engine/.settings/.api_filters
2	1	bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
27	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/BeginOperationEvent.java
27	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/CommitOperationEvent.java
33	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ISurrogateProfileHandler.java
91	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstallableUnitEvent.java
0	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
49	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingAction.java
52	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingActionsException.java
0	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Profile.java
44	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ProfileEvent.java
34	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/RollbackOperationEvent.java
5	3	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java
0	1	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler.java
37	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/TransactionEvent.java
2	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Install.java
2	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Uninstall.java
0	27	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/BeginOperationEvent.java
0	27	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/CommitOperationEvent.java
13	0	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/IProfileEvent.java
0	31	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ISurrogateProfileHandler.java
0	90	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/InstallableUnitEvent.java
0	50	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingAction.java
0	53	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingActionsException.java
0	40	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ProfileEvent.java
0	34	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/RollbackOperationEvent.java
0	37	bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/TransactionEvent.java
5	0	bundles/org.eclipse.equinox.p2.garbagecollector/src/org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector.java
2	0	bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/ProfileTest.java
5	3	bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/src/org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdater.java
7	6	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIProvisioningListener.java
diff --git a/bundles/org.eclipse.equinox.p2.engine/.settings/.api_filters b/bundles/org.eclipse.equinox.p2.engine/.settings/.api_filters
deleted file mode 100644
index 5cac838..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/.settings/.api_filters
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<component id="org.eclipse.equinox.p2.engine" version="2">
-    <resource path="src/org/eclipse/equinox/p2/engine/MissingActionsException.java" type="org.eclipse.equinox.p2.engine.MissingActionsException">
-        <filter id="576720909">
-            <message_arguments>
-                <message_argument value="ProvisionException"/>
-                <message_argument value="MissingActionsException"/>
-            </message_arguments>
-        </filter>
-    </resource>
-</component>
diff --git a/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF b/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
index f38a9f3..69a1071 100644
--- a/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
+++ b/bundles/org.eclipse.equinox.p2.engine/META-INF/MANIFEST.MF
@@ -7,7 +7,8 @@ Bundle-Activator: org.eclipse.equinox.internal.p2.engine.EngineActivator
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Export-Package: org.eclipse.equinox.internal.p2.engine;
-  x-friends:="org.eclipse.equinox.p2.touchpoint.eclipse,
+  x-friends:="org.eclipse.equinox.p2.garbagecollector,
+   org.eclipse.equinox.p2.touchpoint.eclipse,
    org.eclipse.equinox.p2.touchpoint.natives,
    org.eclipse.equinox.p2.ui.sdk.scheduler,
    org.eclipse.pde.build",
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/BeginOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/BeginOperationEvent.java
new file mode 100644
index 0000000..e22bff6
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/BeginOperationEvent.java
@@ -0,0 +1,27 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IEngine;
+import org.eclipse.equinox.p2.engine.IProfile;
+
+
+/**
+ * @since 2.0
+ */
+public class BeginOperationEvent extends TransactionEvent {
+
+	private static final long serialVersionUID = 6389318375739324865L;
+
+	public BeginOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
+		super(profile, phaseSet, operands, engine);
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/CommitOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/CommitOperationEvent.java
new file mode 100644
index 0000000..deb496f
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/CommitOperationEvent.java
@@ -0,0 +1,27 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IEngine;
+import org.eclipse.equinox.p2.engine.IProfile;
+
+
+/**
+ * @since 2.0
+ */
+public class CommitOperationEvent extends TransactionEvent {
+	private static final long serialVersionUID = -523967775426133720L;
+
+	public CommitOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
+		super(profile, phaseSet, operands, engine);
+	}
+
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ISurrogateProfileHandler.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ISurrogateProfileHandler.java
new file mode 100644
index 0000000..e3c55af
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ISurrogateProfileHandler.java
@@ -0,0 +1,33 @@
+/*******************************************************************************
+ *  Copyright (c) 2008 IBM Corporation and others.
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  which accompanies this distribution, and is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ * 
+ *  Contributors:
+ *      IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IProfile;
+
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.equinox.p2.query.IQuery;
+import org.eclipse.equinox.p2.query.IQueryResult;
+
+/**
+ * @since 2.0
+ */
+public interface ISurrogateProfileHandler {
+
+	public abstract IProfile createProfile(String id);
+
+	public abstract boolean isSurrogate(IProfile profile);
+
+	public abstract IQueryResult<IInstallableUnit> queryProfile(IProfile profile, IQuery<IInstallableUnit> query, IProgressMonitor monitor);
+
+	public abstract boolean updateProfile(IProfile selfProfile);
+
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstallableUnitEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstallableUnitEvent.java
new file mode 100644
index 0000000..2488c5c
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstallableUnitEvent.java
@@ -0,0 +1,91 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IProfile;
+
+import java.util.EventObject;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.equinox.p2.engine.spi.Touchpoint;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+
+/**
+ * @since 2.0
+ */
+public class InstallableUnitEvent extends EventObject {
+	public static final int UNINSTALL = 0;
+	public static final int INSTALL = 1;
+	private static final long serialVersionUID = 3318712818811459886L;
+
+	private String phaseId;
+	private boolean prePhase;
+
+	private IProfile profile;
+	private IInstallableUnit iu;
+	private Touchpoint touchpoint;
+	private IStatus result;
+	private int type;
+
+	public InstallableUnitEvent(String phaseId, boolean prePhase, IProfile profile, IInstallableUnit iu, int type, Touchpoint touchpoint) {
+		this(phaseId, prePhase, profile, iu, type, touchpoint, null);
+	}
+
+	public InstallableUnitEvent(String phaseId, boolean prePhase, IProfile profile, IInstallableUnit iu, int type, Touchpoint touchpoint, IStatus result) {
+		super(profile);
+		this.phaseId = phaseId;
+		this.prePhase = prePhase;
+		this.profile = profile;
+		this.iu = iu;
+		if (type != UNINSTALL && type != INSTALL)
+			throw new IllegalArgumentException(Messages.InstallableUnitEvent_type_not_install_or_uninstall);
+		this.type = type;
+		this.result = result;
+		this.touchpoint = touchpoint;
+
+	}
+
+	public Touchpoint getTouchpoint() {
+		return touchpoint;
+	}
+
+	public IProfile getProfile() {
+		return profile;
+	}
+
+	public IInstallableUnit getInstallableUnit() {
+		return iu;
+	}
+
+	public String getPhase() {
+		return phaseId;
+	}
+
+	public boolean isPre() {
+		return prePhase;
+	}
+
+	public boolean isPost() {
+		return !prePhase;
+	}
+
+	public IStatus getResult() {
+		return (result != null ? result : Status.OK_STATUS);
+	}
+
+	public boolean isInstall() {
+		return type == INSTALL;
+	}
+
+	public boolean isUninstall() {
+		return type == UNINSTALL;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
index c84dd47..ae44c39 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/InstructionParser.java
@@ -13,7 +13,6 @@ package org.eclipse.equinox.internal.p2.engine;
 import java.util.*;
 import org.eclipse.core.runtime.Assert;
 import org.eclipse.equinox.internal.p2.core.helpers.CollectionUtils;
-import org.eclipse.equinox.p2.engine.MissingAction;
 import org.eclipse.equinox.p2.engine.spi.ProvisioningAction;
 import org.eclipse.equinox.p2.metadata.*;
 import org.eclipse.osgi.util.NLS;
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingAction.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingAction.java
new file mode 100644
index 0000000..2df1952
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingAction.java
@@ -0,0 +1,49 @@
+/*******************************************************************************
+ *  Copyright (c) 2009, 2010 IBM Corporation and others.
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  which accompanies this distribution, and is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ * 
+ *  Contributors:
+ *      IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import java.util.Map;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.equinox.p2.engine.spi.ProvisioningAction;
+import org.eclipse.equinox.p2.metadata.VersionRange;
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * @since 2.0
+ */
+public class MissingAction extends ProvisioningAction {
+
+	private String actionId;
+	private VersionRange versionRange;
+
+	public MissingAction(String actionId, VersionRange versionRange) {
+		this.actionId = actionId;
+		this.versionRange = versionRange;
+	}
+
+	public String getActionId() {
+		return actionId;
+	}
+
+	public VersionRange getVersionRange() {
+		return versionRange;
+	}
+
+	public IStatus execute(Map<String, Object> parameters) {
+		throw new IllegalArgumentException(NLS.bind(Messages.action_not_found, actionId + (versionRange == null ? "" : "/" + versionRange.toString()))); //$NON-NLS-1$ //$NON-NLS-2$
+	}
+
+	public IStatus undo(Map<String, Object> parameters) {
+		// do nothing as we want this action to undo successfully
+		return Status.OK_STATUS;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingActionsException.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingActionsException.java
new file mode 100644
index 0000000..a8ecbd5
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/MissingActionsException.java
@@ -0,0 +1,52 @@
+/*******************************************************************************
+ *  Copyright (c) 2009 IBM Corporation and others.
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  which accompanies this distribution, and is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ * 
+ *  Contributors:
+ *      IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.core.ProvisionException;
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * @since 2.0
+ */
+public class MissingActionsException extends ProvisionException {
+
+	private static final long serialVersionUID = 8617693596359747490L;
+	private final MissingAction[] missingActions;
+
+	public MissingActionsException(MissingAction[] missingActions) {
+		super(getMissingActionsMessage(missingActions));
+		this.missingActions = missingActions;
+	}
+
+	private static String getMissingActionsMessage(MissingAction[] missingActions) {
+
+		if (missingActions.length == 0)
+			throw new IllegalArgumentException("Bad exception: No missing actions"); //$NON-NLS-1$
+
+		StringBuffer buffer = new StringBuffer();
+		for (int i = 0; i < missingActions.length; i++) {
+			MissingAction missingAction = missingActions[i];
+			buffer.append(missingAction.getActionId());
+			if (missingAction.getVersionRange() != null) {
+				buffer.append("/"); //$NON-NLS-1$
+				buffer.append(missingAction.getVersionRange().toString());
+			}
+			if (i + 1 != missingActions.length)
+				buffer.append(", "); //$NON-NLS-1$
+		}
+
+		return NLS.bind(Messages.actions_not_found, buffer.toString());
+	}
+
+	public MissingAction[] getMissingActions() {
+		return missingActions;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Profile.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Profile.java
index 97bf0ea..a5c1995 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Profile.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/Profile.java
@@ -21,7 +21,6 @@ import org.eclipse.equinox.internal.p2.metadata.*;
 import org.eclipse.equinox.internal.p2.metadata.index.*;
 import org.eclipse.equinox.p2.core.IProvisioningAgent;
 import org.eclipse.equinox.p2.engine.IProfile;
-import org.eclipse.equinox.p2.engine.ISurrogateProfileHandler;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
 import org.eclipse.equinox.p2.metadata.KeyWithLocale;
 import org.eclipse.equinox.p2.metadata.expression.IEvaluationContext;
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ProfileEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ProfileEvent.java
new file mode 100644
index 0000000..57e995a
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/ProfileEvent.java
@@ -0,0 +1,44 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IProfileEvent;
+
+import java.util.EventObject;
+
+/**
+ * @noextend This class is not intended to be subclassed by clients.
+ * @since 2.0
+ */
+public class ProfileEvent extends EventObject implements IProfileEvent {
+	private static final long serialVersionUID = 3082402920617281765L;
+
+	private byte reason;
+
+	public ProfileEvent(String profileId, byte reason) {
+		super(profileId);
+		this.reason = reason;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.equinox.p2.engine.IProfileEvent#getReason()
+	 */
+	public byte getReason() {
+		return reason;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.equinox.p2.engine.IProfileEvent#getProfileId()
+	 */
+	public String getProfileId() {
+		return (String) getSource();
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/RollbackOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/RollbackOperationEvent.java
new file mode 100644
index 0000000..50ef2e1
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/RollbackOperationEvent.java
@@ -0,0 +1,34 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IEngine;
+import org.eclipse.equinox.p2.engine.IProfile;
+
+import org.eclipse.core.runtime.IStatus;
+
+/**
+ * @since 2.0
+ */
+public class RollbackOperationEvent extends TransactionEvent {
+
+	private static final long serialVersionUID = -2076492953949691215L;
+	private IStatus cause;
+
+	public RollbackOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine, IStatus cause) {
+		super(profile, phaseSet, operands, engine);
+		this.cause = cause;
+	}
+
+	public IStatus getStatus() {
+		return cause;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java
index 5eaffcc..651a7c6 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SimpleProfileRegistry.java
@@ -8,6 +8,8 @@
  ******************************************************************************/
 package org.eclipse.equinox.internal.p2.engine;
 
+import org.eclipse.equinox.p2.engine.IProfileEvent;
+
 import java.io.*;
 import java.lang.ref.SoftReference;
 import java.net.URI;
@@ -303,7 +305,7 @@ public class SimpleProfileRegistry implements IProfileRegistry, IAgentService {
 		saveProfile(current);
 		profile.clearOrphanedInstallableUnitProperties();
 		profile.setTimestamp(current.getTimestamp());
-		broadcastChangeEvent(id, ProfileEvent.CHANGED);
+		broadcastChangeEvent(id, IProfileEvent.CHANGED);
 	}
 
 	public IProfile addProfile(String id) throws ProvisionException {
@@ -335,7 +337,7 @@ public class SimpleProfileRegistry implements IProfileRegistry, IAgentService {
 			profile.setSurrogateProfileHandler(surrogateProfileHandler);
 		profileMap.put(id, profile);
 		saveProfile(profile);
-		broadcastChangeEvent(id, ProfileEvent.ADDED);
+		broadcastChangeEvent(id, IProfileEvent.ADDED);
 		return profile.snapshot();
 	}
 
@@ -367,7 +369,7 @@ public class SimpleProfileRegistry implements IProfileRegistry, IAgentService {
 		profileMap.remove(profileId);
 		profileLocks.remove(profileId);
 		deleteProfile(profileId);
-		broadcastChangeEvent(profileId, ProfileEvent.REMOVED);
+		broadcastChangeEvent(profileId, IProfileEvent.REMOVED);
 	}
 
 	public synchronized void removeProfile(String id, long timestamp) throws ProvisionException {
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler.java
index eabf211..c7a695e 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/SurrogateProfileHandler.java
@@ -19,7 +19,6 @@ import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.equinox.internal.p2.core.helpers.ServiceHelper;
 import org.eclipse.equinox.p2.core.IProvisioningAgent;
 import org.eclipse.equinox.p2.engine.IProfile;
-import org.eclipse.equinox.p2.engine.ISurrogateProfileHandler;
 import org.eclipse.equinox.p2.engine.query.IUProfilePropertyQuery;
 import org.eclipse.equinox.p2.engine.query.UserVisibleRootQuery;
 import org.eclipse.equinox.p2.metadata.IInstallableUnit;
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/TransactionEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/TransactionEvent.java
new file mode 100644
index 0000000..63ba080
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/TransactionEvent.java
@@ -0,0 +1,37 @@
+/*******************************************************************************
+ * Copyright (c) 2007, 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.equinox.internal.p2.engine;
+
+import org.eclipse.equinox.p2.engine.IEngine;
+import org.eclipse.equinox.p2.engine.IProfile;
+
+import java.util.EventObject;
+
+/**
+ * @since 2.0
+ */
+public abstract class TransactionEvent extends EventObject {
+	private static final long serialVersionUID = 6278706971855493984L;
+	protected IProfile profile;
+	protected PhaseSet phaseSet;
+	protected Operand[] operands;
+
+	public TransactionEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
+		super(engine);
+		this.profile = profile;
+		this.phaseSet = phaseSet;
+		this.operands = operands;
+	}
+
+	public IProfile getProfile() {
+		return profile;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Install.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Install.java
index c48f275..6c33b0a 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Install.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Install.java
@@ -10,6 +10,8 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.engine.phases;
 
+import org.eclipse.equinox.internal.p2.engine.InstallableUnitEvent;
+
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.engine.*;
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Uninstall.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Uninstall.java
index b8c8949..f022c45 100644
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Uninstall.java
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/internal/p2/engine/phases/Uninstall.java
@@ -10,6 +10,8 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.engine.phases;
 
+import org.eclipse.equinox.internal.p2.engine.InstallableUnitEvent;
+
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.engine.*;
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/BeginOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/BeginOperationEvent.java
deleted file mode 100644
index 746932a..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/BeginOperationEvent.java
+++ /dev/null
@@ -1,27 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.equinox.internal.p2.engine.Operand;
-
-import org.eclipse.equinox.internal.p2.engine.PhaseSet;
-
-/**
- * @since 2.0
- */
-public class BeginOperationEvent extends TransactionEvent {
-
-	private static final long serialVersionUID = 6389318375739324865L;
-
-	public BeginOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
-		super(profile, phaseSet, operands, engine);
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/CommitOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/CommitOperationEvent.java
deleted file mode 100644
index f999e79..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/CommitOperationEvent.java
+++ /dev/null
@@ -1,27 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.equinox.internal.p2.engine.Operand;
-
-import org.eclipse.equinox.internal.p2.engine.PhaseSet;
-
-/**
- * @since 2.0
- */
-public class CommitOperationEvent extends TransactionEvent {
-	private static final long serialVersionUID = -523967775426133720L;
-
-	public CommitOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
-		super(profile, phaseSet, operands, engine);
-	}
-
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/IProfileEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/IProfileEvent.java
new file mode 100644
index 0000000..738ce53
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/IProfileEvent.java
@@ -0,0 +1,13 @@
+package org.eclipse.equinox.p2.engine;
+
+public interface IProfileEvent {
+
+	public static final byte ADDED = 0;
+	public static final byte REMOVED = 1;
+	public static final byte CHANGED = 2;
+
+	public byte getReason();
+
+	public String getProfileId();
+
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ISurrogateProfileHandler.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ISurrogateProfileHandler.java
deleted file mode 100644
index 00faa2b..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ISurrogateProfileHandler.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/*******************************************************************************
- *  Copyright (c) 2008 IBM Corporation and others.
- *  All rights reserved. This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License v1.0
- *  which accompanies this distribution, and is available at
- *  http://www.eclipse.org/legal/epl-v10.html
- * 
- *  Contributors:
- *      IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.equinox.p2.query.IQuery;
-import org.eclipse.equinox.p2.query.IQueryResult;
-
-/**
- * @since 2.0
- */
-public interface ISurrogateProfileHandler {
-
-	public abstract IProfile createProfile(String id);
-
-	public abstract boolean isSurrogate(IProfile profile);
-
-	public abstract IQueryResult<IInstallableUnit> queryProfile(IProfile profile, IQuery<IInstallableUnit> query, IProgressMonitor monitor);
-
-	public abstract boolean updateProfile(IProfile selfProfile);
-
-}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/InstallableUnitEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/InstallableUnitEvent.java
deleted file mode 100644
index 2be29b5..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/InstallableUnitEvent.java
+++ /dev/null
@@ -1,90 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import java.util.EventObject;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.equinox.internal.p2.engine.Messages;
-import org.eclipse.equinox.p2.engine.spi.Touchpoint;
-import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-
-/**
- * @since 2.0
- */
-public class InstallableUnitEvent extends EventObject {
-	public static final int UNINSTALL = 0;
-	public static final int INSTALL = 1;
-	private static final long serialVersionUID = 3318712818811459886L;
-
-	private String phaseId;
-	private boolean prePhase;
-
-	private IProfile profile;
-	private IInstallableUnit iu;
-	private Touchpoint touchpoint;
-	private IStatus result;
-	private int type;
-
-	public InstallableUnitEvent(String phaseId, boolean prePhase, IProfile profile, IInstallableUnit iu, int type, Touchpoint touchpoint) {
-		this(phaseId, prePhase, profile, iu, type, touchpoint, null);
-	}
-
-	public InstallableUnitEvent(String phaseId, boolean prePhase, IProfile profile, IInstallableUnit iu, int type, Touchpoint touchpoint, IStatus result) {
-		super(profile);
-		this.phaseId = phaseId;
-		this.prePhase = prePhase;
-		this.profile = profile;
-		this.iu = iu;
-		if (type != UNINSTALL && type != INSTALL)
-			throw new IllegalArgumentException(Messages.InstallableUnitEvent_type_not_install_or_uninstall);
-		this.type = type;
-		this.result = result;
-		this.touchpoint = touchpoint;
-
-	}
-
-	public Touchpoint getTouchpoint() {
-		return touchpoint;
-	}
-
-	public IProfile getProfile() {
-		return profile;
-	}
-
-	public IInstallableUnit getInstallableUnit() {
-		return iu;
-	}
-
-	public String getPhase() {
-		return phaseId;
-	}
-
-	public boolean isPre() {
-		return prePhase;
-	}
-
-	public boolean isPost() {
-		return !prePhase;
-	}
-
-	public IStatus getResult() {
-		return (result != null ? result : Status.OK_STATUS);
-	}
-
-	public boolean isInstall() {
-		return type == INSTALL;
-	}
-
-	public boolean isUninstall() {
-		return type == UNINSTALL;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingAction.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingAction.java
deleted file mode 100644
index b718930..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingAction.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*******************************************************************************
- *  Copyright (c) 2009, 2010 IBM Corporation and others.
- *  All rights reserved. This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License v1.0
- *  which accompanies this distribution, and is available at
- *  http://www.eclipse.org/legal/epl-v10.html
- * 
- *  Contributors:
- *      IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import java.util.Map;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.equinox.internal.p2.engine.Messages;
-import org.eclipse.equinox.p2.engine.spi.ProvisioningAction;
-import org.eclipse.equinox.p2.metadata.VersionRange;
-import org.eclipse.osgi.util.NLS;
-
-/**
- * @since 2.0
- */
-public class MissingAction extends ProvisioningAction {
-
-	private String actionId;
-	private VersionRange versionRange;
-
-	public MissingAction(String actionId, VersionRange versionRange) {
-		this.actionId = actionId;
-		this.versionRange = versionRange;
-	}
-
-	public String getActionId() {
-		return actionId;
-	}
-
-	public VersionRange getVersionRange() {
-		return versionRange;
-	}
-
-	public IStatus execute(Map<String, Object> parameters) {
-		throw new IllegalArgumentException(NLS.bind(Messages.action_not_found, actionId + (versionRange == null ? "" : "/" + versionRange.toString()))); //$NON-NLS-1$ //$NON-NLS-2$
-	}
-
-	public IStatus undo(Map<String, Object> parameters) {
-		// do nothing as we want this action to undo successfully
-		return Status.OK_STATUS;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingActionsException.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingActionsException.java
deleted file mode 100644
index 2385e46..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/MissingActionsException.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*******************************************************************************
- *  Copyright (c) 2009 IBM Corporation and others.
- *  All rights reserved. This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License v1.0
- *  which accompanies this distribution, and is available at
- *  http://www.eclipse.org/legal/epl-v10.html
- * 
- *  Contributors:
- *      IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.equinox.internal.p2.engine.Messages;
-import org.eclipse.equinox.p2.core.ProvisionException;
-import org.eclipse.osgi.util.NLS;
-
-/**
- * @since 2.0
- */
-public class MissingActionsException extends ProvisionException {
-
-	private static final long serialVersionUID = 8617693596359747490L;
-	private final MissingAction[] missingActions;
-
-	public MissingActionsException(MissingAction[] missingActions) {
-		super(getMissingActionsMessage(missingActions));
-		this.missingActions = missingActions;
-	}
-
-	private static String getMissingActionsMessage(MissingAction[] missingActions) {
-
-		if (missingActions.length == 0)
-			throw new IllegalArgumentException("Bad exception: No missing actions"); //$NON-NLS-1$
-
-		StringBuffer buffer = new StringBuffer();
-		for (int i = 0; i < missingActions.length; i++) {
-			MissingAction missingAction = missingActions[i];
-			buffer.append(missingAction.getActionId());
-			if (missingAction.getVersionRange() != null) {
-				buffer.append("/"); //$NON-NLS-1$
-				buffer.append(missingAction.getVersionRange().toString());
-			}
-			if (i + 1 != missingActions.length)
-				buffer.append(", "); //$NON-NLS-1$
-		}
-
-		return NLS.bind(Messages.actions_not_found, buffer.toString());
-	}
-
-	public MissingAction[] getMissingActions() {
-		return missingActions;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ProfileEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ProfileEvent.java
deleted file mode 100644
index 064717d..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/ProfileEvent.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import java.util.EventObject;
-
-/**
- * @noextend This class is not intended to be subclassed by clients.
- * @since 2.0
- */
-public class ProfileEvent extends EventObject {
-	private static final long serialVersionUID = 3082402920617281765L;
-
-	public static final byte ADDED = 0;
-	public static final byte REMOVED = 1;
-	public static final byte CHANGED = 2;
-
-	private byte reason;
-
-	public ProfileEvent(String profileId, byte reason) {
-		super(profileId);
-		this.reason = reason;
-	}
-
-	public byte getReason() {
-		return reason;
-	}
-
-	public String getProfileId() {
-		return (String) getSource();
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/RollbackOperationEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/RollbackOperationEvent.java
deleted file mode 100644
index 824d597..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/RollbackOperationEvent.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.equinox.internal.p2.engine.Operand;
-
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.equinox.internal.p2.engine.PhaseSet;
-
-/**
- * @since 2.0
- */
-public class RollbackOperationEvent extends TransactionEvent {
-
-	private static final long serialVersionUID = -2076492953949691215L;
-	private IStatus cause;
-
-	public RollbackOperationEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine, IStatus cause) {
-		super(profile, phaseSet, operands, engine);
-		this.cause = cause;
-	}
-
-	public IStatus getStatus() {
-		return cause;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/TransactionEvent.java b/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/TransactionEvent.java
deleted file mode 100644
index df3af94..0000000
--- a/bundles/org.eclipse.equinox.p2.engine/src/org/eclipse/equinox/p2/engine/TransactionEvent.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*******************************************************************************
- * Copyright (c) 2007, 2008 IBM Corporation and others.
- * All rights reserved. This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License v1.0
- * which accompanies this distribution, and is available at
- * http://www.eclipse.org/legal/epl-v10.html
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.equinox.p2.engine;
-
-import org.eclipse.equinox.internal.p2.engine.Operand;
-
-import java.util.EventObject;
-import org.eclipse.equinox.internal.p2.engine.PhaseSet;
-
-/**
- * @since 2.0
- */
-public abstract class TransactionEvent extends EventObject {
-	private static final long serialVersionUID = 6278706971855493984L;
-	protected IProfile profile;
-	protected PhaseSet phaseSet;
-	protected Operand[] operands;
-
-	public TransactionEvent(IProfile profile, PhaseSet phaseSet, Operand[] operands, IEngine engine) {
-		super(engine);
-		this.profile = profile;
-		this.phaseSet = phaseSet;
-		this.operands = operands;
-	}
-
-	public IProfile getProfile() {
-		return profile;
-	}
-}
diff --git a/bundles/org.eclipse.equinox.p2.garbagecollector/src/org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector.java b/bundles/org.eclipse.equinox.p2.garbagecollector/src/org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector.java
index 60795d1..baf9e50 100644
--- a/bundles/org.eclipse.equinox.p2.garbagecollector/src/org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector.java
+++ b/bundles/org.eclipse.equinox.p2.garbagecollector/src/org/eclipse/equinox/internal/p2/garbagecollector/GarbageCollector.java
@@ -10,6 +10,11 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.garbagecollector;
 
+import org.eclipse.equinox.internal.p2.engine.CommitOperationEvent;
+import org.eclipse.equinox.internal.p2.engine.RollbackOperationEvent;
+
+import org.eclipse.equinox.internal.p2.engine.InstallableUnitEvent;
+
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.preferences.*;
diff --git a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/ProfileTest.java b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/ProfileTest.java
index 73ea835..61e3c9a 100644
--- a/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/ProfileTest.java
+++ b/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/engine/ProfileTest.java
@@ -10,6 +10,8 @@
  *******************************************************************************/
 package org.eclipse.equinox.p2.tests.engine;
 
+import org.eclipse.equinox.internal.p2.engine.ISurrogateProfileHandler;
+
 import java.io.*;
 import java.util.*;
 import java.util.Map.Entry;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/src/org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdater.java b/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/src/org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdater.java
index 7b44956..131e118 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/src/org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdater.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk.scheduler/src/org/eclipse/equinox/internal/p2/ui/sdk/scheduler/AutomaticUpdater.java
@@ -11,6 +11,8 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.sdk.scheduler;
 
+import org.eclipse.equinox.p2.engine.IProfileEvent;
+
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.util.*;
@@ -52,9 +54,9 @@ public class AutomaticUpdater implements IUpdateListener {
 	private void createProfileListener() {
 		profileListener = new ProvisioningListener() {
 			public void notify(EventObject o) {
-				if (o instanceof ProfileEvent) {
-					ProfileEvent event = (ProfileEvent) o;
-					if (event.getReason() == ProfileEvent.CHANGED && sameProfile(event.getProfileId())) {
+				if (o instanceof IProfileEvent) {
+					IProfileEvent event = (IProfileEvent) o;
+					if (event.getReason() == IProfileEvent.CHANGED && sameProfile(event.getProfileId())) {
 						triggerNewUpdateNotification();
 					}
 				}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIProvisioningListener.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIProvisioningListener.java
index fa88b20..d544748 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIProvisioningListener.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIProvisioningListener.java
@@ -11,10 +11,11 @@
 
 package org.eclipse.equinox.internal.p2.ui;
 
+import org.eclipse.equinox.p2.engine.IProfileEvent;
+
 import java.util.EventObject;
 import org.eclipse.equinox.internal.provisional.p2.core.eventbus.SynchronousProvisioningListener;
 import org.eclipse.equinox.internal.provisional.p2.repository.RepositoryEvent;
-import org.eclipse.equinox.p2.engine.ProfileEvent;
 import org.eclipse.equinox.p2.repository.IRepository;
 
 /**
@@ -54,13 +55,13 @@ public abstract class ProvUIProvisioningListener implements SynchronousProvision
 		} else if (batchCount > 0) {
 			// We are in the middle of a batch operation
 			return;
-		} else if (o instanceof ProfileEvent && (((eventTypes & PROV_EVENT_IU) == PROV_EVENT_IU) || ((eventTypes & PROV_EVENT_PROFILE) == PROV_EVENT_PROFILE))) {
-			ProfileEvent event = (ProfileEvent) o;
-			if (event.getReason() == ProfileEvent.CHANGED) {
+		} else if (o instanceof IProfileEvent && (((eventTypes & PROV_EVENT_IU) == PROV_EVENT_IU) || ((eventTypes & PROV_EVENT_PROFILE) == PROV_EVENT_PROFILE))) {
+			IProfileEvent event = (IProfileEvent) o;
+			if (event.getReason() == IProfileEvent.CHANGED) {
 				profileChanged(event.getProfileId());
-			} else if (event.getReason() == ProfileEvent.ADDED) {
+			} else if (event.getReason() == IProfileEvent.ADDED) {
 				profileAdded(event.getProfileId());
-			} else if (event.getReason() == ProfileEvent.REMOVED) {
+			} else if (event.getReason() == IProfileEvent.REMOVED) {
 				profileRemoved(event.getProfileId());
 			}
 		} else if (o instanceof RepositoryEvent) {
