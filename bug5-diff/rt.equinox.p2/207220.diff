commit 97c68d6d98fd6859012516ee7270aa70db9863b5
Author: Susan Franklin <sfranklin>
Date:   Mon Mar 10 17:09:10 2008 +0000

    Bug 207220 - [ui] - quick and easy ways to get an URL into the repo list

4	23	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
64	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
29	35	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
47	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
35	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
41	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
38	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
index 6da0a89..f3650c6 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
@@ -10,15 +10,13 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.sdk;
 
-import java.io.File;
 import java.net.URL;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.equinox.internal.p2.ui.sdk.externalFiles.ExternalFileHandler;
+import org.eclipse.equinox.internal.p2.ui.sdk.externalFiles.MetadataGeneratingURLValidator;
 import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.AddRepositoryDialog;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.statushandlers.StatusManager;
@@ -41,25 +39,8 @@ public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
 		return new AddColocatedRepositoryOperation(getShell().getText(), url);
 	}
 
-	protected IStatus handleInvalidRepositoryURL(URL url, final IStatus status) {
-		// If it was set up with jar protocol, now convert it back to file.
-
-		if (!FILE_PROTOCOL.equalsIgnoreCase(url.getProtocol()))
-			return status;
-		String path = url.getPath();
-		if (path.startsWith(JAR_PATH_PREFIX))
-			path = path.substring(JAR_PATH_PREFIX.length());
-		if (path.endsWith(JAR_PATH_SUFFIX))
-			path = path.substring(0, path.length() - JAR_PATH_SUFFIX.length());
-		final File file = new File(path);
-
-		IStatus externalFileStatus = new ExternalFileHandler(getProfile(), file, getShell()).processFile(status);
-		if (externalFileStatus.getCode() == ExternalFileHandler.REPO_GENERATED || externalFileStatus.getCode() == ExternalFileHandler.BUNDLE_INSTALLED) {
-			// TODO workaround for bug #199806
-			ProvisioningUtil.notifyRepositoryAdded();
-			return Status.CANCEL_STATUS;
-		}
-		return externalFileStatus;
+	protected URLValidator createURLValidator(URL[] knownRepositories) {
+		return new MetadataGeneratingURLValidator(knownRepositories, getShell(), getProfile());
 	}
 
 	private IProfile getProfile() {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
new file mode 100644
index 0000000..d66712d
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
@@ -0,0 +1,64 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************/
+
+package org.eclipse.equinox.internal.p2.ui.sdk.externalFiles;
+
+import java.io.File;
+import java.net.URL;
+import org.eclipse.core.runtime.*;
+import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.DefaultURLValidator;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
+import org.eclipse.swt.widgets.Shell;
+
+/**
+ * @since 3.4
+ *
+ */
+public class MetadataGeneratingURLValidator extends DefaultURLValidator {
+
+	Shell shell;
+	IProfile profile;
+
+	public MetadataGeneratingURLValidator(URL[] knownRepositories, Shell shell, IProfile profile) {
+		super(knownRepositories);
+		this.shell = shell;
+		this.profile = profile;
+	}
+
+	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor) {
+		IStatus status = super.validateRepositoryURL(location, contactRepositories, originalStatus, monitor);
+
+		// If it's already OK or the problem was a local format, nothing to do here.
+		if (status.isOK() || status.getCode() == URLValidator.LOCAL_VALIDATION_ERROR)
+			return status;
+
+		// If it was set up with jar protocol, now convert it back to file.
+		if (!FILE_PROTOCOL.equalsIgnoreCase(location.getProtocol()))
+			return status;
+		String path = location.getPath();
+		if (path.startsWith(JAR_PATH_PREFIX))
+			path = path.substring(JAR_PATH_PREFIX.length());
+		if (path.endsWith(JAR_PATH_SUFFIX))
+			path = path.substring(0, path.length() - JAR_PATH_SUFFIX.length());
+		final File file = new File(path);
+
+		IStatus externalFileStatus = new ExternalFileHandler(profile, file, shell).processFile(status);
+		if (externalFileStatus.getCode() == REPO_AUTO_GENERATED || externalFileStatus.getCode() == ALTERNATE_ACTION_TAKEN) {
+			// TODO workaround for bug #199806
+			ProvisioningUtil.notifyRepositoryAdded();
+			return Status.CANCEL_STATUS;
+		}
+		return externalFileStatus;
+	}
+
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
index 15cb8d7..97746b0 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
@@ -19,11 +19,11 @@ import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
@@ -44,12 +44,7 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 
 	Button okButton;
 	Text url;
-	URL[] knownRepositories;
-	protected static final int NON_REPO_ERROR = 0;
-	protected static final String FILE_PROTOCOL = "file"; //$NON-NLS-1$
-	protected static final String FILE_PROTOCOL_PREFIX = "file:"; //$NON-NLS-1$
-	protected static final String JAR_PATH_PREFIX = "jar:";//$NON-NLS-1$
-	protected static final String JAR_PATH_SUFFIX = "!/"; //$NON-NLS-1$
+	URLValidator urlValidator;
 	static final String[] ARCHIVE_EXTENSIONS = new String[] {"*.jar;*.zip"}; //$NON-NLS-1$ 
 	static String lastLocalLocation = null;
 	static String lastArchiveLocation = null;
@@ -57,7 +52,7 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 	public AddRepositoryDialog(Shell parentShell, URL[] knownRepositories) {
 
 		super(parentShell);
-		this.knownRepositories = knownRepositories;
+		urlValidator = createURLValidator(knownRepositories);
 		setTitle(ProvUIMessages.AddRepositoryDialog_Title);
 	}
 
@@ -81,6 +76,9 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 		data = new GridData(GridData.FILL_HORIZONTAL);
 		data.widthHint = convertHorizontalDLUsToPixels(IDialogConstants.ENTRY_FIELD_WIDTH);
 		url.setLayoutData(data);
+		DropTarget target = new DropTarget(url, DND.DROP_MOVE | DND.DROP_COPY | DND.DROP_LINK);
+		target.setTransfer(new Transfer[] {URLTransfer.getInstance()});
+		target.addDropListener(new TextURLDropAdapter(url));
 		url.addModifyListener(new ModifyListener() {
 			public void modifyText(ModifyEvent e) {
 				validateRepositoryURL(false);
@@ -108,7 +106,7 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 				String path = dialog.open();
 				if (path != null) {
 					lastLocalLocation = path;
-					url.setText(FILE_PROTOCOL_PREFIX + path);
+					url.setText(URLValidator.FILE_PROTOCOL_PREFIX + path);
 					validateRepositoryURL(true);
 				}
 			}
@@ -125,7 +123,7 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 				String path = dialog.open();
 				if (path != null) {
 					lastArchiveLocation = path;
-					url.setText(FILE_PROTOCOL_PREFIX + JAR_PATH_PREFIX + path + JAR_PATH_SUFFIX);
+					url.setText(URLValidator.FILE_PROTOCOL_PREFIX + URLValidator.JAR_PATH_PREFIX + path + URLValidator.JAR_PATH_SUFFIX);
 					validateRepositoryURL(true);
 				}
 			}
@@ -135,6 +133,14 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 		return comp;
 	}
 
+	protected URLValidator createURLValidator(URL[] knownRepositories) {
+		return new DefaultURLValidator(knownRepositories);
+	}
+
+	protected URLValidator getURLValidator() {
+		return urlValidator;
+	}
+
 	protected void okPressed() {
 		IStatus status = addRepository();
 		if (status.isOK())
@@ -174,41 +180,29 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 	 * should be consulted for validating the URL.  For example, it is not 
 	 * appropriate to contact the repositories on every keystroke.
 	 */
-	protected IStatus validateRepositoryURL(boolean contactRepositories) {
+	protected IStatus validateRepositoryURL(final boolean contactRepositories) {
 		if (url == null || url.isDisposed())
 			return Status.OK_STATUS;
 		final IStatus[] status = new IStatus[1];
 		status[0] = Status.OK_STATUS;
 		final URL userURL = getUserURL();
 		if (url.getText().length() == 0)
-			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, NON_REPO_ERROR, ProvUIMessages.RepositoryGroup_URLRequired, null);
+			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, URLValidator.LOCAL_VALIDATION_ERROR, ProvUIMessages.RepositoryGroup_URLRequired, null);
 		else if (userURL == null)
-			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, NON_REPO_ERROR, ProvUIMessages.AddRepositoryDialog_InvalidURL, null);
+			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, URLValidator.LOCAL_VALIDATION_ERROR, ProvUIMessages.AddRepositoryDialog_InvalidURL, null);
 		else {
-			for (int i = 0; i < knownRepositories.length; i++) {
-				if (knownRepositories[i].toExternalForm().equalsIgnoreCase(userURL.toExternalForm())) {
-					status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, NON_REPO_ERROR, ProvUIMessages.AddRepositoryDialog_DuplicateURL, null);
-					break;
-				}
+			try {
+				PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new IRunnableWithProgress() {
+					public void run(IProgressMonitor monitor) {
+						status[0] = getURLValidator().validateRepositoryURL(userURL, contactRepositories, status[0], monitor);
+					}
+				});
+			} catch (InvocationTargetException e) {
+				return ProvUI.handleException(e.getCause(), ProvUIMessages.AddRepositoryDialog_URLValidationError, StatusManager.SHOW | StatusManager.LOG);
+			} catch (InterruptedException e) {
+				// ignore
 			}
-			if (status[0].isOK() && contactRepositories)
-				try {
-					PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new IRunnableWithProgress() {
-						public void run(IProgressMonitor monitor) {
-							status[0] = ProvisioningUtil.validateMetadataRepositoryLocation(userURL, monitor);
-						}
-					});
-				} catch (InvocationTargetException e) {
-					return ProvUI.handleException(e.getCause(), ProvUIMessages.AddRepositoryDialog_URLValidationError, StatusManager.SHOW | StatusManager.LOG);
-				} catch (InterruptedException e) {
-					// ignore
-				}
 		}
-		// If the repositories themselves didn't know what to do with this
-		// URL, consult subclasses.  There may be additional work that could
-		// be done to make the location valid.
-		if (!status[0].isOK() && status[0].getCode() != NON_REPO_ERROR)
-			status[0] = handleInvalidRepositoryURL(userURL, status[0]);
 
 		// At this point the subclasses may have decided to opt out of
 		// this dialog.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
new file mode 100644
index 0000000..12d7af9
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
@@ -0,0 +1,47 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************/
+
+package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
+
+import java.net.URL;
+import org.eclipse.core.runtime.*;
+import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
+
+/**
+ * @since 3.4
+ *
+ */
+public class DefaultURLValidator extends URLValidator {
+
+	URL[] knownRepositories;
+
+	public DefaultURLValidator(URL[] knownRepositories) {
+		this.knownRepositories = knownRepositories;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator#validateRepositoryURL(boolean)
+	 */
+	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor) {
+		IStatus status = originalStatus;
+		for (int i = 0; i < knownRepositories.length; i++) {
+			if (knownRepositories[i].toExternalForm().equalsIgnoreCase(location.toExternalForm())) {
+				status = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, LOCAL_VALIDATION_ERROR, ProvUIMessages.AddRepositoryDialog_DuplicateURL, null);
+				break;
+			}
+		}
+		if (status.isOK() && contactRepositories)
+			status = ProvisioningUtil.validateMetadataRepositoryLocation(location, monitor);
+		return status;
+	}
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
new file mode 100644
index 0000000..f999712
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
@@ -0,0 +1,35 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************/
+
+package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
+
+import org.eclipse.swt.widgets.Text;
+
+/**
+ * @since 3.4
+ *
+ */
+public class TextURLDropAdapter extends URLDropAdapter {
+
+	Text text;
+
+	public TextURLDropAdapter(Text text) {
+		this.text = text;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLDropAdapter#handleURLString(java.lang.String)
+	 */
+	protected void handleURLString(String urlText) {
+		text.setText(urlText);
+	}
+
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
new file mode 100644
index 0000000..5ac605f
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
@@ -0,0 +1,41 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************/
+
+package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
+
+import org.eclipse.swt.dnd.*;
+
+/**
+ * URLDropAdapter can receive URL text from a drop.
+ * @since 3.4
+ *
+ */
+public abstract class URLDropAdapter extends DropTargetAdapter {
+	public void dragEnter(DropTargetEvent e) {
+		if (e.detail == DND.DROP_NONE)
+			e.detail = DND.DROP_LINK;
+	}
+
+	public void dragOperationChanged(DropTargetEvent e) {
+		if (e.detail == DND.DROP_NONE)
+			e.detail = DND.DROP_LINK;
+	}
+
+	public void drop(DropTargetEvent event) {
+		if (event.data == null) {
+			event.detail = DND.DROP_NONE;
+			return;
+		}
+		handleURLString((String) event.data);
+	}
+
+	protected abstract void handleURLString(String urlText);
+}
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
new file mode 100644
index 0000000..fadb07d
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
@@ -0,0 +1,38 @@
+/*******************************************************************************
+ * Copyright (c) 2008 IBM Corporation and others.
+ * All rights reserved. This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License v1.0
+ * which accompanies this distribution, and is available at
+ * http://www.eclipse.org/legal/epl-v10.html
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ ******************************************************************************/
+
+package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
+
+import java.net.URL;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+
+/**
+ * 
+ * URLValidator can be used to validate a repository URL.  Validation may
+ * involve rules known by the validator itself or contact with a repository
+ * manager.
+ * 
+ * @since 3.4
+ *
+ */
+public abstract class URLValidator {
+	public static final String FILE_PROTOCOL = "file"; //$NON-NLS-1$
+	public static final String FILE_PROTOCOL_PREFIX = "file:"; //$NON-NLS-1$
+	public static final String JAR_PATH_PREFIX = "jar:";//$NON-NLS-1$
+	public static final String JAR_PATH_SUFFIX = "!/"; //$NON-NLS-1$
+
+	public static final int LOCAL_VALIDATION_ERROR = 3000;
+	public static final int REPO_AUTO_GENERATED = 3001;
+	public static final int ALTERNATE_ACTION_TAKEN = 3002;
+
+	protected abstract IStatus validateRepositoryURL(URL url, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor);
+}
commit 415237238d00e68a54150b69ebf6786560ed1128
Author: Susan Franklin <sfranklin>
Date:   Mon Mar 10 20:54:28 2008 +0000

    Bug 207220 - [ui] - quick and easy ways to get an URL into the repo list

10	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
10	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
2	3	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
2	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddArtifactRepositoryDialog.java
2	2	bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddMetadataRepositoryDialog.java
9	5	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
3	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
11	11	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
28	3	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
21	4	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
3	0	bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
21	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/IRepositoryManipulator.java
23	24	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
24	9	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
56	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
5	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
10	2	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
9	3	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
28	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
1	0	bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policies.java
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
index 3949942..7c7f800 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/ArtifactRepositoriesView.java
@@ -13,6 +13,8 @@ package org.eclipse.equinox.internal.p2.ui.admin;
 import java.net.URL;
 import java.util.ArrayList;
 import org.eclipse.equinox.internal.p2.ui.admin.dialogs.AddArtifactRepositoryDialog;
+import org.eclipse.equinox.internal.p2.ui.admin.preferences.PreferenceConstants;
+import org.eclipse.equinox.internal.provisional.p2.artifact.repository.IArtifactRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.model.*;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.RemoveArtifactRepositoryOperation;
@@ -48,8 +50,8 @@ public class ArtifactRepositoriesView extends RepositoriesView {
 		return ProvAdminUIMessages.ArtifactRepositoriesView_RemoveRepositoryTooltip;
 	}
 
-	protected int openAddRepositoryDialog(Shell shell, URL[] knownRepos) {
-		return new AddArtifactRepositoryDialog(shell, knownRepos).open();
+	protected int openAddRepositoryDialog(Shell shell) {
+		return new AddArtifactRepositoryDialog(shell, getRepoFlags()).open();
 	}
 
 	protected ProvisioningOperation getRemoveOperation(Object[] elements) {
@@ -65,4 +67,10 @@ public class ArtifactRepositoriesView extends RepositoriesView {
 		return element instanceof ArtifactRepositoryElement;
 	}
 
+	protected int getRepoFlags() {
+		if (ProvAdminUIActivator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.PREF_HIDE_SYSTEM_REPOS))
+			return IArtifactRepositoryManager.REPOSITORIES_NON_SYSTEM;
+		return IArtifactRepositoryManager.REPOSITORIES_ALL;
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
index 8f4e47e..1a1d28e 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/MetadataRepositoriesView.java
@@ -15,7 +15,9 @@ import java.net.URL;
 import java.util.ArrayList;
 import org.eclipse.equinox.internal.p2.ui.admin.dialogs.AddMetadataRepositoryDialog;
 import org.eclipse.equinox.internal.p2.ui.admin.dialogs.AddProfileDialog;
+import org.eclipse.equinox.internal.p2.ui.admin.preferences.PreferenceConstants;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
+import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadataRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.IProfileChooser;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.actions.InstallAction;
@@ -66,8 +68,8 @@ public class MetadataRepositoriesView extends RepositoriesView {
 		return ProvAdminUIMessages.MetadataRepositoriesView_RemoveRepositoryTooltip;
 	}
 
-	protected int openAddRepositoryDialog(Shell shell, URL[] knownRepos) {
-		return new AddMetadataRepositoryDialog(shell, knownRepos).open();
+	protected int openAddRepositoryDialog(Shell shell) {
+		return new AddMetadataRepositoryDialog(shell, getRepoFlags()).open();
 	}
 
 	protected ProvisioningOperation getRemoveOperation(Object[] elements) {
@@ -141,4 +143,10 @@ public class MetadataRepositoriesView extends RepositoriesView {
 		treeViewer.addDragSupport(DND.DROP_COPY, transfers, new IUDragAdapter(treeViewer));
 	}
 
+	protected int getRepoFlags() {
+		if (ProvAdminUIActivator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.PREF_HIDE_SYSTEM_REPOS))
+			return IMetadataRepositoryManager.REPOSITORIES_NON_SYSTEM;
+		return IMetadataRepositoryManager.REPOSITORIES_ALL;
+	}
+
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
index 4756f53..6e381f3 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/RepositoriesView.java
@@ -10,7 +10,6 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.admin;
 
-import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 import org.eclipse.equinox.internal.p2.ui.admin.preferences.PreferenceConstants;
@@ -64,7 +63,7 @@ abstract class RepositoriesView extends ProvView {
 			for (int i = 0; i < elements.length; i++)
 				if (elements[i] instanceof RepositoryElement)
 					urls.add(((RepositoryElement) elements[i]).getLocation());
-			openAddRepositoryDialog(getShell(), (URL[]) urls.toArray(new URL[urls.size()]));
+			openAddRepositoryDialog(getShell());
 		}
 	}
 
@@ -166,7 +165,7 @@ abstract class RepositoriesView extends ProvView {
 
 	}
 
-	protected abstract int openAddRepositoryDialog(Shell shell, URL[] knownRepos);
+	protected abstract int openAddRepositoryDialog(Shell shell);
 
 	protected abstract ProvisioningOperation getRemoveOperation(Object[] elements);
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddArtifactRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddArtifactRepositoryDialog.java
index b6a50a3..8787e3f 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddArtifactRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddArtifactRepositoryDialog.java
@@ -25,8 +25,8 @@ import org.eclipse.swt.widgets.Shell;
  */
 public class AddArtifactRepositoryDialog extends AddRepositoryDialog {
 
-	public AddArtifactRepositoryDialog(Shell parentShell, URL[] knownRepositories) {
-		super(parentShell, knownRepositories);
+	public AddArtifactRepositoryDialog(Shell parentShell, int repoFlags) {
+		super(parentShell, repoFlags);
 	}
 
 	protected ProvisioningOperation getOperation(URL url) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddMetadataRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddMetadataRepositoryDialog.java
index 97fcf2c..d852dc0 100644
--- a/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddMetadataRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.admin/src/org/eclipse/equinox/internal/p2/ui/admin/dialogs/AddMetadataRepositoryDialog.java
@@ -25,8 +25,8 @@ import org.eclipse.swt.widgets.Shell;
  */
 public class AddMetadataRepositoryDialog extends AddRepositoryDialog {
 
-	public AddMetadataRepositoryDialog(Shell parentShell, URL[] knownRepositories) {
-		super(parentShell, knownRepositories);
+	public AddMetadataRepositoryDialog(Shell parentShell, int repoFlags) {
+		super(parentShell, repoFlags);
 	}
 
 	protected ProvisioningOperation getOperation(URL url) {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
index f3650c6..1459841 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/AddColocatedRepositoryDialog.java
@@ -16,7 +16,7 @@ import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.AddRepositoryDialog;
-import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.DefaultURLValidator;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.statushandlers.StatusManager;
@@ -30,8 +30,9 @@ import org.eclipse.ui.statushandlers.StatusManager;
  */
 public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
 
-	public AddColocatedRepositoryDialog(Shell parentShell, URL[] knownRepositories) {
-		super(parentShell, knownRepositories);
+	public AddColocatedRepositoryDialog(Shell parentShell, int repoFlags) {
+		super(parentShell, repoFlags);
+		setTitle(ProvSDKMessages.AddColocatedRepositoryDialog_Title);
 
 	}
 
@@ -39,8 +40,11 @@ public class AddColocatedRepositoryDialog extends AddRepositoryDialog {
 		return new AddColocatedRepositoryOperation(getShell().getText(), url);
 	}
 
-	protected URLValidator createURLValidator(URL[] knownRepositories) {
-		return new MetadataGeneratingURLValidator(knownRepositories, getShell(), getProfile());
+	protected DefaultURLValidator createURLValidator() {
+		MetadataGeneratingURLValidator validator = new MetadataGeneratingURLValidator();
+		validator.setProfile(getProfile());
+		validator.setShell(getShell());
+		return validator;
 	}
 
 	private IProfile getProfile() {
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
index f2cbaf7..7bc1d1c 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/ProvSDKMessages.java
@@ -26,6 +26,7 @@ public class ProvSDKMessages extends NLS {
 	}
 	public static String AddColocatedRepositoryDialog_InvalidURL;
 	public static String AddColocatedRepositoryDialog_MissingProfile;
+	public static String AddColocatedRepositoryDialog_Title;
 	public static String ConfirmRepoGenerationDialog_FileDescription;
 	public static String ConfirmRepoGenerationDialog_Message;
 	public static String ConfirmRepoGenerationFromArchiveDialog_FileDescription;
@@ -57,11 +58,13 @@ public class ProvSDKMessages extends NLS {
 	public static String RepositoryManipulationDialog_RemoveButton;
 	public static String RepositoryManipulationDialog_RemoveOperationLabel;
 	public static String RepositoryManipulationDialog_UpdateSitesDialogTitle;
+	public static String UpdateAndInstallDialog_AddSiteOperationlabel;
 	public static String UpdateAndInstallDialog_AvailableFeatures;
 	public static String UpdateAndInstallDialog_InstalledFeatures;
 	public static String UpdateAndInstallDialog_ManageSites;
 	public static String UpdateAndInstallDialog_AlertCheckbox;
 	public static String UpdateAndInstallDialog_PrefLink;
+	public static String UpdateAndInstallDialog_RemoveSiteOperationLabel;
 	public static String UpdateAndInstallDialog_RevertActionLabel;
 	public static String UpdateAndInstallDialog_Title;
 	public static String UpdateHandler_NoProfilesDefined;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
index 3075f77..eb0e396 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/RepositoryManipulationDialog.java
@@ -13,13 +13,11 @@ package org.eclipse.equinox.internal.p2.ui.sdk;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
-import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadataRepositoryManager;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvisioningOperationRunner;
+import org.eclipse.equinox.internal.provisional.p2.ui.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.RepositoryManipulatorDropTarget;
 import org.eclipse.equinox.internal.provisional.p2.ui.model.MetadataRepositories;
 import org.eclipse.equinox.internal.provisional.p2.ui.model.MetadataRepositoryElement;
-import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.RemoveColocatedRepositoryOperation;
 import org.eclipse.equinox.internal.provisional.p2.ui.viewers.*;
 import org.eclipse.jface.action.Action;
@@ -30,6 +28,7 @@ import org.eclipse.jface.viewers.IStructuredSelection;
 import org.eclipse.jface.viewers.TableViewer;
 import org.eclipse.jface.window.SameShellProvider;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.events.DisposeEvent;
 import org.eclipse.swt.events.DisposeListener;
 import org.eclipse.swt.graphics.Point;
@@ -37,7 +36,6 @@ import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.dialogs.PropertyDialogAction;
-import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Dialog that allows users to update, add, or remove repositories.
@@ -52,13 +50,15 @@ public class RepositoryManipulationDialog extends TrayDialog {
 
 	StructuredViewerProvisioningListener listener;
 	TableViewer repositoryViewer;
+	IRepositoryManipulator manipulator;
 
 	/**
 	 * Create an instance of this Dialog.
 	 * 
 	 */
-	public RepositoryManipulationDialog(Shell shell) {
+	public RepositoryManipulationDialog(Shell shell, IRepositoryManipulator manipulator) {
 		super(shell);
+		this.manipulator = manipulator;
 	}
 
 	protected void configureShell(Shell shell) {
@@ -84,6 +84,10 @@ public class RepositoryManipulationDialog extends TrayDialog {
 		repositoryViewer.setInput(new MetadataRepositories());
 		repositoryViewer.setLabelProvider(new ProvElementLabelProvider());
 
+		DropTarget target = new DropTarget(repositoryViewer.getControl(), DND.DROP_MOVE | DND.DROP_COPY | DND.DROP_LINK);
+		target.setTransfer(new Transfer[] {URLTransfer.getInstance()});
+		target.addDropListener(new RepositoryManipulatorDropTarget(manipulator, repositoryViewer.getControl()));
+
 		GridData data = new GridData(GridData.FILL_BOTH);
 		data.grabExcessHorizontalSpace = true;
 		data.grabExcessVerticalSpace = true;
@@ -186,11 +190,7 @@ public class RepositoryManipulationDialog extends TrayDialog {
 		button = createVerticalButton(composite, ProvSDKMessages.RepositoryManipulationDialog_AddButton, false);
 		button.setData(BUTTONACTION, new Action() {
 			public void runWithEvent(Event event) {
-				try {
-					new AddColocatedRepositoryDialog(getShell(), ProvisioningUtil.getMetadataRepositories(IMetadataRepositoryManager.REPOSITORIES_NON_SYSTEM)).open();
-				} catch (ProvisionException e) {
-					ProvUI.handleException(e, ProvSDKMessages.RepositoryManipulationDialog_ErrorRetrievingSites, StatusManager.BLOCK | StatusManager.LOG);
-				}
+				new AddColocatedRepositoryDialog(getShell(), IMetadataRepositoryManager.REPOSITORIES_NON_SYSTEM).open();
 			}
 		});
 		button = createVerticalButton(composite, ProvSDKMessages.RepositoryManipulationDialog_RemoveButton, false);
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
index 2a9b422..6f6c3b1 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/UpdateAndInstallDialog.java
@@ -10,11 +10,15 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.p2.ui.sdk;
 
+import java.net.URL;
+import org.eclipse.equinox.internal.p2.ui.sdk.externalFiles.MetadataGeneratingURLValidator;
 import org.eclipse.equinox.internal.p2.ui.sdk.prefs.PreferenceConstants;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
+import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadataRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.IProfileChooser;
 import org.eclipse.equinox.internal.provisional.p2.ui.IRepositoryManipulator;
-import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.RevertWizard;
-import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.UpdateAndInstallGroup;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.*;
 import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.preference.IPreferenceStore;
@@ -135,10 +139,31 @@ public class UpdateAndInstallDialog extends TrayDialog {
 			}
 
 			public boolean manipulateRepositories(Shell shell) {
-				new RepositoryManipulationDialog(shell).open();
+				new RepositoryManipulationDialog(shell, this).open();
 				return true;
 			}
 
+			public ProvisioningOperation getAddOperation(URL repoURL) {
+				return new AddColocatedRepositoryOperation(ProvSDKMessages.UpdateAndInstallDialog_AddSiteOperationlabel, repoURL);
+			}
+
+			public URL[] getKnownRepositories() {
+				try {
+					return ProvisioningUtil.getMetadataRepositories(IMetadataRepositoryManager.REPOSITORIES_ALL);
+				} catch (ProvisionException e) {
+					return new URL[0];
+				}
+			}
+
+			public ProvisioningOperation getRemoveOperation(URL[] reposToRemove) {
+				return new RemoveColocatedRepositoryOperation(ProvSDKMessages.UpdateAndInstallDialog_RemoveSiteOperationLabel, reposToRemove);
+			}
+
+			public URLValidator getURLValidator(Shell shell) {
+				MetadataGeneratingURLValidator validator = new MetadataGeneratingURLValidator();
+				validator.setShell(shell);
+				return validator;
+			}
 		};
 	}
 
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
index d66712d..4f71115 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/externalFiles/MetadataGeneratingURLValidator.java
@@ -14,11 +14,14 @@ package org.eclipse.equinox.internal.p2.ui.sdk.externalFiles;
 import java.io.File;
 import java.net.URL;
 import org.eclipse.core.runtime.*;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
 import org.eclipse.equinox.internal.provisional.p2.engine.IProfile;
+import org.eclipse.equinox.internal.provisional.p2.engine.IProfileRegistry;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.DefaultURLValidator;
 import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.PlatformUI;
 
 /**
  * @since 3.4
@@ -29,19 +32,33 @@ public class MetadataGeneratingURLValidator extends DefaultURLValidator {
 	Shell shell;
 	IProfile profile;
 
-	public MetadataGeneratingURLValidator(URL[] knownRepositories, Shell shell, IProfile profile) {
-		super(knownRepositories);
+	public void setShell(Shell shell) {
 		this.shell = shell;
+	}
+
+	public void setProfile(IProfile profile) {
 		this.profile = profile;
 	}
 
-	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor) {
-		IStatus status = super.validateRepositoryURL(location, contactRepositories, originalStatus, monitor);
+	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IProgressMonitor monitor) {
+		IStatus status = super.validateRepositoryURL(location, contactRepositories, monitor);
 
 		// If it's already OK or the problem was a local format, nothing to do here.
 		if (status.isOK() || status.getCode() == URLValidator.LOCAL_VALIDATION_ERROR)
 			return status;
 
+		if (shell == null)
+			shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
+
+		if (profile == null) {
+			try {
+				profile = ProvisioningUtil.getProfile(IProfileRegistry.SELF);
+			} catch (ProvisionException e) {
+				return status;
+			}
+
+		}
+
 		// If it was set up with jar protocol, now convert it back to file.
 		if (!FILE_PROTOCOL.equalsIgnoreCase(location.getProtocol()))
 			return status;
diff --git a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
index 395da1b..3ed9c15 100644
--- a/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui.sdk/src/org/eclipse/equinox/internal/p2/ui/sdk/messages.properties
@@ -10,6 +10,7 @@
 ###############################################################################
 AddColocatedRepositoryDialog_InvalidURL=The URL is not valid.
 AddColocatedRepositoryDialog_MissingProfile=Could not retrieve a description of the running system.
+AddColocatedRepositoryDialog_Title=Add Site
 ConfirmRepoGenerationDialog_FileDescription=Additional files must be generated to make the directory contents available.  Please specify a path for the additional files.
 ConfirmRepoGenerationDialog_Message=The directory "{0}" does not contain files that describe a known software site.  Do you want to generate these files so that the contents of this folder are available for installation?
 ConfirmRepoGenerationFromArchiveDialog_FileDescription=The contents of the archive file will be expanded into a directory, along with generated files that make them available for install.  Please specify a path for these files.
@@ -34,11 +35,13 @@ ExternalFilesPreferencePage_GenerateRepoNever=&Report the unrecognized directory
 ExternalFilesPreferencePage_GenerateRepoPrompt=&Ask me if the information should be generated
 ExternalFilesPreferencePage_RepoGenerationGroup=When I add an unrecognized directory as an update site
 UpdateAndInstallDialog_InstalledFeatures=&Installed Features
+UpdateAndInstallDialog_AddSiteOperationlabel=Add Site
 UpdateAndInstallDialog_AvailableFeatures=&Available Features
 UpdateAndInstallDialog_AlertCheckbox=Automatically check for updates and alert me when they are found
 UpdateAndInstallDialog_PrefLink=Specify the update schedule and other <a>Update Preferences</a>
 UpdateAndInstallDialog_Title=Software Updates and Add-ons
 UpdateAndInstallDialog_ManageSites=&Manage sites...
+UpdateAndInstallDialog_RemoveSiteOperationLabel=Remove Site
 UpdateAndInstallDialog_RevertActionLabel=&Revert configuration...
 UpdateHandler_SDKUpdateUIMessageTitle=Software Updates
 UpdateHandler_NoProfilesDefined=There are no profiles defined.  Cannot invoke the update UI.
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
index 936b06c..079b1f2 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/ProvUIMessages.java
@@ -175,6 +175,7 @@ public class ProvUIMessages extends NLS {
 	public static String UpdateAndInstallSelectionDialog_DeselectAllLabel;
 	public static String UpdateAndInstallSelectionDialog_SelectAllLabel;
 	public static String UpdateAndInstallGroup_Refresh;
+	public static String URLValidator_UnrecognizedURL;
 	public static String UpdateManagerCompatibility_UnableToOpenFindAndInstall;
 	public static String UpdateManagerCompatibility_UnableToOpenManageConfiguration;
 	public static String UpdateOperation_NothingToUpdate;
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
index f506470..a41d055 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/p2/ui/messages.properties
@@ -116,6 +116,7 @@ UpdateDialog_AssemblingUpdatesProgress=Assembling updates
 UpdateAction_UpdatesAvailableTitle=Available Updates
 UpdateOperation_NothingToUpdate=There is nothing to update.
 UpdateAndInstallGroup_Refresh=&Refresh
+URLValidator_UnrecognizedURL=The URL {0} is not recognized.
 UpdateManagerCompatibility_UnableToOpenFindAndInstall=Unable to open the Update Manager Find and Install Wizard.
 UpdateManagerCompatibility_UnableToOpenManageConfiguration=Unable to open the Update Manager Configuration Manager.
 CategoryElementCollector_Uncategorized=Other
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/IRepositoryManipulator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/IRepositoryManipulator.java
index d401f2c..bf7e0a5 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/IRepositoryManipulator.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/IRepositoryManipulator.java
@@ -10,6 +10,9 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui;
 
+import java.net.URL;
+import org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
 import org.eclipse.swt.widgets.Shell;
 
 /**
@@ -35,4 +38,22 @@ public interface IRepositoryManipulator {
 	 */
 	public String getLabel();
 
+	/**
+	 * Return an array of URLs containing the repositories already known.
+	 */
+	public URL[] getKnownRepositories();
+
+	/**
+	 * Return an operation that could be used to add the specified URL as
+	 * a repository.
+	 */
+	public ProvisioningOperation getAddOperation(URL repoURL);
+
+	/**
+	 * Return an operation that could be used to remove the specified URL as
+	 * a repositories.
+	 */
+	public ProvisioningOperation getRemoveOperation(URL[] repoURLs);
+
+	public URLValidator getURLValidator(Shell shell);
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
index 97746b0..1f0f324 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/AddRepositoryDialog.java
@@ -10,26 +10,23 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
-import java.lang.reflect.InvocationTargetException;
 import java.net.MalformedURLException;
 import java.net.URL;
-import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
-import org.eclipse.equinox.internal.provisional.p2.ui.ProvUI;
 import org.eclipse.equinox.internal.provisional.p2.ui.ProvisioningOperationRunner;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
 import org.eclipse.jface.dialogs.*;
 import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.custom.BusyIndicator;
 import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.events.*;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.statushandlers.StatusManager;
 
 /**
  * Abstract dialog class for adding repositories of different types. This class
@@ -44,15 +41,16 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 
 	Button okButton;
 	Text url;
-	URLValidator urlValidator;
+	DefaultURLValidator urlValidator;
 	static final String[] ARCHIVE_EXTENSIONS = new String[] {"*.jar;*.zip"}; //$NON-NLS-1$ 
 	static String lastLocalLocation = null;
 	static String lastArchiveLocation = null;
 
-	public AddRepositoryDialog(Shell parentShell, URL[] knownRepositories) {
+	public AddRepositoryDialog(Shell parentShell, int repoFlag) {
 
 		super(parentShell);
-		urlValidator = createURLValidator(knownRepositories);
+		urlValidator = createURLValidator();
+		urlValidator.setKnownRepositoriesFlag(repoFlag);
 		setTitle(ProvUIMessages.AddRepositoryDialog_Title);
 	}
 
@@ -78,7 +76,13 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 		url.setLayoutData(data);
 		DropTarget target = new DropTarget(url, DND.DROP_MOVE | DND.DROP_COPY | DND.DROP_LINK);
 		target.setTransfer(new Transfer[] {URLTransfer.getInstance()});
-		target.addDropListener(new TextURLDropAdapter(url));
+		target.addDropListener(new TextURLDropAdapter(url) {
+			protected void handleURLString(String urlText, DropTargetEvent event) {
+				super.handleURLString(urlText, event);
+				// validate the URL with remote checking since drop is more heavyweight than typing text
+				validateRepositoryURL(true);
+			}
+		});
 		url.addModifyListener(new ModifyListener() {
 			public void modifyText(ModifyEvent e) {
 				validateRepositoryURL(false);
@@ -133,8 +137,8 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 		return comp;
 	}
 
-	protected URLValidator createURLValidator(URL[] knownRepositories) {
-		return new DefaultURLValidator(knownRepositories);
+	protected DefaultURLValidator createURLValidator() {
+		return new DefaultURLValidator();
 	}
 
 	protected URLValidator getURLValidator() {
@@ -184,24 +188,19 @@ public abstract class AddRepositoryDialog extends StatusDialog {
 		if (url == null || url.isDisposed())
 			return Status.OK_STATUS;
 		final IStatus[] status = new IStatus[1];
-		status[0] = Status.OK_STATUS;
+		status[0] = URLValidator.getInvalidURLStatus(url.getText().trim());
 		final URL userURL = getUserURL();
 		if (url.getText().length() == 0)
 			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, URLValidator.LOCAL_VALIDATION_ERROR, ProvUIMessages.RepositoryGroup_URLRequired, null);
 		else if (userURL == null)
 			status[0] = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, URLValidator.LOCAL_VALIDATION_ERROR, ProvUIMessages.AddRepositoryDialog_InvalidURL, null);
 		else {
-			try {
-				PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new IRunnableWithProgress() {
-					public void run(IProgressMonitor monitor) {
-						status[0] = getURLValidator().validateRepositoryURL(userURL, contactRepositories, status[0], monitor);
-					}
-				});
-			} catch (InvocationTargetException e) {
-				return ProvUI.handleException(e.getCause(), ProvUIMessages.AddRepositoryDialog_URLValidationError, StatusManager.SHOW | StatusManager.LOG);
-			} catch (InterruptedException e) {
-				// ignore
-			}
+			BusyIndicator.showWhile(getShell().getDisplay(), new Runnable() {
+				public void run() {
+					status[0] = getURLValidator().validateRepositoryURL(userURL, contactRepositories, null);
+				}
+			});
+
 		}
 
 		// At this point the subclasses may have decided to opt out of
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
index 12d7af9..59e58a4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/DefaultURLValidator.java
@@ -15,6 +15,8 @@ import java.net.URL;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
 import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.equinox.internal.provisional.p2.core.ProvisionException;
+import org.eclipse.equinox.internal.provisional.p2.metadata.repository.IMetadataRepositoryManager;
 import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUtil;
 
 /**
@@ -23,25 +25,38 @@ import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningUti
  */
 public class DefaultURLValidator extends URLValidator {
 
-	URL[] knownRepositories;
+	int repoFlag;
 
-	public DefaultURLValidator(URL[] knownRepositories) {
-		this.knownRepositories = knownRepositories;
+	public DefaultURLValidator() {
+		repoFlag = IMetadataRepositoryManager.REPOSITORIES_ALL;
+	}
+
+	public void setKnownRepositoriesFlag(int flag) {
+		repoFlag = flag;
 	}
 
 	/* (non-Javadoc)
 	 * @see org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLValidator#validateRepositoryURL(boolean)
 	 */
-	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor) {
-		IStatus status = originalStatus;
+	protected IStatus validateRepositoryURL(URL location, boolean contactRepositories, IProgressMonitor monitor) {
+		IStatus duplicateStatus = Status.OK_STATUS;
+		URL[] knownRepositories;
+		try {
+			knownRepositories = ProvisioningUtil.getMetadataRepositories(repoFlag);
+		} catch (ProvisionException e) {
+			knownRepositories = new URL[0];
+		}
 		for (int i = 0; i < knownRepositories.length; i++) {
 			if (knownRepositories[i].toExternalForm().equalsIgnoreCase(location.toExternalForm())) {
-				status = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, LOCAL_VALIDATION_ERROR, ProvUIMessages.AddRepositoryDialog_DuplicateURL, null);
+				duplicateStatus = new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, LOCAL_VALIDATION_ERROR, ProvUIMessages.AddRepositoryDialog_DuplicateURL, null);
 				break;
 			}
 		}
-		if (status.isOK() && contactRepositories)
-			status = ProvisioningUtil.validateMetadataRepositoryLocation(location, monitor);
-		return status;
+		if (!duplicateStatus.isOK())
+			return duplicateStatus;
+
+		if (contactRepositories)
+			return ProvisioningUtil.validateMetadataRepositoryLocation(location, monitor);
+		return duplicateStatus;
 	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
new file mode 100644
index 0000000..e27bbfb
--- /dev/null
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/RepositoryManipulatorDropTarget.java
@@ -0,0 +1,56 @@
+package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+import org.eclipse.core.runtime.Assert;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.equinox.internal.provisional.p2.ui.*;
+import org.eclipse.equinox.internal.provisional.p2.ui.operations.ProvisioningOperation;
+import org.eclipse.swt.custom.BusyIndicator;
+import org.eclipse.swt.dnd.DND;
+import org.eclipse.swt.dnd.DropTargetEvent;
+import org.eclipse.swt.widgets.Control;
+import org.eclipse.ui.statushandlers.StatusManager;
+
+/**
+ * @since 3.4
+ *
+ */
+public class RepositoryManipulatorDropTarget extends URLDropAdapter {
+	IRepositoryManipulator manipulator;
+	Control control;
+
+	public RepositoryManipulatorDropTarget(IRepositoryManipulator manipulator, Control control) {
+		Assert.isNotNull(manipulator);
+		this.manipulator = manipulator;
+		this.control = control;
+	}
+
+	protected void handleURLString(String urlText, final DropTargetEvent event) {
+		event.detail = DND.DROP_NONE;
+		if (!dropTargetIsValid(event))
+			return;
+		final URL url;
+		try {
+			url = new URL(urlText);
+		} catch (MalformedURLException e) {
+			ProvUI.reportStatus(URLValidator.getInvalidURLStatus(urlText), StatusManager.SHOW | StatusManager.LOG);
+			return;
+		}
+		BusyIndicator.showWhile(control.getDisplay(), new Runnable() {
+			public void run() {
+				IStatus status = manipulator.getURLValidator(control.getShell()).validateRepositoryURL(url, true, null);
+				if (status.isOK()) {
+					ProvisioningOperation addOperation = manipulator.getAddOperation(url);
+					ProvisioningOperationRunner.run(addOperation, control.getShell());
+					event.detail = DND.DROP_LINK;
+				} else if (status.getCode() == URLValidator.REPO_AUTO_GENERATED) {
+					event.detail = DND.DROP_COPY;
+				} else if (!(status.getCode() == URLValidator.ALTERNATE_ACTION_TAKEN)) {
+					ProvUI.reportStatus(status, StatusManager.BLOCK | StatusManager.LOG);
+				}
+
+			}
+		});
+	}
+}
\ No newline at end of file
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
index f999712..5e7aa02 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/TextURLDropAdapter.java
@@ -11,6 +11,8 @@
 
 package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
+import org.eclipse.swt.dnd.DND;
+import org.eclipse.swt.dnd.DropTargetEvent;
 import org.eclipse.swt.widgets.Text;
 
 /**
@@ -26,10 +28,11 @@ public class TextURLDropAdapter extends URLDropAdapter {
 	}
 
 	/* (non-Javadoc)
-	 * @see org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLDropAdapter#handleURLString(java.lang.String)
+	 * @see org.eclipse.equinox.internal.provisional.p2.ui.dialogs.URLDropAdapter#handleURLString(java.lang.String, org.eclipse.swt.dnd.DropTargetEvent)
 	 */
-	protected void handleURLString(String urlText) {
+	protected void handleURLString(String urlText, DropTargetEvent event) {
 		text.setText(urlText);
+		event.detail = DND.DROP_LINK;
 	}
 
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
index 5ac605f..6471787 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLDropAdapter.java
@@ -20,6 +20,10 @@ import org.eclipse.swt.dnd.*;
  */
 public abstract class URLDropAdapter extends DropTargetAdapter {
 	public void dragEnter(DropTargetEvent e) {
+		if (!dropTargetIsValid(e)) {
+			e.detail = DND.DROP_NONE;
+			return;
+		}
 		if (e.detail == DND.DROP_NONE)
 			e.detail = DND.DROP_LINK;
 	}
@@ -34,8 +38,12 @@ public abstract class URLDropAdapter extends DropTargetAdapter {
 			event.detail = DND.DROP_NONE;
 			return;
 		}
-		handleURLString((String) event.data);
+		handleURLString((String) event.data, event);
+	}
+
+	protected boolean dropTargetIsValid(DropTargetEvent event) {
+		return true;
 	}
 
-	protected abstract void handleURLString(String urlText);
+	protected abstract void handleURLString(String urlText, DropTargetEvent event);
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
index fadb07d..cecaefb 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/URLValidator.java
@@ -12,8 +12,10 @@
 package org.eclipse.equinox.internal.provisional.p2.ui.dialogs;
 
 import java.net.URL;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.*;
+import org.eclipse.equinox.internal.p2.ui.ProvUIActivator;
+import org.eclipse.equinox.internal.p2.ui.ProvUIMessages;
+import org.eclipse.osgi.util.NLS;
 
 /**
  * 
@@ -34,5 +36,9 @@ public abstract class URLValidator {
 	public static final int REPO_AUTO_GENERATED = 3001;
 	public static final int ALTERNATE_ACTION_TAKEN = 3002;
 
-	protected abstract IStatus validateRepositoryURL(URL url, boolean contactRepositories, IStatus originalStatus, IProgressMonitor monitor);
+	public static Status getInvalidURLStatus(String urlText) {
+		return new Status(IStatus.ERROR, ProvUIActivator.PLUGIN_ID, LOCAL_VALIDATION_ERROR, NLS.bind(ProvUIMessages.URLValidator_UnrecognizedURL, urlText), null);
+	}
+
+	protected abstract IStatus validateRepositoryURL(URL url, boolean contactRepositories, IProgressMonitor monitor);
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
index d45295e..a0bfc4d 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/dialogs/UpdateAndInstallGroup.java
@@ -28,6 +28,7 @@ import org.eclipse.jface.resource.JFaceResources;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.window.SameShellProvider;
 import org.eclipse.swt.SWT;
+import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.graphics.FontMetrics;
 import org.eclipse.swt.graphics.Point;
 import org.eclipse.swt.layout.GridData;
@@ -45,6 +46,7 @@ public class UpdateAndInstallGroup {
 	private static final String BUTTONACTION = "buttonAction"; //$NON-NLS-1$
 	private static final int DEFAULT_HEIGHT = 240;
 	private static final int DEFAULT_WIDTH = 300;
+	static final int INDEX_AVAILABLE = 1;
 	TabFolder tabFolder;
 	AvailableIUGroup availableIUGroup;
 	InstalledIUGroup installedIUGroup;
@@ -87,6 +89,8 @@ public class UpdateAndInstallGroup {
 		TabItem availableTab = new TabItem(tabFolder, SWT.NONE);
 		availableTab.setText(availableString);
 		availableTab.setControl(createAvailableIUsPage(tabFolder, policies.getQueryProvider()));
+
+		setDropTarget(tabFolder);
 	}
 
 	public TabFolder getTabFolder() {
@@ -98,6 +102,7 @@ public class UpdateAndInstallGroup {
 		GridData gd = new GridData(SWT.FILL, SWT.FILL, true, true);
 		gd.widthHint = convertHorizontalDLUsToPixels(DEFAULT_WIDTH);
 		composite.setLayoutData(gd);
+		setDropTarget(composite);
 
 		GridLayout layout = new GridLayout();
 		layout.numColumns = 2;
@@ -120,6 +125,8 @@ public class UpdateAndInstallGroup {
 			}
 		});
 
+		setDropTarget(availableIUGroup.getStructuredViewer().getControl());
+
 		validateAvailableIUButtons(availableIUGroup.getStructuredViewer().getSelection());
 		return composite;
 	}
@@ -339,4 +346,25 @@ public class UpdateAndInstallGroup {
 	public InstalledIUGroup getInstalledIUGroup() {
 		return installedIUGroup;
 	}
+
+	private void setDropTarget(final Control control) {
+		// Don't bother hooking drag/drop if we won't know
+		// what to do with it.
+		if (repositoryManipulator == null)
+			return;
+
+		DropTarget target = new DropTarget(control, DND.DROP_MOVE | DND.DROP_COPY | DND.DROP_LINK);
+		target.setTransfer(new Transfer[] {URLTransfer.getInstance()});
+		target.addDropListener(new RepositoryManipulatorDropTarget(repositoryManipulator, control) {
+			protected boolean dropTargetIsValid(DropTargetEvent event) {
+				// If we are on available features page, all drops are good.
+				if (tabFolder.getSelectionIndex() == UpdateAndInstallGroup.INDEX_AVAILABLE)
+					return true;
+				if (tabFolder.getItem(INDEX_AVAILABLE) == event.item)
+					return true;
+				return false;
+			}
+		});
+
+	}
 }
diff --git a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policies.java b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policies.java
index 0eb39c9..847e3a4 100644
--- a/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policies.java
+++ b/bundles/org.eclipse.equinox.p2.ui/src/org/eclipse/equinox/internal/provisional/p2/ui/policy/Policies.java
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.equinox.internal.provisional.p2.ui.policy;
 
+
 /**
  * Abstract class for a set of policies provided by applications that
  * are used for decision making during provisioning operations.
